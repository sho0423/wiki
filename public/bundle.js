!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=28)}([function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){return(o="function"==typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return r(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":r(e)})(e)}var i;"undefined"!=typeof window?i=window:"undefined"==typeof self?(console.warn("Using browser-only version of superagent in non-browser environment"),i=void 0):i=self;var a=n(17),l=n(18),u=n(19),c=n(7),s=n(20),f=n(22);function p(){}e.exports=function(e,n){return"function"==typeof n?new t.Request("GET",e).end(n):1===arguments.length?new t.Request("GET",e):new t.Request(e,n)};var d=t=e.exports;t.Request=w,d.getXHR=function(){if(i.XMLHttpRequest&&(!i.location||"file:"!==i.location.protocol||!i.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}throw new Error("Browser-only version of superagent could not find XHR")};var h="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};function m(e){if(!c(e))return e;var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&y(t,n,e[n]);return t.join("&")}function y(e,t,n){if(void 0!==n)if(null!==n)if(Array.isArray(n))n.forEach((function(n){y(e,t,n)}));else if(c(n))for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&y(e,"".concat(t,"[").concat(r,"]"),n[r]);else e.push(encodeURIComponent(t)+"="+encodeURIComponent(n));else e.push(encodeURIComponent(t))}function v(e){for(var t,n,r={},o=e.split("&"),i=0,a=o.length;i<a;++i)-1===(n=(t=o[i]).indexOf("="))?r[decodeURIComponent(t)]="":r[decodeURIComponent(t.slice(0,n))]=decodeURIComponent(t.slice(n+1));return r}function b(e){return/[/+]json($|[^-\w])/.test(e)}function g(e){this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!==this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var t=this.xhr.status;1223===t&&(t=204),this._setStatusProperties(t),this.headers=function(e){for(var t,n,r,o,i=e.split(/\r?\n/),a={},l=0,u=i.length;l<u;++l)-1!==(t=(n=i[l]).indexOf(":"))&&(r=n.slice(0,t).toLowerCase(),o=h(n.slice(t+1)),a[r]=o);return a}(this.xhr.getAllResponseHeaders()),this.header=this.headers,this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&e._responseType?this.body=this.xhr.response:this.body="HEAD"===this.req.method?null:this._parseBody(this.text?this.text:this.xhr.response)}function w(e,t){var n=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",(function(){var e,t=null,r=null;try{r=new g(n)}catch(e){return(t=new Error("Parser is unable to parse the response")).parse=!0,t.original=e,n.xhr?(t.rawResponse=void 0===n.xhr.responseType?n.xhr.responseText:n.xhr.response,t.status=n.xhr.status?n.xhr.status:null,t.statusCode=t.status):(t.rawResponse=null,t.status=null),n.callback(t)}n.emit("response",r);try{n._isResponseOK(r)||(e=new Error(r.statusText||r.text||"Unsuccessful HTTP response"))}catch(t){e=t}e?(e.original=t,e.response=r,e.status=r.status,n.callback(e,r)):n.callback(null,r)}))}function E(e,t,n){var r=d("DELETE",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}d.serializeObject=m,d.parseString=v,d.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},d.serialize={"application/x-www-form-urlencoded":m,"application/json":l},d.parse={"application/x-www-form-urlencoded":v,"application/json":JSON.parse},s(g.prototype),g.prototype._parseBody=function(e){var t=d.parse[this.type];return this.req._parser?this.req._parser(this,e):(!t&&b(this.type)&&(t=d.parse["application/json"]),t&&e&&(e.length>0||e instanceof Object)?t(e):null)},g.prototype.toError=function(){var e=this.req,t=e.method,n=e.url,r="cannot ".concat(t," ").concat(n," (").concat(this.status,")"),o=new Error(r);return o.status=this.status,o.method=t,o.url=n,o},d.Response=g,a(w.prototype),u(w.prototype),w.prototype.type=function(e){return this.set("Content-Type",d.types[e]||e),this},w.prototype.accept=function(e){return this.set("Accept",d.types[e]||e),this},w.prototype.auth=function(e,t,n){1===arguments.length&&(t=""),"object"===o(t)&&null!==t&&(n=t,t=""),n||(n={type:"function"==typeof btoa?"basic":"auto"});var r=function(e){if("function"==typeof btoa)return btoa(e);throw new Error("Cannot use basic auth, btoa is not a function")};return this._auth(e,t,n,r)},w.prototype.query=function(e){return"string"!=typeof e&&(e=m(e)),e&&this._query.push(e),this},w.prototype.attach=function(e,t,n){if(t){if(this._data)throw new Error("superagent can't mix .send() and .attach()");this._getFormData().append(e,t,n||t.name)}return this},w.prototype._getFormData=function(){return this._formData||(this._formData=new i.FormData),this._formData},w.prototype.callback=function(e,t){if(this._shouldRetry(e,t))return this._retry();var n=this._callback;this.clearTimeout(),e&&(this._maxRetries&&(e.retries=this._retries-1),this.emit("error",e)),n(e,t)},w.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},w.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},w.prototype.ca=w.prototype.agent,w.prototype.buffer=w.prototype.ca,w.prototype.write=function(){throw new Error("Streaming is not supported in browser version of superagent")},w.prototype.pipe=w.prototype.write,w.prototype._isHost=function(e){return e&&"object"===o(e)&&!Array.isArray(e)&&"[object Object]"!==Object.prototype.toString.call(e)},w.prototype.end=function(e){this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=e||p,this._finalizeQueryString(),this._end()},w.prototype._setUploadTimeout=function(){var e=this;this._uploadTimeout&&!this._uploadTimeoutTimer&&(this._uploadTimeoutTimer=setTimeout((function(){e._timeoutError("Upload timeout of ",e._uploadTimeout,"ETIMEDOUT")}),this._uploadTimeout))},w.prototype._end=function(){if(this._aborted)return this.callback(new Error("The request has been aborted even before .end() was called"));var e=this;this.xhr=d.getXHR();var t=this.xhr,n=this._formData||this._data;this._setTimeouts(),t.onreadystatechange=function(){var n=t.readyState;if(n>=2&&e._responseTimeoutTimer&&clearTimeout(e._responseTimeoutTimer),4===n){var r;try{r=t.status}catch(e){r=0}if(!r){if(e.timedout||e._aborted)return;return e.crossDomainError()}e.emit("end")}};var r=function(t,n){n.total>0&&(n.percent=n.loaded/n.total*100,100===n.percent&&clearTimeout(e._uploadTimeoutTimer)),n.direction=t,e.emit("progress",n)};if(this.hasListeners("progress"))try{t.addEventListener("progress",r.bind(null,"download")),t.upload&&t.upload.addEventListener("progress",r.bind(null,"upload"))}catch(e){}t.upload&&this._setUploadTimeout();try{this.username&&this.password?t.open(this.method,this.url,!0,this.username,this.password):t.open(this.method,this.url,!0)}catch(e){return this.callback(e)}if(this._withCredentials&&(t.withCredentials=!0),!this._formData&&"GET"!==this.method&&"HEAD"!==this.method&&"string"!=typeof n&&!this._isHost(n)){var o=this._header["content-type"],i=this._serializer||d.serialize[o?o.split(";")[0]:""];!i&&b(o)&&(i=d.serialize["application/json"]),i&&(n=i(n))}for(var a in this.header)null!==this.header[a]&&Object.prototype.hasOwnProperty.call(this.header,a)&&t.setRequestHeader(a,this.header[a]);this._responseType&&(t.responseType=this._responseType),this.emit("request",this),t.send(void 0===n?null:n)},d.agent=function(){return new f},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach((function(e){f.prototype[e.toLowerCase()]=function(t,n){var r=new d.Request(e,t);return this._setDefaults(r),n&&r.end(n),r}})),f.prototype.del=f.prototype.delete,d.get=function(e,t,n){var r=d("GET",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},d.head=function(e,t,n){var r=d("HEAD",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},d.options=function(e,t,n){var r=d("OPTIONS",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},d.del=E,d.delete=E,d.patch=function(e,t,n){var r=d("PATCH",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},d.post=function(e,t,n){var r=d("POST",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},d.put=function(e,t,n){var r=d("PUT",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}},function(e,t,n){e.exports=n(23)()},,function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(26);e.exports=h,e.exports.parse=a,e.exports.compile=function(e,t){return u(a(e,t),t)},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=d;var i=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],o=0,a=0,l="",u=t&&t.delimiter||"/";null!=(n=i.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],y=n[3],v=n[4],b=n[5],g=n[6],w=n[7];l&&(r.push(l),l="");var E=null!=m&&null!=h&&h!==m,k="+"===g||"*"===g,x="?"===g||"*"===g,T=n[2]||u,S=v||b;r.push({name:y||o++,prefix:m||"",delimiter:T,optional:x,repeat:k,partial:E,asterisk:!!w,pattern:S?s(S):w?".*":"[^"+c(T)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function u(e,t){for(var n=new Array(e.length),i=0;i<e.length;i++)"object"===r(e[i])&&(n[i]=new RegExp("^(?:"+e[i].pattern+")$",p(t)));return function(t,r){for(var i="",a=t||{},u=(r||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=a[s.name];if(null==p){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(o(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(p),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function f(e,t){return e.keys=t,e}function p(e){return e&&e.sensitive?"":"i"}function d(e,t,n){o(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)a+=c(u);else{var s=c(u.prefix),d="(?:"+u.pattern+")";t.push(u),u.repeat&&(d+="(?:"+s+d+")*"),a+=d=u.optional?u.partial?s+"("+d+")?":"(?:"+s+"("+d+"))?":s+"("+d+")"}}var h=c(n.delimiter||"/"),m=a.slice(-h.length)===h;return r||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":r&&m?"":"(?="+h+"|$)",f(new RegExp("^"+a,p(n)),t)}function h(e,t,n){return o(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return f(e,t)}(e,t):o(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(h(e[o],t,n).source);return f(new RegExp("(?:"+r.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return d(a(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){return(o="function"==typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return r(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":r(e)})(e)}e.exports=function(e){return null!==e&&"object"===o(e)}},function(e,t,n){"use strict";e.exports=n(27)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(14)},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(25))},function(e,t,n){"use strict";var r=n(8),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=d(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),y=0;y<a.length;++y){var v=a[y];if(!(i[v]||r&&r[v]||m&&m[v]||l&&l[v])){var b=p(n,v);try{c(t,v,b)}catch(e){}}}}return t}},function(e,t,n){"use strict";function r(e,t,n,o){this.message=e,this.expected=t,this.found=n,this.location=o,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,r)}!function(e,t){function n(){this.constructor=e}n.prototype=t.prototype,e.prototype=new n}(r,Error),r.buildMessage=function(e,t){var n={literal:function(e){return'"'+o(e.text)+'"'},class:function(e){var t,n="";for(t=0;t<e.parts.length;t++)n+=e.parts[t]instanceof Array?i(e.parts[t][0])+"-"+i(e.parts[t][1]):i(e.parts[t]);return"["+(e.inverted?"^":"")+n+"]"},any:function(e){return"any character"},end:function(e){return"end of input"},other:function(e){return e.description}};function r(e){return e.charCodeAt(0).toString(16).toUpperCase()}function o(e){return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(e){return"\\x0"+r(e)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(e){return"\\x"+r(e)}))}function i(e){return e.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(e){return"\\x0"+r(e)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(e){return"\\x"+r(e)}))}return"Expected "+function(e){var t,r,o,i=new Array(e.length);for(t=0;t<e.length;t++)i[t]=(o=e[t],n[o.type](o));if(i.sort(),i.length>0){for(t=1,r=1;t<i.length;t++)i[t-1]!==i[t]&&(i[r]=i[t],r++);i.length=r}switch(i.length){case 1:return i[0];case 2:return i[0]+" or "+i[1];default:return i.slice(0,-1).join(", ")+", or "+i[i.length-1]}}(e)+" but "+function(e){return e?'"'+o(e)+'"':"end of input"}(t)+" found."},e.exports={SyntaxError:r,parse:function(e,t){t=void 0!==t?t:{};var n,o={},i={start:_},a=_,l=E("*",!1),u={type:"any"},c=E("-",!1),s=/^[^\n]/,f={type:"class",parts:["\n"],inverted:!0,ignoreCase:!1},p=E("\n",!1),d=E(">",!1),h=E("@",!1),m=function(e){return{tag:"p",label:e}},y=0,v=[{line:1,column:1}],b=0,g=[],w=0;if("startRule"in t){if(!(t.startRule in i))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=i[t.startRule]}function E(e,t){return{type:"literal",text:e,ignoreCase:t}}function k(t){var n,r=v[t];if(r)return r;for(n=t-1;!v[n];)n--;for(r={line:(r=v[n]).line,column:r.column};n<t;)10===e.charCodeAt(n)?(r.line++,r.column=1):r.column++,n++;return v[t]=r,r}function x(e,t){var n=k(e),r=k(t);return{start:{offset:e,line:n.line,column:n.column},end:{offset:t,line:r.line,column:r.column}}}function T(e){y<b||(y>b&&(b=y,g=[]),g.push(e))}function S(e,t,n){return new r(r.buildMessage(e,t),e,t,n)}function _(){var e,t;for(e=[],t=C();t!==o;)e.push(t),t=C();return e}function C(){var t;return(t=function(){var t,n,r,i,a,c,s;t=y,42===e.charCodeAt(y)?(n="*",y++):(n=o,0===w&&T(l));if(n!==o){if(r=y,i=[],a=y,c=y,w++,s=O(),w--,s===o?c=void 0:(y=c,c=o),c!==o?(e.length>y?(s=e.charAt(y),y++):(s=o,0===w&&T(u)),s!==o?a=c=[c,s]:(y=a,a=o)):(y=a,a=o),a!==o)for(;a!==o;)i.push(a),a=y,c=y,w++,s=O(),w--,s===o?c=void 0:(y=c,c=o),c!==o?(e.length>y?(s=e.charAt(y),y++):(s=o,0===w&&T(u)),s!==o?a=c=[c,s]:(y=a,a=o)):(y=a,a=o);else i=o;(r=i!==o?e.substring(r,y):i)!==o&&(i=O())!==o?(t,t=n={tag:"h2",label:r}):(y=t,t=o)}else y=t,t=o;return t}())===o&&(t=function(){var e,t,n;if(e=y,t=[],(n=P())!==o)for(;n!==o;)t.push(n),n=P();else t=o;t!==o&&(e,t={tag:"ul",items:t});return e=t}())===o&&(t=function(){var t,n,r,i,a,l,c;t=y,62===e.charCodeAt(y)?(n=">",y++):(n=o,0===w&&T(d));if(n!==o){if(r=y,i=[],a=y,l=y,w++,c=O(),w--,c===o?l=void 0:(y=l,l=o),l!==o?(e.length>y?(c=e.charAt(y),y++):(c=o,0===w&&T(u)),c!==o?a=l=[l,c]:(y=a,a=o)):(y=a,a=o),a!==o)for(;a!==o;)i.push(a),a=y,l=y,w++,c=O(),w--,c===o?l=void 0:(y=l,l=o),l!==o?(e.length>y?(c=e.charAt(y),y++):(c=o,0===w&&T(u)),c!==o?a=l=[l,c]:(y=a,a=o)):(y=a,a=o);else i=o;(r=i!==o?e.substring(r,y):i)!==o&&(i=O())!==o?(t,t=n={tag:"blockquote",label:r}):(y=t,t=o)}else y=t,t=o;return t}())===o&&(t=function(){var t,n,r,i,a;t=y,64===e.charCodeAt(y)?(n="@",y++):(n=o,0===w&&T(h));if(n!==o){if(r=y,i=[],s.test(e.charAt(y))?(a=e.charAt(y),y++):(a=o,0===w&&T(f)),a!==o)for(;a!==o;)i.push(a),s.test(e.charAt(y))?(a=e.charAt(y),y++):(a=o,0===w&&T(f));else i=o;(r=i!==o?e.substring(r,y):i)!==o?(10===e.charCodeAt(y)?(i="\n",y++):(i=o,0===w&&T(p)),i!==o?(t,t=n={tag:"a",label:r}):(y=t,t=o)):(y=t,t=o)}else y=t,t=o;return t}())===o&&(t=function(){var t,n,r;t=y,n=[],10===e.charCodeAt(y)?(r="\n",y++):(r=o,0===w&&T(p));if(r!==o)for(;r!==o;)n.push(r),10===e.charCodeAt(y)?(r="\n",y++):(r=o,0===w&&T(p));else n=o;n!==o&&(t,n={tag:"p",label:""});return t=n}())===o&&(t=function(){var t,n,r,i,a,l;t=y,n=y,r=[],i=y,a=y,w++,l=O(),w--,l===o?a=void 0:(y=a,a=o);a!==o?(e.length>y?(l=e.charAt(y),y++):(l=o,0===w&&T(u)),l!==o?i=a=[a,l]:(y=i,i=o)):(y=i,i=o);if(i!==o)for(;i!==o;)r.push(i),i=y,a=y,w++,l=O(),w--,l===o?a=void 0:(y=a,a=o),a!==o?(e.length>y?(l=e.charAt(y),y++):(l=o,0===w&&T(u)),l!==o?i=a=[a,l]:(y=i,i=o)):(y=i,i=o);else r=o;n=r!==o?e.substring(n,y):r;n!==o&&(r=O())!==o?(t,n=m(n),t=n):(y=t,t=o);return t}())===o&&(t=function(){var t,n,r,i;t=y,n=y,r=[],e.length>y?(i=e.charAt(y),y++):(i=o,0===w&&T(u));if(i!==o)for(;i!==o;)r.push(i),e.length>y?(i=e.charAt(y),y++):(i=o,0===w&&T(u));else r=o;n=r!==o?e.substring(n,y):r;n!==o&&(t,n=m(n));return t=n}()),t}function P(){var t,n,r,i,a;if(t=y,45===e.charCodeAt(y)?(n="-",y++):(n=o,0===w&&T(c)),n!==o){for(r=y,i=[],s.test(e.charAt(y))?(a=e.charAt(y),y++):(a=o,0===w&&T(f));a!==o;)i.push(a),s.test(e.charAt(y))?(a=e.charAt(y),y++):(a=o,0===w&&T(f));(r=i!==o?e.substring(r,y):i)!==o?(10===e.charCodeAt(y)?(i="\n",y++):(i=o,0===w&&T(p)),i!==o?(t,t=n=r):(y=t,t=o)):(y=t,t=o)}else y=t,t=o;return t}function O(){var t,n,r;return t=y,10===e.charCodeAt(y)?(n="\n",y++):(n=o,0===w&&T(p)),n!==o?(10===e.charCodeAt(y)?(r="\n",y++):(r=o,0===w&&T(p)),r!==o?t=n=[n,r]:(y=t,t=o)):(y=t,t=o),t}if((n=a())!==o&&y===e.length)return n;throw n!==o&&y<e.length&&T({type:"end"}),S(g,b<e.length?e.charAt(b):null,b<e.length?x(b,b+1):x(b,b))}}},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(6),i="function"==typeof Symbol&&Symbol.for,a=i?Symbol.for("react.element"):60103,l=i?Symbol.for("react.portal"):60106,u=i?Symbol.for("react.fragment"):60107,c=i?Symbol.for("react.strict_mode"):60108,s=i?Symbol.for("react.profiler"):60114,f=i?Symbol.for("react.provider"):60109,p=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,h=i?Symbol.for("react.suspense"):60113;i&&Symbol.for("react.suspense_list");var m=i?Symbol.for("react.memo"):60115,y=i?Symbol.for("react.lazy"):60116;i&&Symbol.for("react.fundamental"),i&&Symbol.for("react.responder"),i&&Symbol.for("react.scope");var v="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function E(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||g}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||g}E.prototype.isReactComponent={},E.prototype.setState=function(e,t){if("object"!==r(e)&&"function"!=typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},E.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=E.prototype;var T=x.prototype=new k;T.constructor=x,o(T,E.prototype),T.isPureReactComponent=!0;var S={current:null},_={current:null},C=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:_.current}}function N(e){return"object"===r(e)&&null!==e&&e.$$typeof===a}var R=/\/+/g,A=[];function j(e,t,n,r){if(A.length){var o=A.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function z(e,t,n){return null==e?0:function e(t,n,o,i){var u=r(t);"undefined"!==u&&"boolean"!==u||(t=null);var c=!1;if(null===t)c=!0;else switch(u){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case a:case l:c=!0}}if(c)return o(i,t,""===n?"."+U(t,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var f=n+U(u=t[s],s);c+=e(u,f,o,i)}else if(null===t||"object"!==r(t)?f=null:f="function"==typeof(f=v&&t[v]||t["@@iterator"])?f:null,"function"==typeof f)for(t=f.call(t),s=0;!(u=t.next()).done;)c+=e(u=u.value,f=n+U(u,s++),o,i);else if("object"===u)throw o=""+t,Error(b(31,"[object Object]"===o?"object with keys {"+Object.keys(t).join(", ")+"}":o,""));return c}(e,"",t,n)}function U(e,t){return"object"===r(e)&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(R,"$&/")+"/"),z(e,I,t=j(t,i,r,o)),M(t)}function F(){var e=S.current;if(null===e)throw Error(b(321));return e}var $={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;z(e,L,t=j(null,null,t,n)),M(t)},count:function(e){return z(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!N(e))throw Error(b(143));return e}},createRef:function(){return{current:null}},Component:E,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return F().useCallback(e,t)},useContext:function(e,t){return F().useContext(e,t)},useEffect:function(e,t){return F().useEffect(e,t)},useImperativeHandle:function(e,t,n){return F().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return F().useLayoutEffect(e,t)},useMemo:function(e,t){return F().useMemo(e,t)},useReducer:function(e,t,n){return F().useReducer(e,t,n)},useRef:function(e){return F().useRef(e)},useState:function(e){return F().useState(e)},Fragment:u,Profiler:s,StrictMode:c,Suspense:h,createElement:O,cloneElement:function(e,t,n){if(null==e)throw Error(b(267,e));var r=o({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=_.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)C.call(t,s)&&!P.hasOwnProperty(s)&&(r[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];r.children=c}return{$$typeof:a,type:e.type,key:i,ref:l,props:r,_owner:u}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.12.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:_,IsSomeRendererActing:{current:!1},assign:o}},H={default:$},W=H&&$||H;e.exports=W.default||W},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(0),i=n(6),a=n(15);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!o)throw Error(l(227));var u=null,c={};function s(){if(u)for(var e in c){var t=c[e],n=u.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!p[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in p[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,s=r;if(d.hasOwnProperty(s))throw Error(l(99,s));d[s]=i;var h=i.phasedRegistrationNames;if(h){for(o in h)h.hasOwnProperty(o)&&f(h[o],a,s);o=!0}else i.registrationName?(f(i.registrationName,a,s),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function f(e,t,n){if(h[e])throw Error(l(100,e));h[e]=t,m[e]=t.eventTypes[n].dependencies}var p=[],d={},h={},m={};function y(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var v=!1,b=null,g=!1,w=null,E={onError:function(e){v=!0,b=e}};function k(e,t,n,r,o,i,a,l,u){v=!1,b=null,y.apply(E,arguments)}var x=null,T=null,S=null;function _(e,t,n){var r=e.type||"unknown-event";e.currentTarget=S(n),function(e,t,n,r,o,i,a,u,c){if(k.apply(this,arguments),v){if(!v)throw Error(l(198));var s=b;v=!1,b=null,g||(g=!0,w=s)}}(r,t,void 0,e),e.currentTarget=null}function C(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function P(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function N(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)_(e,t[r],n[r]);else t&&_(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function R(e){if(null!==e&&(O=C(O,e)),e=O,O=null,e){if(P(e,N),O)throw Error(l(95));if(g)throw e=w,g=!1,w=null,e}}var A={injectEventPluginOrder:function(e){if(u)throw Error(l(101));u=Array.prototype.slice.call(e),s()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!c.hasOwnProperty(t)||c[t]!==r){if(c[t])throw Error(l(102,t));c[t]=r,n=!0}}n&&s()}};function j(e,t){var n=e.stateNode;if(!n)return null;var o=x(n);if(!o)return null;n=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(o=!o.disabled)||(o=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!o;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,r(n)));return n}var M=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;M.hasOwnProperty("ReactCurrentDispatcher")||(M.ReactCurrentDispatcher={current:null}),M.hasOwnProperty("ReactCurrentBatchConfig")||(M.ReactCurrentBatchConfig={suspense:null});var z=/^(.*)[\\\/]/,U="function"==typeof Symbol&&Symbol.for,L=U?Symbol.for("react.element"):60103,I=U?Symbol.for("react.portal"):60106,D=U?Symbol.for("react.fragment"):60107,F=U?Symbol.for("react.strict_mode"):60108,$=U?Symbol.for("react.profiler"):60114,H=U?Symbol.for("react.provider"):60109,W=U?Symbol.for("react.context"):60110,B=U?Symbol.for("react.concurrent_mode"):60111,q=U?Symbol.for("react.forward_ref"):60112,V=U?Symbol.for("react.suspense"):60113,Q=U?Symbol.for("react.suspense_list"):60120,K=U?Symbol.for("react.memo"):60115,X=U?Symbol.for("react.lazy"):60116;U&&Symbol.for("react.fundamental"),U&&Symbol.for("react.responder"),U&&Symbol.for("react.scope");var Y="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!==r(e)?null:"function"==typeof(e=Y&&e[Y]||e["@@iterator"])?e:null}function J(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case D:return"Fragment";case I:return"Portal";case $:return"Profiler";case F:return"StrictMode";case V:return"Suspense";case Q:return"SuspenseList"}if("object"===r(e))switch(e.$$typeof){case W:return"Context.Consumer";case H:return"Context.Provider";case q:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case K:return J(e.type);case X:if(e=1===e._status?e._result:null)return J(e)}return null}function Z(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=J(e.type);n=null,r&&(n=J(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ee=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),te=null,ne=null,re=null;function oe(e){if(e=T(e)){if("function"!=typeof te)throw Error(l(280));var t=x(e.stateNode);te(e.stateNode,e.type,t)}}function ie(e){ne?re?re.push(e):re=[e]:ne=e}function ae(){if(ne){var e=ne,t=re;if(re=ne=null,oe(e),t)for(e=0;e<t.length;e++)oe(t[e])}}function le(e,t){return e(t)}function ue(e,t,n,r){return e(t,n,r)}function ce(){}var se=le,fe=!1,pe=!1;function de(){null===ne&&null===re||(ce(),ae())}new Map;var he=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,me=Object.prototype.hasOwnProperty,ye={},ve={};function be(e,t,n,o){if(null==t||function(e,t,n,o){if(null!==n&&0===n.type)return!1;switch(r(t)){case"function":case"symbol":return!0;case"boolean":return!o&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,o))return!0;if(o)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function ge(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var we={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){we[e]=new ge(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];we[t]=new ge(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){we[e]=new ge(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){we[e]=new ge(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){we[e]=new ge(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){we[e]=new ge(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){we[e]=new ge(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){we[e]=new ge(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){we[e]=new ge(e,5,!1,e.toLowerCase(),null,!1)}));var Ee=/[\-:]([a-z])/g;function ke(e){return e[1].toUpperCase()}function xe(e){switch(r(e)){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Te(e,t,n,r){var o=we.hasOwnProperty(t)?we[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(be(t,n,o,r)&&(n=null),r||null===o?function(e){return!!me.call(ve,e)||!me.call(ye,e)&&(he.test(e)?ve[e]=!0:(ye[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Se(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function _e(e){e._valueTracker||(e._valueTracker=function(e){var t=Se(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ce(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Se(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Pe(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Oe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=xe(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ne(e,t){null!=(t=t.checked)&&Te(e,"checked",t,!1)}function Re(e,t){Ne(e,t);var n=xe(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?je(e,t.type,n):t.hasOwnProperty("defaultValue")&&je(e,t.type,xe(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ae(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function je(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Me(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ze(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+xe(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ue(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Le(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw Error(l(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(l(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:xe(n)}}function Ie(e,t){var n=xe(t.value),r=xe(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Ee,ke);we[t]=new ge(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Ee,ke);we[t]=new ge(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Ee,ke);we[t]=new ge(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){we[e]=new ge(e,1,!1,e.toLowerCase(),null,!1)})),we.xlinkHref=new ge("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){we[e]=new ge(e,1,!1,e.toLowerCase(),null,!0)}));var Fe="http://www.w3.org/1999/xhtml",$e="http://www.w3.org/2000/svg";function He(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function We(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?He(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Be,qe=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==$e||"innerHTML"in e)e.innerHTML=t;else{for((Be=Be||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Be.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Qe(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ke={animationend:Qe("Animation","AnimationEnd"),animationiteration:Qe("Animation","AnimationIteration"),animationstart:Qe("Animation","AnimationStart"),transitionend:Qe("Transition","TransitionEnd")},Xe={},Ye={};function Ge(e){if(Xe[e])return Xe[e];if(!Ke[e])return e;var t,n=Ke[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ye)return Xe[e]=n[t];return e}ee&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete Ke.animationend.animation,delete Ke.animationiteration.animation,delete Ke.animationstart.animation),"TransitionEvent"in window||delete Ke.transitionend.transition);var Je=Ge("animationend"),Ze=Ge("animationiteration"),et=Ge("animationstart"),tt=Ge("transitionend"),nt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function rt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function ot(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function it(e){if(rt(e)!==e)throw Error(l(188))}function at(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=rt(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return it(o),e;if(i===r)return it(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var lt,ut,ct,st=!1,ft=[],pt=null,dt=null,ht=null,mt=new Map,yt=new Map,vt=[],bt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),gt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function wt(e,t,n,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r}}function Et(e,t){switch(e){case"focus":case"blur":pt=null;break;case"dragenter":case"dragleave":dt=null;break;case"mouseover":case"mouseout":ht=null;break;case"pointerover":case"pointerout":mt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":yt.delete(t.pointerId)}}function kt(e,t,n,r,o){return null===e||e.nativeEvent!==o?(e=wt(t,n,r,o),null!==t&&(null!==(t=fr(t))&&ut(t)),e):(e.eventSystemFlags|=r,e)}function xt(e){var t=sr(e.target);if(null!==t){var n=rt(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=ot(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){ct(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Tt(e){if(null!==e.blockedOn)return!1;var t=jn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);if(null!==t){var n=fr(t);return null!==n&&ut(n),e.blockedOn=t,!1}return!0}function St(e,t,n){Tt(e)&&n.delete(t)}function _t(){for(st=!1;0<ft.length;){var e=ft[0];if(null!==e.blockedOn){null!==(e=fr(e.blockedOn))&&lt(e);break}var t=jn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);null!==t?e.blockedOn=t:ft.shift()}null!==pt&&Tt(pt)&&(pt=null),null!==dt&&Tt(dt)&&(dt=null),null!==ht&&Tt(ht)&&(ht=null),mt.forEach(St),yt.forEach(St)}function Ct(e,t){e.blockedOn===t&&(e.blockedOn=null,st||(st=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,_t)))}function Pt(e){function t(t){return Ct(t,e)}if(0<ft.length){Ct(ft[0],e);for(var n=1;n<ft.length;n++){var r=ft[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==pt&&Ct(pt,e),null!==dt&&Ct(dt,e),null!==ht&&Ct(ht,e),mt.forEach(t),yt.forEach(t),n=0;n<vt.length;n++)(r=vt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<vt.length&&null===(n=vt[0]).blockedOn;)xt(n),null===n.blockedOn&&vt.shift()}function Ot(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Nt(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Rt(e,t,n){(t=j(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function At(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Nt(t);for(t=n.length;0<t--;)Rt(n[t],"captured",e);for(t=0;t<n.length;t++)Rt(n[t],"bubbled",e)}}function jt(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=j(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function Mt(e){e&&e.dispatchConfig.registrationName&&jt(e._targetInst,null,e)}function zt(e){P(e,At)}function Ut(){return!0}function Lt(){return!1}function It(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Ut:Lt,this.isPropagationStopped=Lt,this}function Dt(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ft(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function $t(e){e.eventPool=[],e.getPooled=Dt,e.release=Ft}i(It.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Ut)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Ut)},persist:function(){this.isPersistent=Ut},isPersistent:Lt,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Lt,this._dispatchInstances=this._dispatchListeners=null}}),It.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},It.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,$t(n),n},$t(It);var Ht=It.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Wt=It.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Bt=It.extend({view:null,detail:null}),qt=Bt.extend({relatedTarget:null});function Vt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Qt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Kt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Xt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Yt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Xt[e])&&!!t[e]}function Gt(){return Yt}for(var Jt=Bt.extend({key:function(e){if(e.key){var t=Qt[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Vt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Kt[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Gt,charCode:function(e){return"keypress"===e.type?Vt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Vt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Zt=0,en=0,tn=!1,nn=!1,rn=Bt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Gt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Zt;return Zt=e.screenX,tn?"mousemove"===e.type?e.screenX-t:0:(tn=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=en;return en=e.screenY,nn?"mousemove"===e.type?e.screenY-t:0:(nn=!0,0)}}),on=rn.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),an=rn.extend({dataTransfer:null}),ln=Bt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Gt}),un=It.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),cn=rn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),sn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Je,"animationEnd",2],[Ze,"animationIteration",2],[et,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[tt,"transitionEnd",2],["waiting","waiting",2]],fn={},pn={},dn=0;dn<sn.length;dn++){var hn=sn[dn],mn=hn[0],yn=hn[1],vn=hn[2],bn="on"+(yn[0].toUpperCase()+yn.slice(1)),gn={phasedRegistrationNames:{bubbled:bn,captured:bn+"Capture"},dependencies:[mn],eventPriority:vn};fn[yn]=gn,pn[mn]=gn}var wn={eventTypes:fn,getEventPriority:function(e){return void 0!==(e=pn[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var o=pn[e];if(!o)return null;switch(e){case"keypress":if(0===Vt(n))return null;case"keydown":case"keyup":e=Jt;break;case"blur":case"focus":e=qt;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=rn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=an;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ln;break;case Je:case Ze:case et:e=Ht;break;case tt:e=un;break;case"scroll":e=Bt;break;case"wheel":e=cn;break;case"copy":case"cut":case"paste":e=Wt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=on;break;default:e=It}return zt(t=e.getPooled(o,t,n,r)),t}},En=a.unstable_UserBlockingPriority,kn=a.unstable_runWithPriority,xn=wn.getEventPriority,Tn=[];function Sn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=sr(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Ot(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=e.eventSystemFlags,l=null,u=0;u<p.length;u++){var c=p[u];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=C(l,c))}R(l)}}var _n=!0;function Cn(e,t){Pn(t,e,!1)}function Pn(e,t,n){switch(xn(t)){case 0:var r=On.bind(null,t,1);break;case 1:r=Nn.bind(null,t,1);break;default:r=An.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function On(e,t,n){fe||ce();var r=An,o=fe;fe=!0;try{ue(r,e,t,n)}finally{(fe=o)||de()}}function Nn(e,t,n){kn(En,An.bind(null,e,t,n))}function Rn(e,t,n,r){if(Tn.length){var o=Tn.pop();o.topLevelType=e,o.eventSystemFlags=t,o.nativeEvent=n,o.targetInst=r,e=o}else e={topLevelType:e,eventSystemFlags:t,nativeEvent:n,targetInst:r,ancestors:[]};try{if(t=Sn,n=e,pe)t(n,void 0);else{pe=!0;try{se(t,n,void 0)}finally{pe=!1,de()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,Tn.length<10&&Tn.push(e)}}function An(e,t,n){if(_n)if(0<ft.length&&-1<bt.indexOf(e))e=wt(null,e,t,n),ft.push(e);else{var r=jn(e,t,n);null===r?Et(e,n):-1<bt.indexOf(e)?(e=wt(r,e,t,n),ft.push(e)):function(e,t,n,r){switch(t){case"focus":return pt=kt(pt,e,t,n,r),!0;case"dragenter":return dt=kt(dt,e,t,n,r),!0;case"mouseover":return ht=kt(ht,e,t,n,r),!0;case"pointerover":var o=r.pointerId;return mt.set(o,kt(mt.get(o)||null,e,t,n,r)),!0;case"gotpointercapture":return o=r.pointerId,yt.set(o,kt(yt.get(o)||null,e,t,n,r)),!0}return!1}(r,e,t,n)||(Et(e,n),Rn(e,t,n,null))}}function jn(e,t,n){var r=Ot(n);if(null!==(r=sr(r))){var o=rt(r);if(null===o)r=null;else{var i=o.tag;if(13===i){if(null!==(r=ot(o)))return r;r=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return Rn(e,t,n,r),null}function Mn(e){if(!ee)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var zn=new("function"==typeof WeakMap?WeakMap:Map);function Un(e){var t=zn.get(e);return void 0===t&&(t=new Set,zn.set(e,t)),t}function Ln(e,t,n){if(!n.has(e)){switch(e){case"scroll":Pn(t,"scroll",!0);break;case"focus":case"blur":Pn(t,"focus",!0),Pn(t,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":Mn(e)&&Pn(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===nt.indexOf(e)&&Cn(e,t)}n.add(e)}}var In={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Dn=["Webkit","ms","Moz","O"];function Fn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||In.hasOwnProperty(e)&&In[e]?(""+t).trim():t+"px"}function $n(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=Fn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(In).forEach((function(e){Dn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),In[t]=In[e]}))}));var Hn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Wn(e,t){if(t){if(Hn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if(!("object"===r(t.dangerouslySetInnerHTML)&&"__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!==r(t.style))throw Error(l(62,""))}}function Bn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function qn(e,t){var n=Un(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=m[t];for(var r=0;r<t.length;r++)Ln(t[r],e,n)}function Vn(){}function Qn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Kn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Xn(e,t){var n,r=Kn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Kn(r)}}function Yn(){for(var e=window,t=Qn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Qn((e=t.contentWindow).document)}return t}function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Jn=null,Zn=null;function er(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function tr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"===r(t.dangerouslySetInnerHTML)&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var nr="function"==typeof setTimeout?setTimeout:void 0,rr="function"==typeof clearTimeout?clearTimeout:void 0;function or(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function ir(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ar=Math.random().toString(36).slice(2),lr="__reactInternalInstance$"+ar,ur="__reactEventHandlers$"+ar,cr="__reactContainere$"+ar;function sr(e){var t=e[lr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[cr]||n[lr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ir(e);null!==e;){if(n=e[lr])return n;e=ir(e)}return t}n=(e=n).parentNode}return null}function fr(e){return!(e=e[lr]||e[cr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function pr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function dr(e){return e[ur]||null}var hr=null,mr=null,yr=null;function vr(){if(yr)return yr;var e,t,n=mr,r=n.length,o="value"in hr?hr.value:hr.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return yr=o.slice(e,1<t?1-t:void 0)}var br=It.extend({data:null}),gr=It.extend({data:null}),wr=[9,13,27,32],Er=ee&&"CompositionEvent"in window,kr=null;ee&&"documentMode"in document&&(kr=document.documentMode);var xr=ee&&"TextEvent"in window&&!kr,Tr=ee&&(!Er||kr&&8<kr&&11>=kr),Sr=String.fromCharCode(32),_r={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Cr=!1;function Pr(e,t){switch(e){case"keyup":return-1!==wr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Or(e){return"object"===r(e=e.detail)&&"data"in e?e.data:null}var Nr=!1;var Rr={eventTypes:_r,extractEvents:function(e,t,n,r){var o;if(Er)e:{switch(e){case"compositionstart":var i=_r.compositionStart;break e;case"compositionend":i=_r.compositionEnd;break e;case"compositionupdate":i=_r.compositionUpdate;break e}i=void 0}else Nr?Pr(e,n)&&(i=_r.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=_r.compositionStart);return i?(Tr&&"ko"!==n.locale&&(Nr||i!==_r.compositionStart?i===_r.compositionEnd&&Nr&&(o=vr()):(mr="value"in(hr=r)?hr.value:hr.textContent,Nr=!0)),i=br.getPooled(i,t,n,r),o?i.data=o:null!==(o=Or(n))&&(i.data=o),zt(i),o=i):o=null,(e=xr?function(e,t){switch(e){case"compositionend":return Or(t);case"keypress":return 32!==t.which?null:(Cr=!0,Sr);case"textInput":return(e=t.data)===Sr&&Cr?null:e;default:return null}}(e,n):function(e,t){if(Nr)return"compositionend"===e||!Er&&Pr(e,t)?(e=vr(),yr=mr=hr=null,Nr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Tr&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=gr.getPooled(_r.beforeInput,t,n,r)).data=e,zt(t)):t=null,null===o?t:null===t?o:[o,t]}},Ar={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ar[e.type]:"textarea"===t}var Mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function zr(e,t,n){return(e=It.getPooled(Mr.change,e,t,n)).type="change",ie(n),zt(e),e}var Ur=null,Lr=null;function Ir(e){R(e)}function Dr(e){if(Ce(pr(e)))return e}function Fr(e,t){if("change"===e)return t}var $r=!1;function Hr(){Ur&&(Ur.detachEvent("onpropertychange",Wr),Lr=Ur=null)}function Wr(e){if("value"===e.propertyName&&Dr(Lr))if(e=zr(Lr,e,Ot(e)),fe)R(e);else{fe=!0;try{le(Ir,e)}finally{fe=!1,de()}}}function Br(e,t,n){"focus"===e?(Hr(),Lr=n,(Ur=t).attachEvent("onpropertychange",Wr)):"blur"===e&&Hr()}function qr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Dr(Lr)}function Vr(e,t){if("click"===e)return Dr(t)}function Qr(e,t){if("input"===e||"change"===e)return Dr(t)}ee&&($r=Mn("input")&&(!document.documentMode||9<document.documentMode));var Kr,Xr={eventTypes:Mr,_isInputEventSupported:$r,extractEvents:function(e,t,n,r){var o=t?pr(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=Fr;else if(jr(o))if($r)a=Qr;else{a=qr;var l=Br}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Vr);if(a&&(a=a(e,t)))return zr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&je(o,"number",o.value)}},Yr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gr={eventTypes:Yr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?sr(t):null)&&(t!==(i=rt(t))||5!==t.tag&&6!==t.tag)&&(t=null)):a=null,a===t)return null;if("mouseout"===e||"mouseover"===e)var l=rn,u=Yr.mouseLeave,c=Yr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=on,u=Yr.pointerLeave,c=Yr.pointerEnter,s="pointer");if(e=null==a?o:pr(a),o=null==t?o:pr(t),(u=l.getPooled(u,a,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(r=l.getPooled(c,t,n,r)).type=s+"enter",r.target=o,r.relatedTarget=e,s=t,(l=a)&&s)e:{for(e=s,a=0,t=c=l;t;t=Nt(t))a++;for(t=0,o=e;o;o=Nt(o))t++;for(;0<a-t;)c=Nt(c),a--;for(;0<t-a;)e=Nt(e),t--;for(;a--;){if(c===e||c===e.alternate)break e;c=Nt(c),e=Nt(e)}c=null}else c=null;for(e=c,c=[];l&&l!==e&&(null===(a=l.alternate)||a!==e);)c.push(l),l=Nt(l);for(l=[];s&&s!==e&&(null===(a=s.alternate)||a!==e);)l.push(s),s=Nt(s);for(s=0;s<c.length;s++)jt(c[s],"bubbled",u);for(s=l.length;0<s--;)jt(l[s],"captured",r);return n===Kr?(Kr=null,[u]):(Kr=n,[u,r])}};var Jr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Zr=Object.prototype.hasOwnProperty;function eo(e,t){if(Jr(e,t))return!0;if("object"!==r(e)||null===e||"object"!==r(t)||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(o=0;o<n.length;o++)if(!Zr.call(t,n[o])||!Jr(e[n[o]],t[n[o]]))return!1;return!0}var to=ee&&"documentMode"in document&&11>=document.documentMode,no={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ro=null,oo=null,io=null,ao=!1;function lo(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return ao||null==ro||ro!==Qn(n)?null:("selectionStart"in(n=ro)&&Gn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},io&&eo(io,n)?null:(io=n,(e=It.getPooled(no.select,oo,e,t)).type="select",e.target=ro,zt(e),e))}var uo={eventTypes:no,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Un(i),o=m.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?pr(t):window,e){case"focus":(jr(i)||"true"===i.contentEditable)&&(ro=i,oo=t,io=null);break;case"blur":io=oo=ro=null;break;case"mousedown":ao=!0;break;case"contextmenu":case"mouseup":case"dragend":return ao=!1,lo(n,r);case"selectionchange":if(to)break;case"keydown":case"keyup":return lo(n,r)}return null}};A.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=dr,T=fr,S=pr,A.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Gr,ChangeEventPlugin:Xr,SelectEventPlugin:uo,BeforeInputEventPlugin:Rr}),new Set;var co=[],so=-1;function fo(e){0>so||(e.current=co[so],co[so]=null,so--)}function po(e,t){so++,co[so]=e.current,e.current=t}var ho={},mo={current:ho},yo={current:!1},vo=ho;function bo(e,t){var n=e.type.contextTypes;if(!n)return ho;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function go(e){return null!=(e=e.childContextTypes)}function wo(e){fo(yo),fo(mo)}function Eo(e){fo(yo),fo(mo)}function ko(e,t,n){if(mo.current!==ho)throw Error(l(168));po(mo,t),po(yo,n)}function xo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,J(t)||"Unknown",o));return i({},n,{},r)}function To(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||ho,vo=mo.current,po(mo,t),po(yo,yo.current),!0}function So(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(t=xo(e,t,vo),r.__reactInternalMemoizedMergedChildContext=t,fo(yo),fo(mo),po(mo,t)):fo(yo),po(yo,n)}var _o=a.unstable_runWithPriority,Co=a.unstable_scheduleCallback,Po=a.unstable_cancelCallback,Oo=a.unstable_shouldYield,No=a.unstable_requestPaint,Ro=a.unstable_now,Ao=a.unstable_getCurrentPriorityLevel,jo=a.unstable_ImmediatePriority,Mo=a.unstable_UserBlockingPriority,zo=a.unstable_NormalPriority,Uo=a.unstable_LowPriority,Lo=a.unstable_IdlePriority,Io={},Do=void 0!==No?No:function(){},Fo=null,$o=null,Ho=!1,Wo=Ro(),Bo=1e4>Wo?Ro:function(){return Ro()-Wo};function qo(){switch(Ao()){case jo:return 99;case Mo:return 98;case zo:return 97;case Uo:return 96;case Lo:return 95;default:throw Error(l(332))}}function Vo(e){switch(e){case 99:return jo;case 98:return Mo;case 97:return zo;case 96:return Uo;case 95:return Lo;default:throw Error(l(332))}}function Qo(e,t){return e=Vo(e),_o(e,t)}function Ko(e,t,n){return e=Vo(e),Co(e,t,n)}function Xo(e){return null===Fo?(Fo=[e],$o=Co(jo,Go)):Fo.push(e),Io}function Yo(){if(null!==$o){var e=$o;$o=null,Po(e)}Go()}function Go(){if(!Ho&&null!==Fo){Ho=!0;var e=0;try{var t=Fo;Qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),Co(jo,Yo),t}finally{Ho=!1}}}var Jo=3;function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function ei(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ti={current:null},ni=null,ri=null,oi=null;function ii(){oi=ri=ni=null}function ai(e,t){var n=e.type._context;po(ti,n._currentValue),n._currentValue=t}function li(e){var t=ti.current;fo(ti),e.type._context._currentValue=t}function ui(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ci(e,t){ni=e,oi=ri=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Wa=!0),e.firstContext=null)}function si(e,t){if(oi!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(oi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ri){if(null===ni)throw Error(l(308));ri=t,ni.dependencies={expirationTime:0,firstContext:t,responders:null}}else ri=ri.next=t;return e._currentValue}var fi=!1;function pi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function di(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function hi(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function mi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function yi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=pi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=pi(e.memoizedState),o=n.updateQueue=pi(n.memoizedState)):r=e.updateQueue=di(o):null===o&&(o=n.updateQueue=di(r));null===o||r===o?mi(r,t):null===r.lastUpdate||null===o.lastUpdate?(mi(r,t),mi(o,t)):(mi(r,t),o.lastUpdate=t)}function vi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=pi(e.memoizedState):bi(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function bi(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=di(t)),t}function gi(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(o="function"==typeof(e=n.payload)?e.call(a,r,o):e))break;return i({},r,o);case 2:fi=!0}return r}function wi(e,t,n,r,o){fi=!1;for(var i=(t=bi(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(du(s,u.suspenseConfig),c=gi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=gi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,hu(l),e.expirationTime=l,e.memoizedState=c}function Ei(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),ki(t.firstEffect,n),t.firstEffect=t.lastEffect=null,ki(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function ki(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if("function"!=typeof n)throw Error(l(191,n));n.call(r)}e=e.nextEffect}}var xi=M.ReactCurrentBatchConfig,Ti=(new o.Component).refs;function Si(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var _i={isMounted:function(e){return!!(e=e._reactInternalFiber)&&rt(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=eu(),o=xi.suspense;(o=hi(r=tu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),yi(e,o),nu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=eu(),o=xi.suspense;(o=hi(r=tu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),yi(e,o),nu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=eu(),r=xi.suspense;(r=hi(n=tu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),yi(e,r),nu(e,n)}};function Ci(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!eo(n,r)||!eo(o,i))}function Pi(e,t,n){var o=!1,i=ho,a=t.contextType;return"object"===r(a)&&null!==a?a=si(a):(i=go(t)?vo:mo.current,a=(o=null!=(o=t.contextTypes))?bo(e,i):ho),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=_i,e.stateNode=t,t._reactInternalFiber=e,o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function Oi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&_i.enqueueReplaceState(t,t.state,null)}function Ni(e,t,n,o){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=Ti;var a=t.contextType;"object"===r(a)&&null!==a?i.context=si(a):(a=go(t)?vo:mo.current,i.context=bo(e,a)),null!==(a=e.updateQueue)&&(wi(e,a,n,i,o),i.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(Si(e,t,a,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&_i.enqueueReplaceState(i,i.state,null),null!==(a=e.updateQueue)&&(wi(e,a,n,i,o),i.state=e.memoizedState)),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var Ri=Array.isArray;function Ai(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!==r(e)){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var o=n.stateNode}if(!o)throw Error(l(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=o.refs;t===Ti&&(t=o.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ji(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Mi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t,n){return(e=Mu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function c(e,t,n,r){return null===t||6!==t.tag?((t=Lu(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=Ai(e,t,n),r.return=e,r):((r=zu(n.type,n.key,n.props,null,e.mode,r)).ref=Ai(e,t,n),r.return=e,r)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Iu(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function p(e,t,n,r,o){return null===t||7!==t.tag?((t=Uu(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Lu(""+t,e.mode,n)).return=e,t;if("object"===r(t)&&null!==t){switch(t.$$typeof){case L:return(n=zu(t.type,t.key,t.props,null,e.mode,n)).ref=Ai(e,null,t),n.return=e,n;case I:return(t=Iu(t,e.mode,n)).return=e,t}if(Ri(t)||G(t))return(t=Uu(t,e.mode,n,null)).return=e,t;ji(e,t)}return null}function h(e,t,n,o){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:c(e,t,""+n,o);if("object"===r(n)&&null!==n){switch(n.$$typeof){case L:return n.key===i?n.type===D?p(e,t,n.props.children,o,i):s(e,t,n,o):null;case I:return n.key===i?f(e,t,n,o):null}if(Ri(n)||G(n))return null!==i?null:p(e,t,n,o,null);ji(e,n)}return null}function m(e,t,n,o,i){if("string"==typeof o||"number"==typeof o)return c(t,e=e.get(n)||null,""+o,i);if("object"===r(o)&&null!==o){switch(o.$$typeof){case L:return e=e.get(null===o.key?n:o.key)||null,o.type===D?p(t,e,o.props.children,i,o.key):s(t,e,o,i);case I:return f(t,e=e.get(null===o.key?n:o.key)||null,o,i)}if(Ri(o)||G(o))return p(t,e=e.get(n)||null,o,i,null);ji(t,o)}return null}function y(r,i,l,u){for(var c=null,s=null,f=i,p=i=0,y=null;null!==f&&p<l.length;p++){f.index>p?(y=f,f=null):y=f.sibling;var v=h(r,f,l[p],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(r,f),i=a(v,i,p),null===s?c=v:s.sibling=v,s=v,f=y}if(p===l.length)return n(r,f),c;if(null===f){for(;p<l.length;p++)null!==(f=d(r,l[p],u))&&(i=a(f,i,p),null===s?c=f:s.sibling=f,s=f);return c}for(f=o(r,f);p<l.length;p++)null!==(y=m(f,r,p,l[p],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?p:y.key),i=a(y,i,p),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(r,e)})),c}function v(r,i,u,c){var s=G(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,p=i,y=i=0,v=null,b=u.next();null!==p&&!b.done;y++,b=u.next()){p.index>y?(v=p,p=null):v=p.sibling;var g=h(r,p,b.value,c);if(null===g){null===p&&(p=v);break}e&&p&&null===g.alternate&&t(r,p),i=a(g,i,y),null===f?s=g:f.sibling=g,f=g,p=v}if(b.done)return n(r,p),s;if(null===p){for(;!b.done;y++,b=u.next())null!==(b=d(r,b.value,c))&&(i=a(b,i,y),null===f?s=b:f.sibling=b,f=b);return s}for(p=o(r,p);!b.done;y++,b=u.next())null!==(b=m(p,r,y,b.value,c))&&(e&&null!==b.alternate&&p.delete(null===b.key?y:b.key),i=a(b,i,y),null===f?s=b:f.sibling=b,f=b);return e&&p.forEach((function(e){return t(r,e)})),s}return function(e,o,a,c){var s="object"===r(a)&&null!==a&&a.type===D&&null===a.key;s&&(a=a.props.children);var f="object"===r(a)&&null!==a;if(f)switch(a.$$typeof){case L:e:{for(f=a.key,s=o;null!==s;){if(s.key===f){if(7===s.tag?a.type===D:s.elementType===a.type){n(e,s.sibling),(o=i(s,a.type===D?a.props.children:a.props)).ref=Ai(e,s,a),o.return=e,e=o;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===D?((o=Uu(a.props.children,e.mode,c,a.key)).return=e,e=o):((c=zu(a.type,a.key,a.props,null,e.mode,c)).ref=Ai(e,o,a),c.return=e,e=c)}return u(e);case I:e:{for(s=a.key;null!==o;){if(o.key===s){if(4===o.tag&&o.stateNode.containerInfo===a.containerInfo&&o.stateNode.implementation===a.implementation){n(e,o.sibling),(o=i(o,a.children||[])).return=e,e=o;break e}n(e,o);break}t(e,o),o=o.sibling}(o=Iu(a,e.mode,c)).return=e,e=o}return u(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==o&&6===o.tag?(n(e,o.sibling),(o=i(o,a)).return=e,e=o):(n(e,o),(o=Lu(a,e.mode,c)).return=e,e=o),u(e);if(Ri(a))return y(e,o,a,c);if(G(a))return v(e,o,a,c);if(f&&ji(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,o)}}var zi=Mi(!0),Ui=Mi(!1),Li={},Ii={current:Li},Di={current:Li},Fi={current:Li};function $i(e){if(e===Li)throw Error(l(174));return e}function Hi(e,t){po(Fi,t),po(Di,e),po(Ii,Li);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:We(null,"");break;default:t=We(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}fo(Ii),po(Ii,t)}function Wi(e){fo(Ii),fo(Di),fo(Fi)}function Bi(e){$i(Fi.current);var t=$i(Ii.current),n=We(t,e.type);t!==n&&(po(Di,e),po(Ii,n))}function qi(e){Di.current===e&&(fo(Ii),fo(Di))}var Vi={current:0};function Qi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ki(e,t){return{responder:e,props:t}}var Xi=M.ReactCurrentDispatcher,Yi=M.ReactCurrentBatchConfig,Gi=0,Ji=null,Zi=null,ea=null,ta=null,na=null,ra=null,oa=0,ia=null,aa=0,la=!1,ua=null,ca=0;function sa(){throw Error(l(321))}function fa(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jr(e[n],t[n]))return!1;return!0}function pa(e,t,n,r,o,i){if(Gi=i,Ji=t,ea=null!==e?e.memoizedState:null,Xi.current=null===ea?Ra:Aa,t=n(r,o),la){do{la=!1,ca+=1,ea=null!==e?e.memoizedState:null,ra=ta,ia=na=Zi=null,Xi.current=Aa,t=n(r,o)}while(la);ua=null,ca=0}if(Xi.current=Na,(e=Ji).memoizedState=ta,e.expirationTime=oa,e.updateQueue=ia,e.effectTag|=aa,e=null!==Zi&&null!==Zi.next,Gi=0,ra=na=ta=ea=Zi=Ji=null,oa=0,ia=null,aa=0,e)throw Error(l(300));return t}function da(){Xi.current=Na,Gi=0,ra=na=ta=ea=Zi=Ji=null,oa=0,ia=null,aa=0,la=!1,ua=null,ca=0}function ha(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===na?ta=na=e:na=na.next=e,na}function ma(){if(null!==ra)ra=(na=ra).next,ea=null!==(Zi=ea)?Zi.next:null;else{if(null===ea)throw Error(l(310));var e={memoizedState:(Zi=ea).memoizedState,baseState:Zi.baseState,queue:Zi.queue,baseUpdate:Zi.baseUpdate,next:null};na=null===na?ta=e:na.next=e,ea=Zi.next}return na}function ya(e,t){return"function"==typeof t?t(e):t}function va(e){var t=ma(),n=t.queue;if(null===n)throw Error(l(311));if(n.lastRenderedReducer=e,0<ca){var r=n.dispatch;if(null!==ua){var o=ua.get(n);if(void 0!==o){ua.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Jr(i,t.memoizedState)||(Wa=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var a=t.baseUpdate;if(i=t.baseState,null!==a?(null!==r&&(r.next=null),r=a.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Gi?(s||(s=!0,u=a,o=i),f>oa&&hu(oa=f)):(du(f,c.suspenseConfig),i=c.eagerReducer===e?c.eagerState:e(i,c.action)),a=c,c=c.next}while(null!==c&&c!==r);s||(u=a,o=i),Jr(i,t.memoizedState)||(Wa=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function ba(e){var t=ha();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ya,lastRenderedState:e}).dispatch=Oa.bind(null,Ji,e),[t.memoizedState,e]}function ga(e){return va(ya)}function wa(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ia?(ia={lastEffect:null}).lastEffect=e.next=e:null===(t=ia.lastEffect)?ia.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ia.lastEffect=e),e}function Ea(e,t,n,r){var o=ha();aa|=e,o.memoizedState=wa(t,n,void 0,void 0===r?null:r)}function ka(e,t,n,r){var o=ma();r=void 0===r?null:r;var i=void 0;if(null!==Zi){var a=Zi.memoizedState;if(i=a.destroy,null!==r&&fa(r,a.deps))return void wa(0,n,i,r)}aa|=e,o.memoizedState=wa(t,n,i,r)}function xa(e,t){return Ea(516,192,e,t)}function Ta(e,t){return ka(516,192,e,t)}function Sa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function _a(){}function Ca(e,t){return ha().memoizedState=[e,void 0===t?null:t],e}function Pa(e,t){var n=ma();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fa(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Oa(e,t,n){if(!(25>ca))throw Error(l(301));var r=e.alternate;if(e===Ji||null!==r&&r===Ji)if(la=!0,e={expirationTime:Gi,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===ua&&(ua=new Map),void 0===(n=ua.get(t)))ua.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var o=eu(),i=xi.suspense;i={expirationTime:o=tu(o,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.last;if(null===a)i.next=i;else{var u=a.next;null!==u&&(i.next=u),a.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jr(s,c))return}catch(e){}nu(e,o)}}var Na={readContext:si,useCallback:sa,useContext:sa,useEffect:sa,useImperativeHandle:sa,useLayoutEffect:sa,useMemo:sa,useReducer:sa,useRef:sa,useState:sa,useDebugValue:sa,useResponder:sa,useDeferredValue:sa,useTransition:sa},Ra={readContext:si,useCallback:Ca,useContext:si,useEffect:xa,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ea(4,36,Sa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ea(4,36,e,t)},useMemo:function(e,t){var n=ha();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ha();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Oa.bind(null,Ji,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ha().memoizedState=e},useState:ba,useDebugValue:_a,useResponder:Ki,useDeferredValue:function(e,t){var n=ba(e),r=n[0],o=n[1];return xa((function(){a.unstable_next((function(){var n=Yi.suspense;Yi.suspense=void 0===t?null:t;try{o(e)}finally{Yi.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=ba(!1),n=t[0],r=t[1];return[Ca((function(t){r(!0),a.unstable_next((function(){var n=Yi.suspense;Yi.suspense=void 0===e?null:e;try{r(!1),t()}finally{Yi.suspense=n}}))}),[e,n]),n]}},Aa={readContext:si,useCallback:Pa,useContext:si,useEffect:Ta,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ka(4,36,Sa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ka(4,36,e,t)},useMemo:function(e,t){var n=ma();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fa(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:va,useRef:function(){return ma().memoizedState},useState:ga,useDebugValue:_a,useResponder:Ki,useDeferredValue:function(e,t){var n=ga(),r=n[0],o=n[1];return Ta((function(){a.unstable_next((function(){var n=Yi.suspense;Yi.suspense=void 0===t?null:t;try{o(e)}finally{Yi.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=ga(),n=t[0],r=t[1];return[Pa((function(t){r(!0),a.unstable_next((function(){var n=Yi.suspense;Yi.suspense=void 0===e?null:e;try{r(!1),t()}finally{Yi.suspense=n}}))}),[e,n]),n]}},ja=null,Ma=null,za=!1;function Ua(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function La(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ia(e){if(za){var t=Ma;if(t){var n=t;if(!La(e,t)){if(!(t=or(n.nextSibling))||!La(e,t))return e.effectTag=-1025&e.effectTag|2,za=!1,void(ja=e);Ua(ja,n)}ja=e,Ma=or(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,za=!1,ja=e}}function Da(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ja=e}function Fa(e){if(e!==ja)return!1;if(!za)return Da(e),za=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!tr(t,e.memoizedProps))for(t=Ma;t;)Ua(e,t),t=or(t.nextSibling);if(Da(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ma=or(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ma=null}}else Ma=ja?or(e.stateNode.nextSibling):null;return!0}function $a(){Ma=ja=null,za=!1}var Ha=M.ReactCurrentOwner,Wa=!1;function Ba(e,t,n,r){t.child=null===e?Ui(t,null,n,r):zi(t,e.child,n,r)}function qa(e,t,n,r,o){n=n.render;var i=t.ref;return ci(t,o),r=pa(e,t,n,r,i,o),null===e||Wa?(t.effectTag|=1,Ba(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ll(e,t,o))}function Va(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||ju(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=zu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Qa(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:eo)(o,r)&&e.ref===t.ref)?ll(e,t,i):(t.effectTag|=1,(e=Mu(a,r)).ref=t.ref,e.return=t,t.child=e)}function Qa(e,t,n,r,o,i){return null!==e&&eo(e.memoizedProps,r)&&e.ref===t.ref&&(Wa=!1,o<i)?ll(e,t,i):Xa(e,t,n,r,i)}function Ka(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Xa(e,t,n,r,o){var i=go(n)?vo:mo.current;return i=bo(t,i),ci(t,o),n=pa(e,t,n,r,i,o),null===e||Wa?(t.effectTag|=1,Ba(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ll(e,t,o))}function Ya(e,t,n,o,i){if(go(n)){var a=!0;To(t)}else a=!1;if(ci(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Pi(t,n,o),Ni(t,n,o,i),o=!0;else if(null===e){var l=t.stateNode,u=t.memoizedProps;l.props=u;var c=l.context,s=n.contextType;"object"===r(s)&&null!==s?s=si(s):s=bo(t,s=go(n)?vo:mo.current);var f=n.getDerivedStateFromProps,p="function"==typeof f||"function"==typeof l.getSnapshotBeforeUpdate;p||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==o||c!==s)&&Oi(t,l,o,s),fi=!1;var d=t.memoizedState;c=l.state=d;var h=t.updateQueue;null!==h&&(wi(t,h,o,l,i),c=t.memoizedState),u!==o||d!==c||yo.current||fi?("function"==typeof f&&(Si(t,n,f,o),c=t.memoizedState),(u=fi||Ci(t,n,u,o,d,c,s))?(p||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=o,t.memoizedState=c),l.props=o,l.state=c,l.context=s,o=u):("function"==typeof l.componentDidMount&&(t.effectTag|=4),o=!1)}else l=t.stateNode,u=t.memoizedProps,l.props=t.type===t.elementType?u:ei(t.type,u),c=l.context,"object"===r(s=n.contextType)&&null!==s?s=si(s):s=bo(t,s=go(n)?vo:mo.current),(p="function"==typeof(f=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==o||c!==s)&&Oi(t,l,o,s),fi=!1,c=t.memoizedState,d=l.state=c,null!==(h=t.updateQueue)&&(wi(t,h,o,l,i),d=t.memoizedState),u!==o||c!==d||yo.current||fi?("function"==typeof f&&(Si(t,n,f,o),d=t.memoizedState),(f=fi||Ci(t,n,u,o,c,d,s))?(p||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(o,d,s),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(o,d,s)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=o,t.memoizedState=d),l.props=o,l.state=d,l.context=s,o=f):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),o=!1);return Ga(e,t,n,o,a,i)}function Ga(e,t,n,r,o,i){Ka(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&So(t,n,!1),ll(e,t,i);r=t.stateNode,Ha.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=zi(t,e.child,null,i),t.child=zi(t,null,l,i)):Ba(e,t,l,i),t.memoizedState=r.state,o&&So(t,n,!0),t.child}function Ja(e){var t=e.stateNode;t.pendingContext?ko(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ko(0,t.context,!1),Hi(e,t.containerInfo)}var Za,el,tl,nl={dehydrated:null,retryTime:0};function rl(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Vi.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),po(Vi,1&a),null===e){if(void 0!==i.fallback&&Ia(t),l){if(l=i.fallback,(i=Uu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Uu(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=nl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ui(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Mu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Mu(o,i,o.expirationTime)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=nl,t.child=n,o}return n=zi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=Uu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Uu(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=nl,t.child=i,n}return t.memoizedState=null,t.child=zi(t,e,i.children,n)}function ol(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ui(e.return,t)}function il(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function al(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ba(e,t,r.children,n),0!=(2&(r=Vi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ol(e,n);else if(19===e.tag)ol(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(po(Vi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Qi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),il(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Qi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}il(t,!0,n,null,i,t.lastEffect);break;case"together":il(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ll(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&hu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Mu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Mu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ul(e){e.effectTag|=4}function cl(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function sl(e){switch(e.tag){case 1:go(e.type)&&wo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Wi(),Eo(),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return qi(e),null;case 13:return fo(Vi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return fo(Vi),null;case 4:return Wi(),null;case 10:return li(e),null;default:return null}}function fl(e,t){return{value:e,source:t,stack:Z(t)}}Za=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},el=function(e,t,n,r,o){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch($i(Ii.current),e=null,n){case"input":a=Pe(c,a),r=Pe(c,r),e=[];break;case"option":a=Me(c,a),r=Me(c,r),e=[];break;case"select":a=i({},a,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":a=Ue(c,a),r=Ue(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=Vn)}for(l in Wn(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(h.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,""+s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(h.hasOwnProperty(l)?(null!=s&&qn(o,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&ul(t)}},tl=function(e,t,n,r){n!==r&&ul(t)};var pl="function"==typeof WeakSet?WeakSet:Set;function dl(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=Z(n)),null!==n&&J(n.type),t=t.value,null!==e&&1===e.tag&&J(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function hl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){_u(e,t)}else t.current=null}function ml(e,t){switch(t.tag){case 0:case 11:case 15:yl(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ei(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}function yl(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&t)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function vl(e,t,n){switch("function"==typeof Nu&&Nu(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){_u(o,e)}}e=e.next}while(e!==r)}))}break;case 1:hl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){_u(e,t)}}(t,n);break;case 5:hl(t);break;case 4:El(e,t,n)}}function bl(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&bl(t)}function gl(e){return 5===e.tag||3===e.tag||4===e.tag}function wl(e){e:{for(var t=e.return;null!==t;){if(gl(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Ve(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){var i=5===o.tag||6===o.tag;if(i){var a=i?o.stateNode:o.stateNode.instance;if(n)if(r){var u=a;a=n,8===(i=t).nodeType?i.parentNode.insertBefore(u,a):i.insertBefore(u,a)}else t.insertBefore(a,n);else r?(8===(u=t).nodeType?(i=u.parentNode).insertBefore(a,u):(i=u).appendChild(a),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=Vn)):t.appendChild(a)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function El(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(vl(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(vl(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function kl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:yl(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[ur]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ne(n,r),Bn(e,o),t=Bn(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?$n(n,u):"dangerouslySetInnerHTML"===a?qe(n,u):"children"===a?Ve(n,u):Te(n,a,u,t)}switch(e){case"input":Re(n,r);break;case"textarea":Ie(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?ze(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?ze(n,!!r.multiple,r.defaultValue,!0):ze(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw Error(l(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:(t=t.stateNode).hydrate&&(t.hydrate=!1,Pt(t.containerInfo));break;case 12:break;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Hl=Bo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=Fn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}xl(t);break;case 19:xl(t);break;case 17:case 20:case 21:break;default:throw Error(l(163))}}function xl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new pl),t.forEach((function(t){var r=Pu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var Tl="function"==typeof WeakMap?WeakMap:Map;function Sl(e,t,n){(n=hi(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bl||(Bl=!0,ql=r),dl(e,t)},n}function _l(e,t,n){(n=hi(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return dl(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Vl?Vl=new Set([this]):Vl.add(this),dl(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Cl,Pl=Math.ceil,Ol=M.ReactCurrentDispatcher,Nl=M.ReactCurrentOwner,Rl=0,Al=null,jl=null,Ml=0,zl=0,Ul=null,Ll=1073741823,Il=1073741823,Dl=null,Fl=0,$l=!1,Hl=0,Wl=null,Bl=!1,ql=null,Vl=null,Ql=!1,Kl=null,Xl=90,Yl=null,Gl=0,Jl=null,Zl=0;function eu(){return 0!=(48&Rl)?1073741821-(Bo()/10|0):0!==Zl?Zl:Zl=1073741821-(Bo()/10|0)}function tu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=qo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Rl))return Ml;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Al&&e===Ml&&--e,e}function nu(e,t){if(50<Gl)throw Gl=0,Jl=null,Error(l(185));if(null!==(e=ru(e,t))){var n=qo();1073741823===t?0!=(8&Rl)&&0==(48&Rl)?lu(e):(iu(e),0===Rl&&Yo()):iu(e),0==(4&Rl)||98!==n&&99!==n||(null===Yl?Yl=new Map([[e,t]]):(void 0===(n=Yl.get(e))||n>t)&&Yl.set(e,t))}}function ru(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Al===o&&(hu(t),4===zl&&$u(o,Ml)),Hu(o,t)),o}function ou(e){var t=e.lastExpiredTime;return 0!==t?t:Fu(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function iu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Xo(lu.bind(null,e));else{var t=ou(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=eu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Io&&Po(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Xo(lu.bind(null,e)):Ko(r,au.bind(null,e),{timeout:10*(1073741821-t)-Bo()}),e.callbackNode=t}}}function au(e,t){if(Zl=0,t)return Wu(e,t=eu()),iu(e),null;var n=ou(e);if(0!==n){if(t=e.callbackNode,0!=(48&Rl))throw Error(l(327));if(xu(),e===Al&&n===Ml||su(e,n),null!==jl){var r=Rl;Rl|=16;for(var o=pu();;)try{yu();break}catch(t){fu(e,t)}if(ii(),Rl=r,Ol.current=o,1===zl)throw t=Ul,su(e,n),$u(e,n),iu(e),t;if(null===jl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=zl,Al=null,r){case 0:case 1:throw Error(l(345));case 2:Wu(e,2<n?2:n);break;case 3:if($u(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=gu(o)),1073741823===Ll&&10<(o=Hl+500-Bo())){if($l){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,su(e,n);break}}if(0!==(i=ou(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=nr(wu.bind(null,e),o);break}wu(e);break;case 4:if($u(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=gu(o)),$l&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,su(e,n);break}if(0!==(o=ou(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Il?r=10*(1073741821-Il)-Bo():1073741823===Ll?r=0:(r=10*(1073741821-Ll)-5e3,0>(r=(o=Bo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Pl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=nr(wu.bind(null,e),r);break}wu(e);break;case 5:if(1073741823!==Ll&&null!==Dl){i=Ll;var a=Dl;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Bo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){$u(e,n),e.timeoutHandle=nr(wu.bind(null,e),r);break}}wu(e);break;default:throw Error(l(329))}if(iu(e),e.callbackNode===t)return au.bind(null,e)}}return null}function lu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)wu(e);else{if(0!=(48&Rl))throw Error(l(327));if(xu(),e===Al&&t===Ml||su(e,t),null!==jl){var n=Rl;Rl|=16;for(var r=pu();;)try{mu();break}catch(t){fu(e,t)}if(ii(),Rl=n,Ol.current=r,1===zl)throw n=Ul,su(e,t),$u(e,t),iu(e),n;if(null!==jl)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Al=null,wu(e),iu(e)}}return null}function uu(e,t){var n=Rl;Rl|=1;try{return e(t)}finally{0===(Rl=n)&&Yo()}}function cu(e,t){var n=Rl;Rl&=-2,Rl|=8;try{return e(t)}finally{0===(Rl=n)&&Yo()}}function su(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==jl)for(n=jl.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&wo();break;case 3:Wi(),Eo();break;case 5:qi(r);break;case 4:Wi();break;case 13:case 19:fo(Vi);break;case 10:li(r)}n=n.return}Al=e,jl=Mu(e.current,null),Ml=t,zl=0,Ul=null,Il=Ll=1073741823,Dl=null,Fl=0,$l=!1}function fu(e,t){for(;;){try{if(ii(),da(),null===jl||null===jl.return)return zl=1,Ul=t,null;e:{var n=e,o=jl.return,i=jl,a=t;if(t=Ml,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==a&&"object"===r(a)&&"function"==typeof a.then){var l=a,u=0!=(1&Vi.current),c=o;do{var s;if(s=13===c.tag){var f=c.memoizedState;if(null!==f)s=null!==f.dehydrated;else{var p=c.memoizedProps;s=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!u)}}if(s){var d=c.updateQueue;if(null===d){var h=new Set;h.add(l),c.updateQueue=h}else d.add(l);if(0==(2&c.mode)){if(c.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var m=hi(1073741823,null);m.tag=2,yi(i,m)}i.expirationTime=1073741823;break e}a=void 0,i=t;var y=n.pingCache;if(null===y?(y=n.pingCache=new Tl,a=new Set,y.set(l,a)):void 0===(a=y.get(l))&&(a=new Set,y.set(l,a)),!a.has(i)){a.add(i);var v=Cu.bind(null,n,l,i);l.then(v,v)}c.effectTag|=4096,c.expirationTime=t;break e}c=c.return}while(null!==c);a=Error((J(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+Z(i))}5!==zl&&(zl=2),a=fl(a,i),c=o;do{switch(c.tag){case 3:l=a,c.effectTag|=4096,c.expirationTime=t,vi(c,Sl(c,l,t));break e;case 1:l=a;var b=c.type,g=c.stateNode;if(0==(64&c.effectTag)&&("function"==typeof b.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===Vl||!Vl.has(g)))){c.effectTag|=4096,c.expirationTime=t,vi(c,_l(c,l,t));break e}}c=c.return}while(null!==c)}jl=bu(jl)}catch(e){t=e;continue}break}}function pu(){var e=Ol.current;return Ol.current=Na,null===e?Na:e}function du(e,t){e<Ll&&2<e&&(Ll=e),null!==t&&e<Il&&2<e&&(Il=e,Dl=t)}function hu(e){e>Fl&&(Fl=e)}function mu(){for(;null!==jl;)jl=vu(jl)}function yu(){for(;null!==jl&&!Oo();)jl=vu(jl)}function vu(e){var t=Cl(e.alternate,e,Ml);return e.memoizedProps=e.pendingProps,null===t&&(t=bu(e)),Nl.current=null,t}function bu(e){jl=e;do{var t=jl.alternate;if(e=jl.return,0==(2048&jl.effectTag)){e:{var n=t,r=Ml,o=(t=jl).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:go(t.type)&&wo();break;case 3:Wi(),Eo(),(o=t.stateNode).pendingContext&&(o.context=o.pendingContext,o.pendingContext=null),(null===n||null===n.child)&&Fa(t)&&ul(t);break;case 5:qi(t),r=$i(Fi.current);var a=t.type;if(null!==n&&null!=t.stateNode)el(n,t,a,o,r),n.ref!==t.ref&&(t.effectTag|=128);else if(o){var u=$i(Ii.current);if(Fa(t)){var c=(o=t).stateNode;n=o.type;var s=o.memoizedProps,f=r;switch(c[lr]=o,c[ur]=s,a=void 0,r=c,n){case"iframe":case"object":case"embed":Cn("load",r);break;case"video":case"audio":for(c=0;c<nt.length;c++)Cn(nt[c],r);break;case"source":Cn("error",r);break;case"img":case"image":case"link":Cn("error",r),Cn("load",r);break;case"form":Cn("reset",r),Cn("submit",r);break;case"details":Cn("toggle",r);break;case"input":Oe(r,s),Cn("invalid",r),qn(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Cn("invalid",r),qn(f,"onChange");break;case"textarea":Le(r,s),Cn("invalid",r),qn(f,"onChange")}for(a in Wn(n,s),c=null,s)s.hasOwnProperty(a)&&(u=s[a],"children"===a?"string"==typeof u?r.textContent!==u&&(c=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(c=["children",""+u]):h.hasOwnProperty(a)&&null!=u&&qn(f,a));switch(n){case"input":_e(r),Ae(r,s,!0);break;case"textarea":_e(r),De(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Vn)}a=c,o.updateQueue=a,(o=null!==a)&&ul(t)}else{n=t,f=a,s=o,c=9===r.nodeType?r:r.ownerDocument,u===Fe&&(u=He(f)),u===Fe?"script"===f?((s=c.createElement("div")).innerHTML="<script><\/script>",c=s.removeChild(s.firstChild)):"string"==typeof s.is?c=c.createElement(f,{is:s.is}):(c=c.createElement(f),"select"===f&&(f=c,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):c=c.createElementNS(u,f),(s=c)[lr]=n,s[ur]=o,Za(s,t),t.stateNode=s;var p=r,d=Bn(f=a,n=o);switch(f){case"iframe":case"object":case"embed":Cn("load",s),r=n;break;case"video":case"audio":for(r=0;r<nt.length;r++)Cn(nt[r],s);r=n;break;case"source":Cn("error",s),r=n;break;case"img":case"image":case"link":Cn("error",s),Cn("load",s),r=n;break;case"form":Cn("reset",s),Cn("submit",s),r=n;break;case"details":Cn("toggle",s),r=n;break;case"input":Oe(s,n),r=Pe(s,n),Cn("invalid",s),qn(p,"onChange");break;case"option":r=Me(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=i({},n,{value:void 0}),Cn("invalid",s),qn(p,"onChange");break;case"textarea":Le(s,n),r=Ue(s,n),Cn("invalid",s),qn(p,"onChange");break;default:r=n}Wn(f,r),c=void 0,u=f;var m=s,y=r;for(c in y)if(y.hasOwnProperty(c)){var v=y[c];"style"===c?$n(m,v):"dangerouslySetInnerHTML"===c?null!=(v=v?v.__html:void 0)&&qe(m,v):"children"===c?"string"==typeof v?("textarea"!==u||""!==v)&&Ve(m,v):"number"==typeof v&&Ve(m,""+v):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(h.hasOwnProperty(c)?null!=v&&qn(p,c):null!=v&&Te(m,c,v,d))}switch(f){case"input":_e(s),Ae(s,n,!1);break;case"textarea":_e(s),De(s);break;case"option":null!=n.value&&s.setAttribute("value",""+xe(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?ze(r,!!n.multiple,s,!1):null!=n.defaultValue&&ze(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Vn)}(o=er(a,o))&&ul(t)}null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw Error(l(166));break;case 6:if(n&&null!=t.stateNode)tl(0,t,n.memoizedProps,o);else{if("string"!=typeof o&&null===t.stateNode)throw Error(l(166));r=$i(Fi.current),$i(Ii.current),Fa(t)?(a=(o=t).stateNode,r=o.memoizedProps,a[lr]=o,(o=a.nodeValue!==r)&&ul(t)):(a=t,(o=(9===r.nodeType?r:r.ownerDocument).createTextNode(o))[lr]=a,t.stateNode=o)}break;case 11:break;case 13:if(fo(Vi),o=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}o=null!==o,a=!1,null===n?void 0!==t.memoizedProps.fallback&&Fa(t):(a=null!==(r=n.memoizedState),o||null===r||null!==(r=n.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=r,r.nextEffect=s):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8)),o&&!a&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Vi.current)?0===zl&&(zl=3):(0!==zl&&3!==zl||(zl=4),0!==Fl&&null!==Al&&($u(Al,Ml),Hu(Al,Fl)))),(o||a)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Wi();break;case 10:li(t);break;case 9:case 14:break;case 17:go(t.type)&&wo();break;case 19:if(fo(Vi),null===(o=t.memoizedState))break;if(a=0!=(64&t.effectTag),null===(s=o.rendering)){if(a)cl(o,!1);else if(0!==zl||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(s=Qi(n))){for(t.effectTag|=64,cl(o,!1),null!==(a=s.updateQueue)&&(t.updateQueue=a,t.effectTag|=4),null===o.lastEffect&&(t.firstEffect=null),t.lastEffect=o.lastEffect,o=r,a=t.child;null!==a;)n=o,(r=a).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),a=a.sibling;po(Vi,1&Vi.current|2),t=t.child;break e}n=n.sibling}}else{if(!a)if(null!==(n=Qi(s))){if(t.effectTag|=64,a=!0,null!==(r=n.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),cl(o,!0),null===o.tail&&"hidden"===o.tailMode&&!s.alternate){null!==(t=t.lastEffect=o.lastEffect)&&(t.nextEffect=null);break}}else Bo()>o.tailExpiration&&1<r&&(t.effectTag|=64,a=!0,cl(o,!1),t.expirationTime=t.childExpirationTime=r-1);o.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=o.last)?r.sibling=s:t.child=s,o.last=s)}if(null!==o.tail){0===o.tailExpiration&&(o.tailExpiration=Bo()+500),r=o.tail,o.rendering=r,o.tail=r.sibling,o.lastEffect=t.lastEffect,r.sibling=null,o=Vi.current,po(Vi,o=a?1&o|2:1&o),t=r;break e}break;case 20:case 21:break;default:throw Error(l(156,t.tag))}t=null}if(o=jl,1===Ml||1!==o.childExpirationTime){for(a=0,r=o.child;null!==r;)(n=r.expirationTime)>a&&(a=n),(s=r.childExpirationTime)>a&&(a=s),r=r.sibling;o.childExpirationTime=a}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=jl.firstEffect),null!==jl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=jl.firstEffect),e.lastEffect=jl.lastEffect),1<jl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=jl:e.firstEffect=jl,e.lastEffect=jl))}else{if(null!==(t=sl(jl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=jl.sibling))return t;jl=e}while(null!==jl);return 0===zl&&(zl=5),null}function gu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function wu(e){var t=qo();return Qo(99,Eu.bind(null,e,t)),null}function Eu(e,t){do{xu()}while(null!==Kl);if(0!=(48&Rl))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=gu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Al&&(jl=Al=null,Ml=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Rl;Rl|=32,Nl.current=null,Jn=_n;var a=Yn();if(Gn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var p=0,d=-1,h=-1,m=0,y=0,v=a,b=null;t:for(;;){for(var g;v!==u||0!==s&&3!==v.nodeType||(d=p+s),v!==f||0!==c&&3!==v.nodeType||(h=p+c),3===v.nodeType&&(p+=v.nodeValue.length),null!==(g=v.firstChild);)b=v,v=g;for(;;){if(v===a)break t;if(b===u&&++m===s&&(d=p),b===f&&++y===c&&(h=p),null!==(g=v.nextSibling))break;b=(v=b).parentNode}v=g}u=-1===d||-1===h?null:{start:d,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;Zn={focusedElem:a,selectionRange:u},_n=!1,Wl=o;do{try{ku()}catch(e){if(null===Wl)throw Error(l(330));_u(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);Wl=o;do{try{for(a=e,u=t;null!==Wl;){var w=Wl.effectTag;if(16&w&&Ve(Wl.stateNode,""),128&w){var E=Wl.alternate;if(null!==E){var k=E.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&w){case 2:wl(Wl),Wl.effectTag&=-3;break;case 6:wl(Wl),Wl.effectTag&=-3,kl(Wl.alternate,Wl);break;case 1024:Wl.effectTag&=-1025;break;case 1028:Wl.effectTag&=-1025,kl(Wl.alternate,Wl);break;case 4:kl(Wl.alternate,Wl);break;case 8:El(a,s=Wl,u),bl(s)}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(l(330));_u(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);if(k=Zn,E=Yn(),w=k.focusedElem,u=k.selectionRange,E!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&Gn(w)&&(E=u.start,void 0===(k=u.end)&&(k=E),"selectionStart"in w?(w.selectionStart=E,w.selectionEnd=Math.min(k,w.value.length)):(k=(E=w.ownerDocument||document)&&E.defaultView||window).getSelection&&(k=k.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!k.extend&&a>u&&(s=u,u=a,a=s),s=Xn(w,a),f=Xn(w,u),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((E=E.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),a>u?(k.addRange(E),k.extend(f.node,f.offset)):(E.setEnd(f.node,f.offset),k.addRange(E))))),E=[];for(k=w;k=k.parentNode;)1===k.nodeType&&E.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<E.length;w++)(k=E[w]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Zn=null,_n=!!Jn,Jn=null,e.current=n,Wl=o;do{try{for(w=r;null!==Wl;){var x=Wl.effectTag;if(36&x){var T=Wl.alternate;switch(k=w,(E=Wl).tag){case 0:case 11:case 15:yl(16,32,E);break;case 1:var S=E.stateNode;if(4&E.effectTag)if(null===T)S.componentDidMount();else{var _=E.elementType===E.type?T.memoizedProps:ei(E.type,T.memoizedProps);S.componentDidUpdate(_,T.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var C=E.updateQueue;null!==C&&Ei(0,C,S);break;case 3:var P=E.updateQueue;if(null!==P){if(a=null,null!==E.child)switch(E.child.tag){case 5:a=E.child.stateNode;break;case 1:a=E.child.stateNode}Ei(0,P,a)}break;case 5:var O=E.stateNode;null===T&&4&E.effectTag&&er(E.type,E.memoizedProps)&&O.focus();break;case 6:case 4:case 12:break;case 13:if(null===E.memoizedState){var N=E.alternate;if(null!==N){var R=N.memoizedState;if(null!==R){var A=R.dehydrated;null!==A&&Pt(A)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(l(163))}}if(128&x){E=void 0;var j=Wl.ref;if(null!==j){var M=Wl.stateNode;switch(Wl.tag){case 5:E=M;break;default:E=M}"function"==typeof j?j(E):j.current=E}}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(l(330));_u(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);Wl=null,Do(),Rl=i}else e.current=n;if(Ql)Ql=!1,Kl=e,Xl=t;else for(Wl=o;null!==Wl;)t=Wl.nextEffect,Wl.nextEffect=null,Wl=t;if(0===(t=e.firstPendingTime)&&(Vl=null),1073741823===t?e===Jl?Gl++:(Gl=0,Jl=e):Gl=0,"function"==typeof Ou&&Ou(n.stateNode,r),iu(e),Bl)throw Bl=!1,e=ql,ql=null,e;return 0!=(8&Rl)?null:(Yo(),null)}function ku(){for(;null!==Wl;){var e=Wl.effectTag;0!=(256&e)&&ml(Wl.alternate,Wl),0==(512&e)||Ql||(Ql=!0,Ko(97,(function(){return xu(),null}))),Wl=Wl.nextEffect}}function xu(){if(90!==Xl){var e=97<Xl?97:Xl;return Xl=90,Qo(e,Tu)}}function Tu(){if(null===Kl)return!1;var e=Kl;if(Kl=null,0!=(48&Rl))throw Error(l(331));var t=Rl;for(Rl|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:yl(128,0,n),yl(0,64,n)}}catch(t){if(null===e)throw Error(l(330));_u(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Rl=t,Yo(),!0}function Su(e,t,n){yi(e,t=Sl(e,t=fl(n,t),1073741823)),null!==(e=ru(e,1073741823))&&iu(e)}function _u(e,t){if(3===e.tag)Su(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Su(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Vl||!Vl.has(r))){yi(n,e=_l(n,e=fl(t,e),1073741823)),null!==(n=ru(n,1073741823))&&iu(n);break}}n=n.return}}function Cu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Al===e&&Ml===n?4===zl||3===zl&&1073741823===Ll&&Bo()-Hl<500?su(e,Ml):$l=!0:Fu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),iu(e)))}function Pu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=tu(t=eu(),e,null)),null!==(e=ru(e,t))&&iu(e)}Cl=function(e,t,n){var o=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||yo.current)Wa=!0;else{if(o<n){switch(Wa=!1,t.tag){case 3:Ja(t),$a();break;case 5:if(Bi(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:go(t.type)&&To(t);break;case 4:Hi(t,t.stateNode.containerInfo);break;case 10:ai(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(o=t.child.childExpirationTime)&&o>=n?rl(e,t,n):(po(Vi,1&Vi.current),null!==(t=ll(e,t,n))?t.sibling:null);po(Vi,1&Vi.current);break;case 19:if(o=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(o)return al(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),po(Vi,Vi.current),!o)return null}return ll(e,t,n)}Wa=!1}}else Wa=!1;switch(t.expirationTime=0,t.tag){case 2:if(o=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=bo(t,mo.current),ci(t,n),i=pa(null,t,o,e,i,n),t.effectTag|=1,"object"===r(i)&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,da(),go(o)){var a=!0;To(t)}else a=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null;var u=o.getDerivedStateFromProps;"function"==typeof u&&Si(t,o,u,e),i.updater=_i,t.stateNode=i,i._reactInternalFiber=t,Ni(t,o,e,n),t=Ga(null,t,o,!0,a,n)}else t.tag=0,Ba(null,t,i,n),t=t.child;return t;case 16:if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,a=t.tag=function(e){if("function"==typeof e)return ju(e)?1:0;if(null!=e){if((e=e.$$typeof)===q)return 11;if(e===K)return 14}return 2}(i),e=ei(i,e),a){case 0:t=Xa(null,t,i,e,n);break;case 1:t=Ya(null,t,i,e,n);break;case 11:t=qa(null,t,i,e,n);break;case 14:t=Va(null,t,i,ei(i.type,e),o,n);break;default:throw Error(l(306,i,""))}return t;case 0:return o=t.type,i=t.pendingProps,Xa(e,t,o,i=t.elementType===o?i:ei(o,i),n);case 1:return o=t.type,i=t.pendingProps,Ya(e,t,o,i=t.elementType===o?i:ei(o,i),n);case 3:if(Ja(t),null===(o=t.updateQueue))throw Error(l(282));if(i=null!==(i=t.memoizedState)?i.element:null,wi(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===i)$a(),t=ll(e,t,n);else{if((i=t.stateNode.hydrate)&&(Ma=or(t.stateNode.containerInfo.firstChild),ja=t,i=za=!0),i)for(n=Ui(t,null,o,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ba(e,t,o,n),$a();t=t.child}return t;case 5:return Bi(t),null===e&&Ia(t),o=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,u=i.children,tr(o,i)?u=null:null!==a&&tr(o,a)&&(t.effectTag|=16),Ka(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ba(e,t,u,n),t=t.child),t;case 6:return null===e&&Ia(t),null;case 13:return rl(e,t,n);case 4:return Hi(t,t.stateNode.containerInfo),o=t.pendingProps,null===e?t.child=zi(t,null,o,n):Ba(e,t,o,n),t.child;case 11:return o=t.type,i=t.pendingProps,qa(e,t,o,i=t.elementType===o?i:ei(o,i),n);case 7:return Ba(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ba(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(o=t.type._context,i=t.pendingProps,u=t.memoizedProps,ai(t,a=i.value),null!==u){var c=u.value;if(0===(a=Jr(c,a)?0:0|("function"==typeof o._calculateChangedBits?o._calculateChangedBits(c,a):1073741823))){if(u.children===i.children&&!yo.current){t=ll(e,t,n);break e}}else for(null!==(c=t.child)&&(c.return=t);null!==c;){var s=c.dependencies;if(null!==s){u=c.child;for(var f=s.firstContext;null!==f;){if(f.context===o&&0!=(f.observedBits&a)){1===c.tag&&((f=hi(n,null)).tag=2,yi(c,f)),c.expirationTime<n&&(c.expirationTime=n),null!==(f=c.alternate)&&f.expirationTime<n&&(f.expirationTime=n),ui(c.return,n),s.expirationTime<n&&(s.expirationTime=n);break}f=f.next}}else u=10===c.tag&&c.type===t.type?null:c.child;if(null!==u)u.return=c;else for(u=c;null!==u;){if(u===t){u=null;break}if(null!==(c=u.sibling)){c.return=u.return,u=c;break}u=u.return}c=u}}Ba(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,o=(a=t.pendingProps).children,ci(t,n),o=o(i=si(i,a.unstable_observedBits)),t.effectTag|=1,Ba(e,t,o,n),t.child;case 14:return a=ei(i=t.type,t.pendingProps),Va(e,t,i,a=ei(i.type,a),o,n);case 15:return Qa(e,t,t.type,t.pendingProps,o,n);case 17:return o=t.type,i=t.pendingProps,i=t.elementType===o?i:ei(o,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,go(o)?(e=!0,To(t)):e=!1,ci(t,n),Pi(t,o,i),Ni(t,o,i,n),Ga(null,t,o,!0,e,n);case 19:return al(e,t,n)}throw Error(l(156,t.tag))};var Ou=null,Nu=null;function Ru(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Au(e,t,n,r){return new Ru(e,t,n,r)}function ju(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Mu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function zu(e,t,n,o,i,a){var u=2;if(o=e,"function"==typeof e)ju(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case D:return Uu(n.children,i,a,t);case B:u=8,i|=7;break;case F:u=8,i|=1;break;case $:return(e=Au(12,n,t,8|i)).elementType=$,e.type=$,e.expirationTime=a,e;case V:return(e=Au(13,n,t,i)).type=V,e.elementType=V,e.expirationTime=a,e;case Q:return(e=Au(19,n,t,i)).elementType=Q,e.expirationTime=a,e;default:if("object"===r(e)&&null!==e)switch(e.$$typeof){case H:u=10;break e;case W:u=9;break e;case q:u=11;break e;case K:u=14;break e;case X:u=16,o=null;break e}throw Error(l(130,null==e?e:r(e),""))}return(t=Au(u,n,t,i)).elementType=e,t.type=o,t.expirationTime=a,t}function Uu(e,t,n,r){return(e=Au(7,e,r,t)).expirationTime=n,e}function Lu(e,t,n){return(e=Au(6,e,null,t)).expirationTime=n,e}function Iu(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Du(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Fu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function $u(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Hu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Wu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Bu(e,t,n,r){var o=t.current,i=eu(),a=xi.suspense;i=tu(i,o,a);e:if(n){t:{if(rt(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(go(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(go(c)){n=xo(n,c,u);break e}}n=u}else n=ho;return null===t.context?t.context=n:t.pendingContext=n,(t=hi(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),yi(o,t),nu(o,i),i}function qu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Vu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Qu(e,t){Vu(e,t),(e=e.alternate)&&Vu(e,t)}function Ku(e,t,n){var r=new Du(e,t,n=null!=n&&!0===n.hydrate),o=Au(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,e[cr]=r.current,n&&0!==t&&function(e){var t=Un(e);bt.forEach((function(n){Ln(n,e,t)})),gt.forEach((function(n){Ln(n,e,t)}))}(9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Xu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Yu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=qu(a);l.call(e)}}Bu(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ku(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=qu(a);u.call(e)}}cu((function(){Bu(t,a,e,o)}))}return qu(a)}function Gu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:I,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ju(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xu(t))throw Error(l(200));return Gu(e,t,null,n)}Ku.prototype.render=function(e,t){Bu(e,this._internalRoot,null,void 0===t?null:t)},Ku.prototype.unmount=function(e){var t=this._internalRoot,n=void 0===e?null:e,r=t.containerInfo;Bu(null,t,null,(function(){r[cr]=null,null!==n&&n()}))},lt=function(e){if(13===e.tag){var t=Zo(eu(),150,100);nu(e,t),Qu(e,t)}},ut=function(e){if(13===e.tag){eu();var t=Jo++;nu(e,t),Qu(e,t)}},ct=function(e){if(13===e.tag){var t=eu();nu(e,t=tu(t,e,null)),Qu(e,t)}},te=function(e,t,n){switch(t){case"input":if(Re(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=dr(r);if(!o)throw Error(l(90));Ce(r),Re(r,o)}}}break;case"textarea":Ie(e,n);break;case"select":null!=(t=n.value)&&ze(e,!!n.multiple,t,!1)}},le=uu,ue=function(e,t,n,r){var o=Rl;Rl|=4;try{return Qo(98,e.bind(null,t,n,r))}finally{0===(Rl=o)&&Yo()}},ce=function(){0==(49&Rl)&&(function(){if(null!==Yl){var e=Yl;Yl=null,e.forEach((function(e,t){Wu(t,e),iu(t)})),Yo()}}(),xu())},se=function(e,t){var n=Rl;Rl|=2;try{return e(t)}finally{0===(Rl=n)&&Yo()}};var Zu,ec,tc={createPortal:Ju,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=at(t))?null:e.stateNode},hydrate:function(e,t,n){if(!Xu(t))throw Error(l(200));return Yu(null,e,t,!0,n)},render:function(e,t,n){if(!Xu(t))throw Error(l(200));return Yu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){if(!Xu(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return Yu(e,t,n,!1,r)},unmountComponentAtNode:function(e){if(!Xu(e))throw Error(l(40));return!!e._reactRootContainer&&(cu((function(){Yu(null,null,e,!1,(function(){e._reactRootContainer=null,e[cr]=null}))})),!0)},unstable_createPortal:function(){return Ju.apply(void 0,arguments)},unstable_batchedUpdates:uu,flushSync:function(e,t){if(0!=(48&Rl))throw Error(l(187));var n=Rl;Rl|=1;try{return Qo(99,e.bind(null,t))}finally{Rl=n,Yo()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[fr,pr,dr,A.injectEventPluginsByName,d,zt,function(e){P(e,Mt)},ie,ae,An,R,xu,{current:!1}]}};ec=(Zu={findFiberByHostInstance:sr,bundleType:0,version:"16.12.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ou=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Nu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},Zu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:M.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=at(e))?null:e.stateNode},findFiberByHostInstance:function(e){return ec?ec(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var nc={default:tc},rc=nc&&tc||nc;e.exports=rc.default||rc},function(e,t,n){"use strict";e.exports=n(16)},function(e,t,n){"use strict";
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i,a,l,u;if(Object.defineProperty(t,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function e(){if(null!==c)try{var n=t.unstable_now();c(!0,n),c=null}catch(t){throw setTimeout(e,0),t}},p=Date.now();t.unstable_now=function(){return Date.now()-p},o=function(e){null!==c?setTimeout(o,0,e):(c=e,setTimeout(f,0))},i=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},l=function(){return!1},u=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,h=window.Date,m=window.setTimeout,y=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===r(d)&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var b=h.now();t.unstable_now=function(){return h.now()-b}}var g=!1,w=null,E=-1,k=5,x=0;l=function(){return t.unstable_now()>=x},u=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var T=new MessageChannel,S=T.port2;T.port1.onmessage=function(){if(null!==w){var e=t.unstable_now();x=e+k;try{w(!0,e)?S.postMessage(null):(g=!1,w=null)}catch(e){throw S.postMessage(null),e}}else g=!1},o=function(e){w=e,g||(g=!0,S.postMessage(null))},i=function(e,n){E=m((function(){e(t.unstable_now())}),n)},a=function(){y(E),E=-1}}function _(e,t){var n=e.length;e.push(t);e:for(;;){var r=Math.floor((n-1)/2),o=e[r];if(!(void 0!==o&&0<O(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>O(a,n))void 0!==u&&0>O(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>O(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function O(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var N=[],R=[],A=1,j=null,M=3,z=!1,U=!1,L=!1;function I(e){for(var t=C(R);null!==t;){if(null===t.callback)P(R);else{if(!(t.startTime<=e))break;P(R),t.sortIndex=t.expirationTime,_(N,t)}t=C(R)}}function D(e){if(L=!1,I(e),!U)if(null!==C(N))U=!0,o(F);else{var t=C(R);null!==t&&i(D,t.startTime-e)}}function F(e,n){U=!1,L&&(L=!1,a()),z=!0;var r=M;try{for(I(n),j=C(N);null!==j&&(!(j.expirationTime>n)||e&&!l());){var o=j.callback;if(null!==o){j.callback=null,M=j.priorityLevel;var u=o(j.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?j.callback=u:j===C(N)&&P(N),I(n)}else P(N);j=C(N)}if(null!==j)var c=!0;else{var s=C(R);null!==s&&i(D,s.startTime-n),c=!1}return c}finally{j=null,M=r,z=!1}}function $(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var H=u;t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_scheduleCallback=function(e,n,l){var u=t.unstable_now();if("object"===r(l)&&null!==l){var c=l.delay;c="number"==typeof c&&0<c?u+c:u,l="number"==typeof l.timeout?l.timeout:$(e)}else l=$(e),c=u;return e={id:A++,callback:n,priorityLevel:e,startTime:c,expirationTime:l=c+l,sortIndex:-1},c>u?(e.sortIndex=c,_(R,e),null===C(N)&&e===C(R)&&(L?a():L=!0,i(D,c-u))):(e.sortIndex=l,_(N,e),U||z||(U=!0,o(F))),e},t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_shouldYield=function(){var e=t.unstable_now();I(e);var n=C(N);return n!==j&&null!==j&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<j.expirationTime||l()},t.unstable_requestPaint=H,t.unstable_continueExecution=function(){U||z||(U=!0,o(F))},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return C(N)},t.unstable_Profiling=null},function(e,t,n){function r(e){if(e)return function(e){for(var t in r.prototype)e[t]=r.prototype[t];return e}(e)}e.exports=r,r.prototype.on=r.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},r.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,r=this._callbacks["$"+e];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var o=0;o<r.length;o++)if((n=r[o])===t||n.fn===t){r.splice(o,1);break}return 0===r.length&&delete this._callbacks["$"+e],this},r.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),n=this._callbacks["$"+e],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(n){r=0;for(var o=(n=n.slice(0)).length;r<o;++r)n[r].apply(this,t)}return this},r.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},r.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=i,i.default=i,i.stable=l,i.stableStringify=l;var r=[],o=[];function i(e,t,i){var a;for(!function e(t,i,a,l){var u;if("object"===n(t)&&null!==t){for(u=0;u<a.length;u++)if(a[u]===t){var c=Object.getOwnPropertyDescriptor(l,i);return void(void 0!==c.get?c.configurable?(Object.defineProperty(l,i,{value:"[Circular]"}),r.push([l,i,t,c])):o.push([t,i]):(l[i]="[Circular]",r.push([l,i,t])))}if(a.push(t),Array.isArray(t))for(u=0;u<t.length;u++)e(t[u],u,a,t);else{var s=Object.keys(t);for(u=0;u<s.length;u++){var f=s[u];e(t[f],f,a,t)}}a.pop()}}(e,"",[],void 0),a=0===o.length?JSON.stringify(e,t,i):JSON.stringify(e,u(t),i);0!==r.length;){var l=r.pop();4===l.length?Object.defineProperty(l[0],l[1],l[3]):l[0][l[1]]=l[2]}return a}function a(e,t){return e<t?-1:e>t?1:0}function l(e,t,i){var l,c=function e(t,i,l,u){var c;if("object"===n(t)&&null!==t){for(c=0;c<l.length;c++)if(l[c]===t){var s=Object.getOwnPropertyDescriptor(u,i);return void(void 0!==s.get?s.configurable?(Object.defineProperty(u,i,{value:"[Circular]"}),r.push([u,i,t,s])):o.push([t,i]):(u[i]="[Circular]",r.push([u,i,t])))}if("function"==typeof t.toJSON)return;if(l.push(t),Array.isArray(t))for(c=0;c<t.length;c++)e(t[c],c,l,t);else{var f={},p=Object.keys(t).sort(a);for(c=0;c<p.length;c++){var d=p[c];e(t[d],d,l,t),f[d]=t[d]}if(void 0===u)return f;r.push([u,i,t]),u[i]=f}l.pop()}}(e,"",[],void 0)||e;for(l=0===o.length?JSON.stringify(c,t,i):JSON.stringify(c,u(t),i);0!==r.length;){var s=r.pop();4===s.length?Object.defineProperty(s[0],s[1],s[3]):s[0][s[1]]=s[2]}return l}function u(e){return e=void 0!==e?e:function(e,t){return t},function(t,n){if(o.length>0)for(var r=0;r<o.length;r++){var i=o[r];if(i[1]===t&&i[0]===n){n="[Circular]",o.splice(r,1);break}}return e.call(this,t,n)}}},function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){return(o="function"==typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return r(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":r(e)})(e)}var i=n(7);function a(e){if(e)return function(e){for(var t in a.prototype)Object.prototype.hasOwnProperty.call(a.prototype,t)&&(e[t]=a.prototype[t]);return e}(e)}e.exports=a,a.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),clearTimeout(this._uploadTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,delete this._uploadTimeoutTimer,this},a.prototype.parse=function(e){return this._parser=e,this},a.prototype.responseType=function(e){return this._responseType=e,this},a.prototype.serialize=function(e){return this._serializer=e,this},a.prototype.timeout=function(e){if(!e||"object"!==o(e))return this._timeout=e,this._responseTimeout=0,this._uploadTimeout=0,this;for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))switch(t){case"deadline":this._timeout=e.deadline;break;case"response":this._responseTimeout=e.response;break;case"upload":this._uploadTimeout=e.upload;break;default:console.warn("Unknown timeout option",t)}return this},a.prototype.retry=function(e,t){return 0!==arguments.length&&!0!==e||(e=1),e<=0&&(e=0),this._maxRetries=e,this._retries=0,this._retryCallback=t,this};var l=["ECONNRESET","ETIMEDOUT","EADDRINFO","ESOCKETTIMEDOUT"];a.prototype._shouldRetry=function(e,t){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var n=this._retryCallback(e,t);if(!0===n)return!0;if(!1===n)return!1}catch(e){console.error(e)}if(t&&t.status&&t.status>=500&&501!==t.status)return!0;if(e){if(e.code&&l.includes(e.code))return!0;if(e.timeout&&"ECONNABORTED"===e.code)return!0;if(e.crossDomain)return!0}return!1},a.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this.timedoutError=null,this._end()},a.prototype.then=function(e,t){var n=this;if(!this._fullfilledPromise){var r=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise((function(e,t){r.on("abort",(function(){if(n.timedout&&n.timedoutError)t(n.timedoutError);else{var e=new Error("Aborted");e.code="ABORTED",e.status=n.status,e.method=n.method,e.url=n.url,t(e)}})),r.end((function(n,r){n?t(n):e(r)}))}))}return this._fullfilledPromise.then(e,t)},a.prototype.catch=function(e){return this.then(void 0,e)},a.prototype.use=function(e){return e(this),this},a.prototype.ok=function(e){if("function"!=typeof e)throw new Error("Callback required");return this._okCallback=e,this},a.prototype._isResponseOK=function(e){return!!e&&(this._okCallback?this._okCallback(e):e.status>=200&&e.status<300)},a.prototype.get=function(e){return this._header[e.toLowerCase()]},a.prototype.getHeader=a.prototype.get,a.prototype.set=function(e,t){if(i(e)){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&this.set(n,e[n]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},a.prototype.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},a.prototype.field=function(e,t){if(null==e)throw new Error(".field(name, val) name can not be empty");if(this._data)throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");if(i(e)){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&this.field(n,e[n]);return this}if(Array.isArray(t)){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&this.field(e,t[r]);return this}if(null==t)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof t&&(t=String(t)),this._getFormData().append(e,t),this},a.prototype.abort=function(){return this._aborted?this:(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort"),this)},a.prototype._auth=function(e,t,n,r){switch(n.type){case"basic":this.set("Authorization","Basic ".concat(r("".concat(e,":").concat(t))));break;case"auto":this.username=e,this.password=t;break;case"bearer":this.set("Authorization","Bearer ".concat(e))}return this},a.prototype.withCredentials=function(e){return void 0===e&&(e=!0),this._withCredentials=e,this},a.prototype.redirects=function(e){return this._maxRedirects=e,this},a.prototype.maxResponseSize=function(e){if("number"!=typeof e)throw new TypeError("Invalid argument");return this._maxResponseSize=e,this},a.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},a.prototype.send=function(e){var t=i(e),n=this._header["content-type"];if(this._formData)throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");if(t&&!this._data)Array.isArray(e)?this._data=[]:this._isHost(e)||(this._data={});else if(e&&this._data&&this._isHost(this._data))throw new Error("Can't merge these send calls");if(t&&i(this._data))for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(this._data[r]=e[r]);else"string"==typeof e?(n||this.type("form"),n=this._header["content-type"],this._data="application/x-www-form-urlencoded"===n?this._data?"".concat(this._data,"&").concat(e):e:(this._data||"")+e):this._data=e;return!t||this._isHost(e)?this:(n||this.type("json"),this)},a.prototype.sortQuery=function(e){return this._sort=void 0===e||e,this},a.prototype._finalizeQueryString=function(){var e=this._query.join("&");if(e&&(this.url+=(this.url.includes("?")?"&":"?")+e),this._query.length=0,this._sort){var t=this.url.indexOf("?");if(t>=0){var n=this.url.slice(t+1).split("&");"function"==typeof this._sort?n.sort(this._sort):n.sort(),this.url=this.url.slice(0,t)+"?"+n.join("&")}}},a.prototype._appendQueryString=function(){console.warn("Unsupported")},a.prototype._timeoutError=function(e,t,n){if(!this._aborted){var r=new Error("".concat(e+t,"ms exceeded"));r.timeout=t,r.code="ECONNABORTED",r.errno=n,this.timedout=!0,this.timedoutError=r,this.abort(),this.callback(r)}},a.prototype._setTimeouts=function(){var e=this;this._timeout&&!this._timer&&(this._timer=setTimeout((function(){e._timeoutError("Timeout of ",e._timeout,"ETIME")}),this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout((function(){e._timeoutError("Response timeout of ",e._responseTimeout,"ETIMEDOUT")}),this._responseTimeout))}},function(e,t,n){"use strict";var r=n(21);function o(e){if(e)return function(e){for(var t in o.prototype)Object.prototype.hasOwnProperty.call(o.prototype,t)&&(e[t]=o.prototype[t]);return e}(e)}e.exports=o,o.prototype.get=function(e){return this.header[e.toLowerCase()]},o.prototype._setHeaderProperties=function(e){var t=e["content-type"]||"";this.type=r.type(t);var n=r.params(t);for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(this[o]=n[o]);this.links={};try{e.link&&(this.links=r.parseLinks(e.link))}catch(e){}},o.prototype._setStatusProperties=function(e){var t=e/100|0;this.statusCode=e,this.status=this.statusCode,this.statusType=t,this.info=1===t,this.ok=2===t,this.redirect=3===t,this.clientError=4===t,this.serverError=5===t,this.error=(4===t||5===t)&&this.toError(),this.created=201===e,this.accepted=202===e,this.noContent=204===e,this.badRequest=400===e,this.unauthorized=401===e,this.notAcceptable=406===e,this.forbidden=403===e,this.notFound=404===e,this.unprocessableEntity=422===e}},function(e,t,n){"use strict";t.type=function(e){return e.split(/ *; */).shift()},t.params=function(e){return e.split(/ *; */).reduce((function(e,t){var n=t.split(/ *= */),r=n.shift(),o=n.shift();return r&&o&&(e[r]=o),e}),{})},t.parseLinks=function(e){return e.split(/ *, */).reduce((function(e,t){var n=t.split(/ *; */),r=n[0].slice(1,-1);return e[n[1].split(/ *= */)[1].slice(1,-1)]=r,e}),{})},t.cleanHeader=function(e,t){return delete e["content-type"],delete e["content-length"],delete e["transfer-encoding"],delete e.host,t&&(delete e.authorization,delete e.cookie),e}},function(e,t,n){"use strict";function r(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(){this._defaults=[]}["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert","disableTLSCerts"].forEach((function(e){o.prototype[e]=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return this._defaults.push({fn:e,args:n}),this}})),o.prototype._setDefaults=function(e){this._defaults.forEach((function(t){e[t.fn].apply(e,r(t.args))}))},e.exports=o},function(e,t,n){"use strict";var r=n(24);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===("undefined"==typeof window?"undefined":n(window))&&(r=window)}e.exports=r},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.async_mode"):60111,d=o?Symbol.for("react.concurrent_mode"):60111,h=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,y=o?Symbol.for("react.suspense_list"):60120,v=o?Symbol.for("react.memo"):60115,b=o?Symbol.for("react.lazy"):60116,g=o?Symbol.for("react.fundamental"):60117,w=o?Symbol.for("react.responder"):60118,E=o?Symbol.for("react.scope"):60119;function k(e){if("object"===r(e)&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case p:case d:case l:case c:case u:case m:return e;default:switch(e=e&&e.$$typeof){case f:case h:case b:case v:case s:return e;default:return t}}case a:return t}}}function x(e){return k(e)===d}t.typeOf=k,t.AsyncMode=p,t.ConcurrentMode=d,t.ContextConsumer=f,t.ContextProvider=s,t.Element=i,t.ForwardRef=h,t.Fragment=l,t.Lazy=b,t.Memo=v,t.Portal=a,t.Profiler=c,t.StrictMode=u,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===d||e===c||e===u||e===m||e===y||"object"===r(e)&&null!==e&&(e.$$typeof===b||e.$$typeof===v||e.$$typeof===s||e.$$typeof===f||e.$$typeof===h||e.$$typeof===g||e.$$typeof===w||e.$$typeof===E)},t.isAsyncMode=function(e){return x(e)||k(e)===p},t.isConcurrentMode=x,t.isContextConsumer=function(e){return k(e)===f},t.isContextProvider=function(e){return k(e)===s},t.isElement=function(e){return"object"===r(e)&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return k(e)===h},t.isFragment=function(e){return k(e)===l},t.isLazy=function(e){return k(e)===b},t.isMemo=function(e){return k(e)===v},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===c},t.isStrictMode=function(e){return k(e)===u},t.isSuspense=function(e){return k(e)===m}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(9),a=n.n(i);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(2),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function p(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var d=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&f(e),a=t&&f(t),l=i||a;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var d=o[s];"."===d?p(o,s):".."===d?(p(o,s),c++):c&&(p(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}var y=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"===h(t)||"object"===h(n)){var r=m(t),o=m(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};var v=function(e,t){if(!e)throw new Error("Invariant failed")};function b(e){return"/"===e.charAt(0)?e:"/"+e}function g(e){return"/"===e.charAt(0)?e.substr(1):e}function w(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function E(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function k(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function x(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=d(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function T(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var S=!("undefined"==typeof window||!window.document||!window.document.createElement);function _(e,t){t(window.confirm(e))}function C(){try{return window.history.state||{}}catch(e){return{}}}function P(e){void 0===e&&(e={}),S||v(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?_:u,f=i.keyLength,p=void 0===f?6:f,d=e.basename?E(b(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return d&&(i=w(i,d)),x(i,r,n)}function m(){return Math.random().toString(36).substr(2,p)}var y=T();function g(e){s(D,e),D.length=n.length,y.notifyListeners(D.location,D.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(h(e.state))}function O(){R(h(C()))}var N=!1;function R(e){if(N)N=!1,g();else{y.confirmTransitionTo(e,"POP",c,(function(t){t?g({action:"POP",location:e}):function(e){var t=D.location,n=j.indexOf(t.key);-1===n&&(n=0);var r=j.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(N=!0,z(o))}(e)}))}}var A=h(C()),j=[A.key];function M(e){return d+k(e)}function z(e){n.go(e)}var U=0;function L(e){1===(U+=e)&&1===e?(window.addEventListener("popstate",P),o&&window.addEventListener("hashchange",O)):0===U&&(window.removeEventListener("popstate",P),o&&window.removeEventListener("hashchange",O))}var I=!1;var D={length:n.length,action:"POP",location:A,createHref:M,push:function(e,t){var o=x(e,t,m(),D.location);y.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=M(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=j.indexOf(D.location.key),c=j.slice(0,u+1);c.push(o.key),j=c,g({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=x(e,t,m(),D.location);y.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=M(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=j.indexOf(D.location.key);-1!==u&&(j[u]=o.key),g({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=y.setPrompt(e);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),t()}},listen:function(e){var t=y.appendListener(e);return L(1),function(){L(-1),t()}}};return D}var O={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+g(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:g,decodePath:b},slash:{encodePath:b,decodePath:b}};function N(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function R(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function A(e){window.location.replace(N(window.location.href)+"#"+e)}function j(e){void 0===e&&(e={}),S||v(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?_:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?E(b(e.basename)):"",u=O[a],c=u.encodePath,f=u.decodePath;function p(){var e=f(R());return l&&(e=w(e,l)),x(e)}var d=T();function h(e){s(D,e),D.length=t.length,d.notifyListeners(D.location,D.action)}var m=!1,y=null;function g(){var e,t,n=R(),r=c(n);if(n!==r)A(r);else{var i=p(),a=D.location;if(!m&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(y===k(i))return;y=null,function(e){if(m)m=!1,h();else{d.confirmTransitionTo(e,"POP",o,(function(t){t?h({action:"POP",location:e}):function(e){var t=D.location,n=M.lastIndexOf(k(t));-1===n&&(n=0);var r=M.lastIndexOf(k(e));-1===r&&(r=0);var o=n-r;o&&(m=!0,z(o))}(e)}))}}(i)}}var C=R(),P=c(C);C!==P&&A(P);var j=p(),M=[k(j)];function z(e){t.go(e)}var U=0;function L(e){1===(U+=e)&&1===e?window.addEventListener("hashchange",g):0===U&&window.removeEventListener("hashchange",g)}var I=!1;var D={length:t.length,action:"POP",location:j,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=N(window.location.href)),n+"#"+c(l+k(e))},push:function(e,t){var n=x(e,void 0,void 0,D.location);d.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=k(n),r=c(l+t);if(R()!==r){y=t,function(e){window.location.hash=e}(r);var o=M.lastIndexOf(k(D.location)),i=M.slice(0,o+1);i.push(t),M=i,h({action:"PUSH",location:n})}else h()}}))},replace:function(e,t){var n=x(e,void 0,void 0,D.location);d.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=k(n),r=c(l+t);R()!==r&&(y=t,A(r));var o=M.indexOf(k(D.location));-1!==o&&(M[o]=t),h({action:"REPLACE",location:n})}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=d.setPrompt(e);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),t()}},listen:function(e){var t=d.appendListener(e);return L(1),function(){L(-1),t()}}};return D}function M(e,t,n){return Math.min(Math.max(e,t),n)}function z(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,a=void 0===i?0:i,l=t.keyLength,u=void 0===l?6:l,c=T();function f(e){s(v,e),v.length=v.entries.length,c.notifyListeners(v.location,v.action)}function p(){return Math.random().toString(36).substr(2,u)}var d=M(a,0,o.length-1),h=o.map((function(e){return x(e,void 0,"string"==typeof e?p():e.key||p())})),m=k;function y(e){var t=M(v.index+e,0,v.entries.length-1),r=v.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var v={length:h.length,action:"POP",location:h[d],index:d,entries:h,createHref:m,push:function(e,t){var r=x(e,t,p(),v.location);c.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=v.index+1,n=v.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=x(e,t,p(),v.location);c.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(v.entries[v.index]=r,f({action:"REPLACE",location:r}))}))},go:y,goBack:function(){y(-1)},goForward:function(){y(1)},canGo:function(e){var t=v.index+e;return t>=0&&t<v.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return v}var U=n(4),L=n.n(U),I=n(10),D=n.n(I);function F(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var $=o.a.createContext||function(e,t){var n,o,i="__create-react-context-"+D()()+"__",a=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=F(t.props.value),t}L()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);a.childContextTypes=((n={})[i]=c.a.object.isRequired,n);var l=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}L()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return l.contextTypes=((o={})[i]=c.a.object,o),{Provider:a,Consumer:l}},H=n(5),W=n.n(H);n(8);function B(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(11);var q=function(e){var t=$();return t.displayName=e,t}("Router"),V=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(q.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;var Q=function(e){function t(){return e.apply(this,arguments)||this}l(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(o.a.Component);var K={},X=0;function Y(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(K[e])return K[e];var t=W.a.compile(e);return X<1e4&&(K[e]=t,X++),t}(e)(t,{pretty:!0})}function G(e){var t=e.computedMatch,n=e.to,r=e.push,i=void 0!==r&&r;return o.a.createElement(q.Consumer,null,(function(e){e||v(!1);var r=e.history,a=e.staticContext,l=i?r.push:r.replace,u=x(t?"string"==typeof n?Y(n,t.params):s({},n,{pathname:Y(n.pathname,t.params)}):n);return a?(l(u),null):o.a.createElement(Q,{onMount:function(){l(u)},onUpdate:function(e,t){var n,r,o=x(t.to);n=o,r=s({},u,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&y(n.state,r.state)||l(u)},to:n})}))}var J={},Z=0;function ee(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=J[n]||(J[n]={});if(r[e])return r[e];var o=[],i={regexp:W()(e,o,t),keys:o};return Z<1e4&&(r[e]=i,Z++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),p=e===s;return i&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var te=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(q.Consumer,null,(function(t){t||v(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ee(n.pathname,e.props):t.match}),i=e.props,a=i.children,l=i.component,u=i.render;return Array.isArray(a)&&0===a.length&&(a=null),o.a.createElement(q.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?o.a.createElement(l,r):u?u(r):null:"function"==typeof a?a(r):null)}))},t}(o.a.Component);function ne(e){return"/"===e.charAt(0)?e:"/"+e}function re(e,t){if(!e)return t;var n=ne(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function oe(e){return"string"==typeof e?e:k(e)}function ie(e){return function(){v(!1)}}function ae(){}o.a.Component;var le=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(q.Consumer,null,(function(t){t||v(!1);var n,r,i=e.props.location||t.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?ee(i.pathname,s({},e.props,{path:a})):t.match}})),r?o.a.cloneElement(n,{location:i,computedMatch:r}):null}))},t}(o.a.Component);o.a.useContext;var ue=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=P(t.props),t}return l(t,e),t.prototype.render=function(){return o.a.createElement(V,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var ce=function(e,t){return"function"==typeof e?e(t):e},se=function(e,t){return"string"==typeof e?x(e,null,null,t):e},fe=function(e){return e},pe=o.a.forwardRef;void 0===pe&&(pe=fe);var de=pe((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,a=B(e,["innerRef","navigate","onClick"]),l=a.target,u=s({},a,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=fe!==pe&&t||n,o.a.createElement("a",u)}));var he=pe((function(e,t){var n=e.component,r=void 0===n?de:n,i=e.replace,a=e.to,l=e.innerRef,u=B(e,["component","replace","to","innerRef"]);return o.a.createElement(q.Consumer,null,(function(e){e||v(!1);var n=e.history,c=se(ce(a,e.location),e.location),f=c?n.createHref(c):"",p=s({},u,{href:f,navigate:function(){var t=ce(a,e.location);(i?n.replace:n.push)(t)}});return fe!==pe?p.ref=t||l:p.innerRef=l,o.a.createElement(r,p)}))})),me=function(e){return e},ye=o.a.forwardRef;void 0===ye&&(ye=me);ye((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,a=void 0===i?"active":i,l=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,p=e.location,d=e.strict,h=e.style,m=e.to,y=e.innerRef,b=B(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(q.Consumer,null,(function(e){e||v(!1);var n=p||e.location,i=se(ce(m,n),n),g=i.pathname,w=g&&g.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=w?ee(n.pathname,{path:w,exact:c,strict:d}):null,k=!!(f?f(E,n):E),x=k?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,a):u,T=k?s({},h,{},l):h,S=s({"aria-current":k&&r||null,className:x,style:T,to:i},b);return me!==ye?S.ref=t||y:S.innerRef=y,o.a.createElement(he,S)}))}));var ve=n(1),be=n.n(ve),ge={show:{border:"1px solid gray",padding:12},edit:{padding:12,backgroundColor:"silver"},right:{textAlign:"right"},error:{color:"red"},login:{width:300,textAlign:"left",marginLeft:30,padding:15},timeline:{borderBottom:"1px solid silver",padding:10,margin:10},tl_img:{float:"left",width:32},userid:{float:"left",color:"gray",padding:5,margin:5,width:70,textAlign:"right"},comment:{float:"left",padding:5,margin:5,width:300},friend:{padding:10,borderBottom:"1px solid silver"}};function we(e){return(we="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ke(e,t){return!t||"object"!==we(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function xe(e){return(xe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Te(e,t){return(Te=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Se=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=ke(this,xe(t).call(this,e))).state={users:[],jump:"",friends:[]},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Te(e,t)}(t,e),n=t,(r=[{key:"componentWillMount",value:function(){this.loadUsers()}},{key:"loadUsers",value:function(){var e=this;be.a.get("/api/get_allusers").end((function(t,n){t||e.setState({users:n.body.users})})),be.a.get("/api/get_user").query({userid:window.localStorage.sns_id}).end((function(t,n){console.log(t,n),t||e.setState({friends:n.body.friends})}))}},{key:"addFriend",value:function(e){var t=this;if(!window.localStorage.sns_auth_token)return window.alert("先にログインしてください"),void this.setState({jump:"/login"});be.a.get("/api/add_friend").query({userid:window.localStorage.sns_id,token:window.localStorage.sns_auth_token,friendid:e}).end((function(e,n){e||(n.body.status?t.loadUsers():window.alert(n.body.msg))}))}},{key:"render",value:function(){var e=this;if(this.state.jump)return o.a.createElement(G,{to:this.state.jump});var t=this.state.friends?this.state.friends:{},n=this.state.users.map((function(n){var r=t[n]?"".concat(n,"は友達です"):o.a.createElement("button",{onClick:function(t){return e.addFriend(n)}},n,"を友達に追加");return o.a.createElement("div",{key:"fid_"+n,style:ge.friend},o.a.createElement("img",{src:"user.png",width:80})," ",r)}));return o.a.createElement("div",null,o.a.createElement("h1",null,"ユーザーの一覧"),o.a.createElement("div",null,n),o.a.createElement("div",null,o.a.createElement("br",null),o.a.createElement("a",{href:"/timeline"},"→タイムラインを見る")))}}])&&Ee(n.prototype,r),i&&Ee(n,i),t}(r.Component);function _e(e){return(_e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ce(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Pe(e,t){return!t||"object"!==_e(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Oe(e){return(Oe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ne(e,t){return(Ne=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Re=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Pe(this,Oe(t).call(this,e))).state={timelines:[],comment:""},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ne(e,t)}(t,e),n=t,(r=[{key:"componentWillMount",value:function(){this.loadTimelines()}},{key:"loadTimelines",value:function(){var e=this;be.a.get("/api/get_friends_timeline").query({userid:window.localStorage.sns_id,token:window.localStorage.sns_auth_token}).end((function(t,n){t||e.setState({timelines:n.body.timelines})}))}},{key:"post",value:function(){var e=this;be.a.get("/api/add_timeline").query({userid:window.localStorage.sns_id,token:window.localStorage.sns_auth_token,comment:this.state.comment}).end((function(t,n){t||(e.setState({comment:""}),e.loadTimelines())}))}},{key:"render",value:function(){var e=this,t=this.state.timelines.map((function(e){return o.a.createElement("div",{key:e._id,style:ge.timeline},o.a.createElement("img",{src:"user.png",style:ge.tl_img}),o.a.createElement("div",{style:ge.userid},e.userid,":"),o.a.createElement("div",{style:ge.comment},e.comment),o.a.createElement("p",{style:{clear:"both"}}))}));return o.a.createElement("div",null,o.a.createElement("h1",null,"タイムライン"),o.a.createElement("div",null,o.a.createElement("input",{value:this.state.comment,size:40,onChange:function(t){return e.setState({comment:t.target.value})}}),o.a.createElement("button",{onClick:function(t){return e.post()}},"書き込む")),o.a.createElement("div",null,t),o.a.createElement("hr",null),o.a.createElement("p",null,o.a.createElement("a",{href:"/users"},"→友達を追加する")),o.a.createElement("p",null,o.a.createElement("a",{href:"/login"},"→別のユーザーでログイン")),o.a.createElement("p",null,o.a.createElement("a",{href:"/"},"→FrontPageへ")))}}])&&Ce(n.prototype,r),i&&Ce(n,i),t}(r.Component);function Ae(e){return(Ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function je(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Me(e,t){return!t||"object"!==Ae(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ue(e,t){return(Ue=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Le=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Me(this,ze(t).call(this,e))).state={userid:"",passwd:"",jump:"",msg:""},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ue(e,t)}(t,e),n=t,(r=[{key:"api",value:function(e){var t=this;be.a.get("/api/"+e).query({userid:this.state.userid,passwd:this.state.passwd}).end((function(e,n){if(!e){var r=n.body;if(console.log(r),r.status&&r.token)return window.localStorage.sns_id=t.state.userid,window.localStorage.sns_auth_token=r.token,void t.setState({jump:"/timeline"});t.setState({msg:r.msg})}}))}},{key:"render",value:function(){var e=this;if(this.state.jump)return o.a.createElement(G,{to:this.state.jump});var t=function(t,n){return e.setState((r={},o=t,i=n.target.value,o in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i,r));var r,o,i};return o.a.createElement("div",null,o.a.createElement("h1",null,"ログイン"),o.a.createElement("div",{style:ge.login},"ユーザーID:",o.a.createElement("br",null),o.a.createElement("input",{value:this.state.userid,onChange:function(e){return t("userid",e)}}),o.a.createElement("br",null),"パスワード:",o.a.createElement("br",null),o.a.createElement("input",{value:this.state.passwd,onChange:function(e){return t("passwd",e)}}),o.a.createElement("br",null),o.a.createElement("button",{onClick:function(t){return e.api("login")}},"ログイン"),o.a.createElement("p",{style:ge.error},this.state.msg),o.a.createElement("p",null,o.a.createElement("button",{onClick:function(t){return e.api("adduser")}},"ユーザー登録（初回）"))))}}])&&je(n.prototype,r),i&&je(n,i),t}(r.Component);function Ie(e){return(Ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function De(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Fe(e,t){return!t||"object"!==Ie(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function $e(e){return($e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function He(e,t){return(He=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var We=function(e){function t(e){var n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var r=(n=Fe(this,$e(t).call(this,e))).props.match.params.name;return n.state={name:r,body:"",loaded:!1,jump:""},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&He(e,t)}(t,e),n=t,(r=[{key:"componentWillMount",value:function(){var e=this;be.a.get("/api/get/".concat(this.state.name)).end((function(t,n){t||e.setState({body:n.body.data.body,loaded:!0})}))}},{key:"save",value:function(){var e=this,t=this.state.name;be.a.post("/api/put/"+t).type("form").send({name:t,body:this.state.body}).end((function(n,r){n?console.log(n):e.setState({jump:"/wiki/"+t})}))}},{key:"bodyChanged",value:function(e){this.setState({body:e.target.value})}},{key:"render",value:function(){var e=this;if(!this.state.loaded)return o.a.createElement("p",null,"読み込み中");if(""!==this.state.jump)return o.a.createElement(G,{to:this.state.jump});var t=this.state.name;return o.a.createElement("div",{style:ge.edit},o.a.createElement("h1",null,o.a.createElement("a",{href:"/wiki/".concat(t)},t)),o.a.createElement("textarea",{rows:12,cols:60,onChange:function(t){return e.bodyChanged(t)},value:this.state.body}),o.a.createElement("br",null),o.a.createElement("button",{onClick:function(t){return e.save()}},"保存"))}}])&&De(n.prototype,r),i&&De(n,i),t}(r.Component),Be=n(12),qe=n.n(Be);function Ve(e){return(Ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Qe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ke(e,t){return!t||"object"!==Ve(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Xe(e){return(Xe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ye(e,t){return(Ye=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ge=function(e){function t(e){var n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var r=(n=Ke(this,Xe(t).call(this,e))).props.match.params;return n.state={name:r.name,body:"",loaded:!1},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ye(e,t)}(t,e),n=t,(r=[{key:"componentWillMount",value:function(){var e=this;be.a.get("/api/get/".concat(this.state.name)).end((function(t,n){t||e.setState({body:n.body.data.body,loaded:!0})}))}},{key:"render",value:function(){if(!this.state.loaded)return o.a.createElement("p",null,"読み込み中");var e=this.state.name,t=this.state.body,n=this.convertText(t);return o.a.createElement("div",null,o.a.createElement("p",null,o.a.createElement("a",{href:"/login"},"ログイン")),o.a.createElement("h1",null,this.state.name),o.a.createElement("div",{style:ge.show},n),o.a.createElement("p",{style:ge.right},o.a.createElement("a",{href:"/edit/".concat(e)},"→このページを編集")))}},{key:"convertText",value:function(e){return qe.a.parse(e).map((function(e,t){if("ul"===e.tag){var n=e.items.map((function(e,n){return o.a.createElement("li",{key:"node".concat(t,"_").concat(n)},e)}));return o.a.createElement("ul",{key:"node".concat(t)},n)}return"a"===e.tag?o.a.createElement("div",{key:"node".concat(t)},o.a.createElement("a",{href:"/wiki/".concat(e.label)},"→",e.label)):o.a.createElement(e.tag,{key:"node"+t},e.label)}))}}])&&Qe(n.prototype,r),i&&Qe(n,i),t}(o.a.Component);a.a.render(o.a.createElement((function(){return o.a.createElement(ue,null,o.a.createElement("div",null,o.a.createElement(le,null,o.a.createElement(te,{path:"/users",component:Se}),o.a.createElement(te,{path:"/timeline",component:Re}),o.a.createElement(te,{path:"/login",component:Le}),o.a.createElement(te,{path:"/wiki/:name",component:Ge}),o.a.createElement(te,{path:"/edit/:name",component:We}))))}),null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uLi9zcmMvY2xpZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9zcmMvaXMtb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ndWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL3NyYy93aWtpX3BhcnNlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29tcG9uZW50LWVtaXR0ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zhc3Qtc2FmZS1zdHJpbmdpZnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL3NyYy9yZXF1ZXN0LWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4uL3NyYy9yZXNwb25zZS1iYXNlLmpzIiwid2VicGFjazovLy8uLi9zcmMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4uL3NyYy9hZ2VudC1iYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2VzbS9yZXNvbHZlLXBhdGhuYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9lc20vdmFsdWUtZXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzbS9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL1JvdXRlckNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9MaWZlY3ljbGUuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9TdGF0aWNSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL2hvb2tzLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy91dGlscy9sb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL0xpbmsuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvTmF2TGluay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy91c2Vycy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdGltZWxpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xvZ2luLmpzIiwid2VicGFjazovLy8uL3NyYy93aWtpX2VkaXQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3dpa2lfc2hvdy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJyZXF1aXJlIiwid2luZG93Iiwicm9vdCIsInNlbGYiLCJjb25zb2xlIiwiRW1pdHRlciIsInNhZmVTdHJpbmdpZnkiLCJSZXF1ZXN0QmFzZSIsImlzT2JqZWN0IiwiUmVzcG9uc2VCYXNlIiwiQWdlbnQiLCJub29wIiwidXJsIiwiYXJndW1lbnRzIiwicmVxdWVzdCIsIkFjdGl2ZVhPYmplY3QiLCJFcnJvciIsInRyaW0iLCJzZXJpYWxpemUiLCJvYmoiLCJwYWlycyIsInB1c2hFbmNvZGVkS2V5VmFsdWVQYWlyIiwidmFsIiwiQXJyYXkiLCJ2IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicGFyc2VTdHJpbmciLCJzdHIiLCJsZW4iLCJwb3MiLCJwYWlyIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiaXNKU09OIiwibWltZSIsInRlc3QiLCJSZXNwb25zZSIsInJlcSIsInRoaXMiLCJtZXRob2QiLCJ4aHIiLCJyZXNwb25zZVR5cGUiLCJzdGF0dXMiLCJsaW5lcyIsImZpZWxkcyIsImluZGV4IiwibGluZSIsImZpZWxkIiwicGFyc2VIZWFkZXIiLCJnZXRSZXNwb25zZUhlYWRlciIsInRleHQiLCJfcGFyc2VCb2R5IiwiUmVxdWVzdCIsIl9xdWVyeSIsImVyciIsInJlcyIsImVycl8iLCJuZXdfZXJyIiwiZGVsIiwiZGF0YSIsImZuIiwiaHRtbCIsImpzb24iLCJ4bWwiLCJ1cmxlbmNvZGVkIiwiZm9ybSIsIkpTT04iLCJwYXJzZSIsIl9wYXJzZXIiLCJtc2ciLCJwYXNzIiwib3B0aW9ucyIsInR5cGUiLCJidG9hIiwiZW5jb2RlciIsInN0cmluZyIsIl9hdXRoIiwidXNlciIsInB1c2giLCJmaWxlIiwiX3Nob3VsZFJldHJ5IiwiX3JldHJpZXMiLCJfdXBsb2FkVGltZW91dCIsInNldFRpbWVvdXQiLCJjYWxsYmFjayIsIl9mb3JtRGF0YSIsInJlYWR5U3RhdGUiLCJjbGVhclRpbWVvdXQiLCJoYW5kbGVQcm9ncmVzcyIsImRpcmVjdGlvbiIsImUiLCJoYXNMaXN0ZW5lcnMiLCJ1c2VybmFtZSIsIl9pc0hvc3QiLCJjb250ZW50VHlwZSIsIl9oZWFkZXIiLCJfc2VyaWFsaXplciIsImhlYWRlciIsImZvckVhY2giLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJjb21waWxlIiwidG9rZW5zVG9GdW5jdGlvbiIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJSZWdFeHAiLCJqb2luIiwidG9rZW5zIiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibGVuZ3RoIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJyZXBsYWNlIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiZmxhZ3MiLCJvcHRzIiwiZW5jb2RlIiwicHJldHR5IiwidG9rZW4iLCJzZWdtZW50IiwiVHlwZUVycm9yIiwic3RyaW5naWZ5IiwiaiIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwic291cmNlIiwibWF0Y2giLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsInRlc3QzIiwic3BsaXQiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJmcm9tIiwic3ltYm9scyIsInRvIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJwcm9jZXNzIiwiZXJyb3IiLCJnbG9iYWwiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsInJlbmRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJjb25jYXQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJwZWckU3ludGF4RXJyb3IiLCJtZXNzYWdlIiwiZXhwZWN0ZWQiLCJmb3VuZCIsImxvY2F0aW9uIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJjaGlsZCIsInBhcmVudCIsImN0b3IiLCJwZWckc3ViY2xhc3MiLCJidWlsZE1lc3NhZ2UiLCJERVNDUklCRV9FWFBFQ1RBVElPTl9GTlMiLCJsaXRlcmFsIiwiZXhwZWN0YXRpb24iLCJsaXRlcmFsRXNjYXBlIiwiZXNjYXBlZFBhcnRzIiwiY2xhc3NFc2NhcGUiLCJpbnZlcnRlZCIsImFueSIsIm90aGVyIiwiZGVzY3JpcHRpb24iLCJoZXgiLCJjaCIsImRlc2NyaXB0aW9ucyIsInNvcnQiLCJkZXNjcmliZUV4cGVjdGVkIiwiZGVzY3JpYmVGb3VuZCIsIlN5bnRheEVycm9yIiwiaW5wdXQiLCJwZWckcmVzdWx0IiwicGVnJEZBSUxFRCIsInBlZyRzdGFydFJ1bGVGdW5jdGlvbnMiLCJzdGFydCIsInBlZyRwYXJzZXN0YXJ0IiwicGVnJHN0YXJ0UnVsZUZ1bmN0aW9uIiwicGVnJGMxIiwicGVnJGxpdGVyYWxFeHBlY3RhdGlvbiIsInBlZyRjMiIsInBlZyRjNiIsInBlZyRjNyIsInBlZyRjOCIsImlnbm9yZUNhc2UiLCJwZWckYzEwIiwicGVnJGMxMyIsInBlZyRjMTYiLCJwZWckYzE4IiwibGFiZWwiLCJ0YWciLCJwZWckY3VyclBvcyIsInBlZyRwb3NEZXRhaWxzQ2FjaGUiLCJjb2x1bW4iLCJwZWckbWF4RmFpbFBvcyIsInBlZyRtYXhGYWlsRXhwZWN0ZWQiLCJwZWckc2lsZW50RmFpbHMiLCJzdGFydFJ1bGUiLCJwZWckY29tcHV0ZVBvc0RldGFpbHMiLCJkZXRhaWxzIiwicGVnJGNvbXB1dGVMb2NhdGlvbiIsInN0YXJ0UG9zIiwiZW5kUG9zIiwic3RhcnRQb3NEZXRhaWxzIiwiZW5kUG9zRGV0YWlscyIsInBlZyRmYWlsIiwicGVnJGJ1aWxkU3RydWN0dXJlZEVycm9yIiwiczAiLCJzMSIsInBlZyRwYXJzZXNlbnRlbmNlIiwiczIiLCJzMyIsInM0IiwiczUiLCJzNiIsInBlZyRwYXJzZUVPTCIsImNoYXJBdCIsInN1YnN0cmluZyIsInBlZyRwYXJzZXRpdGxlIiwicGVnJHBhcnNlbGlzdF9pdGVtIiwiaXRlbXMiLCJwZWckcGFyc2VsaXN0IiwicGVnJHBhcnNlYmxvY2txdW90ZSIsInBlZyRwYXJzZWxpbmsiLCJwZWckcGFyc2Vub3AiLCJwZWckcGFyc2V0ZXh0IiwicGVnJHBhcnNlZW9zIiwiaCIsInEiLCJ1IiwidyIsIngiLCJ5IiwieiIsImFhIiwiQSIsIml0ZXJhdG9yIiwiQiIsImEiLCJiIiwiQyIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJEIiwiRSIsInByb3BzIiwiY29udGV4dCIsInJlZnMiLCJ1cGRhdGVyIiwiRiIsIkciLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIkgiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkkiLCJjdXJyZW50IiwiSiIsIksiLCJMIiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJNIiwiZyIsImYiLCJjaGlsZHJlbiIsImsiLCIkJHR5cGVvZiIsIl9vd25lciIsIk4iLCJPIiwiUCIsIlEiLCJwb3AiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJSIiwiVSIsIlMiLCJUIiwiaXNBcnJheSIsImRvbmUiLCJlc2NhcGUiLCJjYSIsImRhIiwiViIsImJhIiwiVyIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIlJlYWN0Q3VycmVudE93bmVyIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJZIiwiZGVmYXVsdCIsIloiLCJpbmRleE9mIiwiZWEiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsImZhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJoYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJpYSIsImphIiwiZGVwZW5kZW5jaWVzIiwia2EiLCJhcHBseSIsIm9uRXJyb3IiLCJsYSIsIm1hIiwibmEiLCJvYSIsInBhIiwicWEiLCJzYSIsInVhIiwidmEiLCJ3YSIsImN1cnJlbnRUYXJnZXQiLCJyYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJDYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJEYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJSYSIsIlNhIiwiVGEiLCJVYSIsIldhIiwiWGEiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsIllhIiwiZG9jdW1lbnQiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsIk1hcCIsImxiIiwibWIiLCJuYiIsIm9iIiwicmIiLCJhY2NlcHRzQm9vbGVhbnMiLCJ0b0xvd2VyQ2FzZSIsInFiIiwiaXNOYU4iLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJzYiIsInRiIiwidWIiLCJ2YiIsInBiIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ3YiIsIm5vZGVOYW1lIiwieWIiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInhiIiwiemIiLCJjaGVja2VkIiwiQWIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkJiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkNiIiwiRWIiLCJGYiIsIkdiIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJJYiIsIkhiIiwiSmIiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIktiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJMYiIsIk1iIiwiTmIiLCJ0ZXh0Q29udGVudCIsInhsaW5rSHJlZiIsIk9iIiwiUGIiLCJRYiIsIlJiIiwiU2IiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiVGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlViIiwiVmIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJXYiIsIlhiIiwiWWIiLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZWMiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJmYyIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiZ2MiLCJpYyIsInNpYmxpbmciLCJoYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJvYyIsInBjIiwicWMiLCJyYyIsInNjIiwidGMiLCJ1YyIsInZjIiwiemMiLCJibG9ja2VkT24iLCJ0b3BMZXZlbFR5cGUiLCJldmVudFN5c3RlbUZsYWdzIiwibmF0aXZlRXZlbnQiLCJBYyIsInBvaW50ZXJJZCIsIkJjIiwiQ2MiLCJFYyIsIkZjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwic2hpZnQiLCJLYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIkxjIiwiTWMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwiTmMiLCJPYyIsImRpc3BhdGNoQ29uZmlnIiwiUGMiLCJfdGFyZ2V0SW5zdCIsIlFjIiwiUmMiLCJTYyIsIlRjIiwiVWMiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJXYyIsImV2ZW50UG9vbCIsIlhjIiwiZGVzdHJ1Y3RvciIsIlZjIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsIlljIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIlpjIiwiY2xpcGJvYXJkRGF0YSIsIiRjIiwidmlldyIsImRldGFpbCIsImFkIiwicmVsYXRlZFRhcmdldCIsImJkIiwia2V5Q29kZSIsImNoYXJDb2RlIiwiY2QiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiZGQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwiZWQiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiZ2QiLCJnZXRNb2RpZmllclN0YXRlIiwiaGQiLCJpZCIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJsb2NhbGUiLCJ3aGljaCIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIm9kIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwicGQiLCJkYXRhVHJhbnNmZXIiLCJxZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJyZCIsInNkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ0ZCIsInVkIiwidmQiLCJ3ZCIsInlkIiwiemQiLCJBZCIsIkJkIiwiQ2QiLCJEZCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImV2ZW50UHJpb3JpdHkiLCJFZCIsImdldEV2ZW50UHJpb3JpdHkiLCJGZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiR2QiLCJIZCIsIkpkIiwiS2QiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJRZCIsIkRjIiwiUmQiLCJTZCIsIldlYWtNYXAiLCJ4YyIsIlNldCIsInljIiwiaGFzIiwiYWRkIiwiVGQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIlVkIiwiVmQiLCJXZCIsInNldFByb3BlcnR5IiwiWGQiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiWWQiLCJaZCIsImlzIiwiJGQiLCJhZSIsImJlIiwiYm9keSIsImNlIiwiZGUiLCJub2RlIiwibmV4dFNpYmxpbmciLCJmZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJnZSIsImNvbnRlbnRFZGl0YWJsZSIsImxlIiwibWUiLCJuZSIsImF1dG9Gb2N1cyIsIm9lIiwiX19odG1sIiwicGUiLCJxZSIsInNlIiwicHJldmlvdXNTaWJsaW5nIiwidGUiLCJNYXRoIiwicmFuZG9tIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJIZSIsImRvY3VtZW50TW9kZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIk1lIiwiTmUiLCJPZSIsIlBlIiwiU2UiLCJRZSIsIlJlIiwiVGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsIndlZWsiLCJVZSIsIlZlIiwiY2hhbmdlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRldGFjaEV2ZW50IiwiZGYiLCJlZiIsImF0dGFjaEV2ZW50IiwiZmYiLCJnZiIsImhmIiwibGYiLCJqZiIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJrZiIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwibWYiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJzZWxlY3QiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInhmIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJ5ZiIsIm9uU2VsZWN0IiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiT2YiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlBmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiUWYiLCJ1bnN0YWJsZV9ub3ciLCJSZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiU2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlRmIiwiVWYiLCJWZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiV2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJ2ZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwid2ciLCJ4ZyIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ5ZyIsInpnIiwiYmFzZVN0YXRlIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0RWZmZWN0IiwibGFzdEVmZmVjdCIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJBZyIsIkJnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwibmV4dEVmZmVjdCIsIkNnIiwiRGciLCJ1cGRhdGVRdWV1ZSIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJTZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJQZyIsIlFnIiwiUmciLCJUZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIlVnIiwic3RhdGUiLCJWZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIldnIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJYZyIsIllnIiwiX3N0cmluZ1JlZiIsIlpnIiwiJGciLCJhaCIsImJoIiwiZWxlbWVudFR5cGUiLCJpbXBsZW1lbnRhdGlvbiIsImRoIiwiZWgiLCJ0YSIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJraCIsImxoIiwibWgiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwibmgiLCJvaCIsInBoIiwicWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJyaCIsInJlc3BvbmRlciIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJ4aCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwicXVldWUiLCJiYXNlVXBkYXRlIiwiT2giLCJQaCIsIlFoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImRpc3BhdGNoIiwiYWN0aW9uIiwibGFzdCIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsIlJoIiwiU2giLCJUaCIsIlVoIiwiZGVzdHJveSIsImRlcHMiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwicmVhZENvbnRleHQiLCJ1c2VSZXNwb25kZXIiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVuc3RhYmxlX25leHQiLCJjaSIsImRpIiwiZWkiLCJmaSIsImdpIiwiaGkiLCJwZW5kaW5nUHJvcHMiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwibmkiLCJvaSIsInBpIiwicWkiLCJyaSIsInNpIiwidGkiLCJ1aSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInZpIiwid2kiLCJwZW5kaW5nQ29udGV4dCIsIkhpIiwiSmkiLCJLaSIsInhpIiwicmV0cnlUaW1lIiwieWkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwiemkiLCJBaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJCaSIsIkNpIiwiTGkiLCJNaSIsIk5pIiwic3RhY2siLCJvbkNsaWNrIiwib25jbGljayIsIk9pIiwiV2Vha1NldCIsIlBpIiwiU2kiLCJSaSIsIlRpIiwiVWkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlZpIiwiV2kiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIlFpIiwiWGkiLCJZaSIsIlppIiwiJGkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJhaiIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJiaiIsImRpc3BsYXkiLCJjaiIsImRqIiwidGhlbiIsImVqIiwiZmoiLCJlbGVtZW50IiwiZ2oiLCJoaiIsImlqIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJqaiIsImNvbXBvbmVudFN0YWNrIiwiZ2siLCJraiIsImNlaWwiLCJsaiIsIm1qIiwid2oiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJ0aW1lb3V0TXMiLCJLaiIsIkxqIiwiTWoiLCJOaiIsIk9qIiwibGFzdEV4cGlyZWRUaW1lIiwiUGoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIlFqIiwidGltZW91dCIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkRXhwaXJhdGlvblRpbWUiLCJsYXN0U3VzcGVuZGVkVGltZSIsIlhqIiwidGltZW91dEhhbmRsZSIsIllqIiwiYnVzeU1pbkR1cmF0aW9uTXMiLCJidXN5RGVsYXlNcyIsIlpqIiwiYmsiLCJjayIsInBpbmdDYWNoZSIsImRrIiwiZWsiLCJmayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsImlrIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIkRiIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImprIiwiZWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIkRoIiwiZGMiLCJmZCIsImhrIiwiRWgiLCJGaCIsInhrIiwiRGkiLCJFaSIsIkZpIiwieGQiLCJHaSIsImtrIiwibGsiLCJtayIsImhpZGRlbiIsIlZhIiwibmsiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJwayIsInBlbmRpbmdDaGlsZHJlbiIsInFrIiwicmsiLCJzayIsInRrIiwidWsiLCJ2ayIsIndjIiwiX2ludGVybmFsUm9vdCIsIndrIiwiemsiLCJoYXNBdHRyaWJ1dGUiLCJ5ayIsIkFrIiwiQmsiLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImFrIiwiQ2siLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIm9rIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJEayIsIkVrIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsIm1peGluIiwib24iLCJldmVudCIsIl9jYWxsYmFja3MiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2FsbGJhY2tzIiwic3BsaWNlIiwiZW1pdCIsImFyZ3MiLCJsaXN0ZW5lcnMiLCJzdGFibGUiLCJkZXRlcm1pbmlzdGljU3RyaW5naWZ5Iiwic3RhYmxlU3RyaW5naWZ5IiwiYXJyIiwicmVwbGFjZXJTdGFjayIsInJlcGxhY2VyIiwic3BhY2VyIiwiZGVjaXJjIiwicHJvcGVydHlEZXNjcmlwdG9yIiwidW5kZWZpbmVkIiwicmVwbGFjZUdldHRlclZhbHVlcyIsInBhcnQiLCJjb21wYXJlRnVuY3Rpb24iLCJ0bXAiLCJkZXRlcm1pbmlzdGljRGVjaXJjIiwidG9KU09OIiwiRVJST1JfQ09ERVMiLCJvdmVycmlkZSIsIl9yZXRyeUNhbGxiYWNrIiwiUHJvbWlzZSIsInJlamVjdCIsInJlc29sdmUiLCJfZnVsbGZpbGxlZFByb21pc2UiLCJfb2tDYWxsYmFjayIsImJhc2U2NEVuY29kZXIiLCJoZWFkZXJzIiwiaXNPYmoiLCJfZGF0YSIsInF1ZXJ5IiwiaW5jbHVkZXMiLCJxdWVyeUFyciIsInJlYXNvbiIsIl90aW1lb3V0IiwiX3Jlc3BvbnNlVGltZW91dCIsInV0aWxzIiwiY3QiLCJwYXJhbXMiLCJkZWYiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN5bWJvbCIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIkZ1bmN0aW9uIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiTGF6eSIsIk1lbW8iLCJQb3J0YWwiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJfaW5oZXJpdHNMb29zZSIsIl9leHRlbmRzIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwibGlzdCIsInJlc29sdmVQYXRobmFtZSIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJ1cCIsInVuc2hpZnQiLCJ2YWx1ZUVxdWFsIiwiZXZlcnkiLCJpdGVtIiwiYVZhbHVlIiwiYlZhbHVlIiwiaW52YXJpYW50IiwiY29uZGl0aW9uIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiaGFzaCIsImNyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0Iiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwiZmlsdGVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaFBhdGhDb2RlcnMiLCJoYXNoYmFuZyIsImVuY29kZVBhdGgiLCJkZWNvZGVQYXRoIiwibm9zbGFzaCIsInNsYXNoIiwic3RyaXBIYXNoIiwiZ2V0SGFzaFBhdGgiLCJyZXBsYWNlSGFzaFBhdGgiLCJjcmVhdGVIYXNoSGlzdG9yeSIsIl9wcm9wcyRoYXNoVHlwZSIsImhhc2hUeXBlIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiaWdub3JlUGF0aCIsImVuY29kZWRQYXRoIiwicHJldkxvY2F0aW9uIiwiYWxsUGF0aHMiLCJsYXN0SW5kZXhPZiIsImJhc2VUYWciLCJxdWVyeVNlbGVjdG9yIiwiZ2V0QXR0cmlidXRlIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsIm1heCIsImNyZWF0ZU1lbW9yeUhpc3RvcnkiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJpbml0aWFsRW50cmllcyIsIl9wcm9wcyRpbml0aWFsSW5kZXgiLCJpbml0aWFsSW5kZXgiLCJlbnRyaWVzIiwiZW50cnkiLCJuZXh0SW5kZXgiLCJuZXh0RW50cmllcyIsImNhbkdvIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwiaGFuZGxlcnMiLCJoYW5kbGVyIiwibmV3VmFsdWUiLCJjaGFuZ2VkQml0cyIsIlJlYWN0IiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsImd1ZCIsIl9Db21wb25lbnQiLCJfdGhpcyIsImVtaXR0ZXIiLCJfcHJvdG8iLCJuZXh0UHJvcHMiLCJvbGRWYWx1ZSIsIl9Db21wb25lbnQyIiwiX3RoaXMyIiwib25VcGRhdGUiLCJfcHJvdG8yIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJjcmVhdGVOYW1lZENvbnRleHQiLCJSb3V0ZXIiLCJjb21wdXRlUm9vdE1hdGNoIiwiaXNFeGFjdCIsIl9wZW5kaW5nTG9jYXRpb24iLCJSb3V0ZXJDb250ZXh0Iiwic3RhdGljQ29udGV4dCIsIkxpZmVjeWNsZSIsIm9uTW91bnQiLCJwcmV2UHJvcHMiLCJvblVubW91bnQiLCJjYWNoZSIsImNhY2hlQ291bnQiLCJnZW5lcmF0ZVBhdGgiLCJnZW5lcmF0b3IiLCJjb21waWxlUGF0aCIsIlJlZGlyZWN0IiwiY29tcHV0ZWRNYXRjaCIsIm1hdGNoUGF0aCIsIm1hdGNoZWQiLCJjYWNoZUtleSIsInBhdGhDYWNoZSIsInJlZ2V4cCIsInZhbHVlcyIsIlJvdXRlIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJTd2l0Y2giLCJCcm93c2VyUm91dGVyIiwiY3JlYXRlSGlzdG9yeSIsInJlc29sdmVUb0xvY2F0aW9uIiwibm9ybWFsaXplVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiTGlua0FuY2hvciIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJyZXN0IiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJmb3J3YXJkZWRSZWYiLCJMaW5rIiwiYXJpYUN1cnJlbnQiLCJhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVTdHlsZSIsImNsYXNzTmFtZVByb3AiLCJjbGFzc05hbWUiLCJpc0FjdGl2ZVByb3AiLCJsb2NhdGlvblByb3AiLCJzdHlsZVByb3AiLCJlc2NhcGVkUGF0aCIsImNsYXNzbmFtZXMiLCJqb2luQ2xhc3NuYW1lcyIsInN0eWxlcyIsInNob3ciLCJib3JkZXIiLCJwYWRkaW5nIiwiZWRpdCIsImJhY2tncm91bmRDb2xvciIsInJpZ2h0IiwidGV4dEFsaWduIiwibG9naW4iLCJtYXJnaW5MZWZ0IiwidGltZWxpbmUiLCJib3JkZXJCb3R0b20iLCJtYXJnaW4iLCJ0bF9pbWciLCJmbG9hdCIsInVzZXJpZCIsImNvbW1lbnQiLCJmcmllbmQiLCJTTlNMb2dpbiIsInVzZXJzIiwianVtcCIsImZyaWVuZHMiLCJsb2FkVXNlcnMiLCJsb2NhbFN0b3JhZ2UiLCJzbnNfaWQiLCJsb2ciLCJmcmllbmRpZCIsInNuc19hdXRoX3Rva2VuIiwiYWxlcnQiLCJ1bGlzdCIsImJ0biIsImV2ZSIsImFkZEZyaWVuZCIsInNyYyIsInRpbWVsaW5lcyIsImxvYWRUaW1lbGluZXMiLCJfaWQiLCJjbGVhciIsIm9uQ2hhbmdlIiwicG9zdCIsInBhc3N3ZCIsImNvbW1hbmQiLCJjaGFuZ2VkIiwiYXBpIiwiV2lraUVkaXQiLCJsb2FkZWQiLCJ3aWtpbmFtZSIsInNlbmQiLCJyb3dzIiwiY29scyIsImJvZHlDaGFuZ2VkIiwic2F2ZSIsIldpa2lTaG93IiwiY29udmVydFRleHQiLCJXaWtpUGFyc2VyIiwibGlzIiwiUmVhY3RET00iLCJTTlNVc2VycyIsIlNOU1RpbWVsaW5lIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0QlgsT0FBT0MsZUFBZVUsRUFBSSxVQUFXLENBQUVULFlBQVksRUFBTUssTUFB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bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMjgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIFJvb3QgcmVmZXJlbmNlIGZvciBpZnJhbWVzLlxuICovXG5cbmxldCByb290O1xuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIC8vIEJyb3dzZXIgd2luZG93XG4gIHJvb3QgPSB3aW5kb3c7XG59IGVsc2UgaWYgKHR5cGVvZiBzZWxmID09PSAndW5kZWZpbmVkJykge1xuICAvLyBPdGhlciBlbnZpcm9ubWVudHNcbiAgY29uc29sZS53YXJuKFxuICAgICdVc2luZyBicm93c2VyLW9ubHkgdmVyc2lvbiBvZiBzdXBlcmFnZW50IGluIG5vbi1icm93c2VyIGVudmlyb25tZW50J1xuICApO1xuICByb290ID0gdGhpcztcbn0gZWxzZSB7XG4gIC8vIFdlYiBXb3JrZXJcbiAgcm9vdCA9IHNlbGY7XG59XG5cbmNvbnN0IEVtaXR0ZXIgPSByZXF1aXJlKCdjb21wb25lbnQtZW1pdHRlcicpO1xuY29uc3Qgc2FmZVN0cmluZ2lmeSA9IHJlcXVpcmUoJ2Zhc3Qtc2FmZS1zdHJpbmdpZnknKTtcbmNvbnN0IFJlcXVlc3RCYXNlID0gcmVxdWlyZSgnLi9yZXF1ZXN0LWJhc2UnKTtcbmNvbnN0IGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pcy1vYmplY3QnKTtcbmNvbnN0IFJlc3BvbnNlQmFzZSA9IHJlcXVpcmUoJy4vcmVzcG9uc2UtYmFzZScpO1xuY29uc3QgQWdlbnQgPSByZXF1aXJlKCcuL2FnZW50LWJhc2UnKTtcblxuLyoqXG4gKiBOb29wLlxuICovXG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vKipcbiAqIEV4cG9zZSBgcmVxdWVzdGAuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtZXRob2QsIHVybCkge1xuICAvLyBjYWxsYmFja1xuICBpZiAodHlwZW9mIHVybCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBuZXcgZXhwb3J0cy5SZXF1ZXN0KCdHRVQnLCBtZXRob2QpLmVuZCh1cmwpO1xuICB9XG5cbiAgLy8gdXJsIGZpcnN0XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIG5ldyBleHBvcnRzLlJlcXVlc3QoJ0dFVCcsIG1ldGhvZCk7XG4gIH1cblxuICByZXR1cm4gbmV3IGV4cG9ydHMuUmVxdWVzdChtZXRob2QsIHVybCk7XG59O1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHM7XG5cbmNvbnN0IHJlcXVlc3QgPSBleHBvcnRzO1xuXG5leHBvcnRzLlJlcXVlc3QgPSBSZXF1ZXN0O1xuXG4vKipcbiAqIERldGVybWluZSBYSFIuXG4gKi9cblxucmVxdWVzdC5nZXRYSFIgPSAoKSA9PiB7XG4gIGlmIChcbiAgICByb290LlhNTEh0dHBSZXF1ZXN0ICYmXG4gICAgKCFyb290LmxvY2F0aW9uIHx8XG4gICAgICByb290LmxvY2F0aW9uLnByb3RvY29sICE9PSAnZmlsZTonIHx8XG4gICAgICAhcm9vdC5BY3RpdmVYT2JqZWN0KVxuICApIHtcbiAgICByZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiBuZXcgQWN0aXZlWE9iamVjdCgnTWljcm9zb2Z0LlhNTEhUVFAnKTtcbiAgfSBjYXRjaCB7fVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBBY3RpdmVYT2JqZWN0KCdNc3htbDIuWE1MSFRUUC42LjAnKTtcbiAgfSBjYXRjaCB7fVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBBY3RpdmVYT2JqZWN0KCdNc3htbDIuWE1MSFRUUC4zLjAnKTtcbiAgfSBjYXRjaCB7fVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBBY3RpdmVYT2JqZWN0KCdNc3htbDIuWE1MSFRUUCcpO1xuICB9IGNhdGNoIHt9XG5cbiAgdGhyb3cgbmV3IEVycm9yKCdCcm93c2VyLW9ubHkgdmVyc2lvbiBvZiBzdXBlcmFnZW50IGNvdWxkIG5vdCBmaW5kIFhIUicpO1xufTtcblxuLyoqXG4gKiBSZW1vdmVzIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UsIGFkZGVkIHRvIHN1cHBvcnQgSUUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmNvbnN0IHRyaW0gPSAnJy50cmltID8gcyA9PiBzLnRyaW0oKSA6IHMgPT4gcy5yZXBsYWNlKC8oXlxccyp8XFxzKiQpL2csICcnKTtcblxuLyoqXG4gKiBTZXJpYWxpemUgdGhlIGdpdmVuIGBvYmpgLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZShvYmopIHtcbiAgaWYgKCFpc09iamVjdChvYmopKSByZXR1cm4gb2JqO1xuICBjb25zdCBwYWlycyA9IFtdO1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSlcbiAgICAgIHB1c2hFbmNvZGVkS2V5VmFsdWVQYWlyKHBhaXJzLCBrZXksIG9ialtrZXldKTtcbiAgfVxuXG4gIHJldHVybiBwYWlycy5qb2luKCcmJyk7XG59XG5cbi8qKlxuICogSGVscHMgJ3NlcmlhbGl6ZScgd2l0aCBzZXJpYWxpemluZyBhcnJheXMuXG4gKiBNdXRhdGVzIHRoZSBwYWlycyBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBwYWlyc1xuICogQHBhcmFtIHtTdHJpbmd9IGtleVxuICogQHBhcmFtIHtNaXhlZH0gdmFsXG4gKi9cblxuZnVuY3Rpb24gcHVzaEVuY29kZWRLZXlWYWx1ZVBhaXIocGFpcnMsIGtleSwgdmFsKSB7XG4gIGlmICh2YWwgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICBpZiAodmFsID09PSBudWxsKSB7XG4gICAgcGFpcnMucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgIHZhbC5mb3JFYWNoKHYgPT4ge1xuICAgICAgcHVzaEVuY29kZWRLZXlWYWx1ZVBhaXIocGFpcnMsIGtleSwgdik7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoaXNPYmplY3QodmFsKSkge1xuICAgIGZvciAoY29uc3Qgc3Via2V5IGluIHZhbCkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh2YWwsIHN1YmtleSkpXG4gICAgICAgIHB1c2hFbmNvZGVkS2V5VmFsdWVQYWlyKHBhaXJzLCBgJHtrZXl9WyR7c3Via2V5fV1gLCB2YWxbc3Via2V5XSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHBhaXJzLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsKSk7XG4gIH1cbn1cblxuLyoqXG4gKiBFeHBvc2Ugc2VyaWFsaXphdGlvbiBtZXRob2QuXG4gKi9cblxucmVxdWVzdC5zZXJpYWxpemVPYmplY3QgPSBzZXJpYWxpemU7XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIHgtd3d3LWZvcm0tdXJsZW5jb2RlZCBgc3RyYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZVN0cmluZyhzdHIpIHtcbiAgY29uc3Qgb2JqID0ge307XG4gIGNvbnN0IHBhaXJzID0gc3RyLnNwbGl0KCcmJyk7XG4gIGxldCBwYWlyO1xuICBsZXQgcG9zO1xuXG4gIGZvciAobGV0IGkgPSAwLCBsZW4gPSBwYWlycy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHBhaXIgPSBwYWlyc1tpXTtcbiAgICBwb3MgPSBwYWlyLmluZGV4T2YoJz0nKTtcbiAgICBpZiAocG9zID09PSAtMSkge1xuICAgICAgb2JqW2RlY29kZVVSSUNvbXBvbmVudChwYWlyKV0gPSAnJztcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqW2RlY29kZVVSSUNvbXBvbmVudChwYWlyLnNsaWNlKDAsIHBvcykpXSA9IGRlY29kZVVSSUNvbXBvbmVudChcbiAgICAgICAgcGFpci5zbGljZShwb3MgKyAxKVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG4vKipcbiAqIEV4cG9zZSBwYXJzZXIuXG4gKi9cblxucmVxdWVzdC5wYXJzZVN0cmluZyA9IHBhcnNlU3RyaW5nO1xuXG4vKipcbiAqIERlZmF1bHQgTUlNRSB0eXBlIG1hcC5cbiAqXG4gKiAgICAgc3VwZXJhZ2VudC50eXBlcy54bWwgPSAnYXBwbGljYXRpb24veG1sJztcbiAqXG4gKi9cblxucmVxdWVzdC50eXBlcyA9IHtcbiAgaHRtbDogJ3RleHQvaHRtbCcsXG4gIGpzb246ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgeG1sOiAndGV4dC94bWwnLFxuICB1cmxlbmNvZGVkOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcbiAgZm9ybTogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsXG4gICdmb3JtLWRhdGEnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuLyoqXG4gKiBEZWZhdWx0IHNlcmlhbGl6YXRpb24gbWFwLlxuICpcbiAqICAgICBzdXBlcmFnZW50LnNlcmlhbGl6ZVsnYXBwbGljYXRpb24veG1sJ10gPSBmdW5jdGlvbihvYmope1xuICogICAgICAgcmV0dXJuICdnZW5lcmF0ZWQgeG1sIGhlcmUnO1xuICogICAgIH07XG4gKlxuICovXG5cbnJlcXVlc3Quc2VyaWFsaXplID0ge1xuICAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJzogc2VyaWFsaXplLFxuICAnYXBwbGljYXRpb24vanNvbic6IHNhZmVTdHJpbmdpZnlcbn07XG5cbi8qKlxuICogRGVmYXVsdCBwYXJzZXJzLlxuICpcbiAqICAgICBzdXBlcmFnZW50LnBhcnNlWydhcHBsaWNhdGlvbi94bWwnXSA9IGZ1bmN0aW9uKHN0cil7XG4gKiAgICAgICByZXR1cm4geyBvYmplY3QgcGFyc2VkIGZyb20gc3RyIH07XG4gKiAgICAgfTtcbiAqXG4gKi9cblxucmVxdWVzdC5wYXJzZSA9IHtcbiAgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCc6IHBhcnNlU3RyaW5nLFxuICAnYXBwbGljYXRpb24vanNvbic6IEpTT04ucGFyc2Vcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGhlYWRlciBgc3RyYCBpbnRvXG4gKiBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgbWFwcGVkIGZpZWxkcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZUhlYWRlcihzdHIpIHtcbiAgY29uc3QgbGluZXMgPSBzdHIuc3BsaXQoL1xccj9cXG4vKTtcbiAgY29uc3QgZmllbGRzID0ge307XG4gIGxldCBpbmRleDtcbiAgbGV0IGxpbmU7XG4gIGxldCBmaWVsZDtcbiAgbGV0IHZhbDtcblxuICBmb3IgKGxldCBpID0gMCwgbGVuID0gbGluZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICBsaW5lID0gbGluZXNbaV07XG4gICAgaW5kZXggPSBsaW5lLmluZGV4T2YoJzonKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAvLyBjb3VsZCBiZSBlbXB0eSBsaW5lLCBqdXN0IHNraXAgaXRcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGZpZWxkID0gbGluZS5zbGljZSgwLCBpbmRleCkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB0cmltKGxpbmUuc2xpY2UoaW5kZXggKyAxKSk7XG4gICAgZmllbGRzW2ZpZWxkXSA9IHZhbDtcbiAgfVxuXG4gIHJldHVybiBmaWVsZHM7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYG1pbWVgIGlzIGpzb24gb3IgaGFzICtqc29uIHN0cnVjdHVyZWQgc3ludGF4IHN1ZmZpeC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbWltZVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGlzSlNPTihtaW1lKSB7XG4gIC8vIHNob3VsZCBtYXRjaCAvanNvbiBvciAranNvblxuICAvLyBidXQgbm90IC9qc29uLXNlcVxuICByZXR1cm4gL1svK11qc29uKCR8W14tXFx3XSkvLnRlc3QobWltZSk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgUmVzcG9uc2VgIHdpdGggdGhlIGdpdmVuIGB4aHJgLlxuICpcbiAqICAtIHNldCBmbGFncyAoLm9rLCAuZXJyb3IsIGV0YylcbiAqICAtIHBhcnNlIGhlYWRlclxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICBBbGlhc2luZyBgc3VwZXJhZ2VudGAgYXMgYHJlcXVlc3RgIGlzIG5pY2U6XG4gKlxuICogICAgICByZXF1ZXN0ID0gc3VwZXJhZ2VudDtcbiAqXG4gKiAgV2UgY2FuIHVzZSB0aGUgcHJvbWlzZS1saWtlIEFQSSwgb3IgcGFzcyBjYWxsYmFja3M6XG4gKlxuICogICAgICByZXF1ZXN0LmdldCgnLycpLmVuZChmdW5jdGlvbihyZXMpe30pO1xuICogICAgICByZXF1ZXN0LmdldCgnLycsIGZ1bmN0aW9uKHJlcyl7fSk7XG4gKlxuICogIFNlbmRpbmcgZGF0YSBjYW4gYmUgY2hhaW5lZDpcbiAqXG4gKiAgICAgIHJlcXVlc3RcbiAqICAgICAgICAucG9zdCgnL3VzZXInKVxuICogICAgICAgIC5zZW5kKHsgbmFtZTogJ3RqJyB9KVxuICogICAgICAgIC5lbmQoZnVuY3Rpb24ocmVzKXt9KTtcbiAqXG4gKiAgT3IgcGFzc2VkIHRvIGAuc2VuZCgpYDpcbiAqXG4gKiAgICAgIHJlcXVlc3RcbiAqICAgICAgICAucG9zdCgnL3VzZXInKVxuICogICAgICAgIC5zZW5kKHsgbmFtZTogJ3RqJyB9LCBmdW5jdGlvbihyZXMpe30pO1xuICpcbiAqICBPciBwYXNzZWQgdG8gYC5wb3N0KClgOlxuICpcbiAqICAgICAgcmVxdWVzdFxuICogICAgICAgIC5wb3N0KCcvdXNlcicsIHsgbmFtZTogJ3RqJyB9KVxuICogICAgICAgIC5lbmQoZnVuY3Rpb24ocmVzKXt9KTtcbiAqXG4gKiBPciBmdXJ0aGVyIHJlZHVjZWQgdG8gYSBzaW5nbGUgY2FsbCBmb3Igc2ltcGxlIGNhc2VzOlxuICpcbiAqICAgICAgcmVxdWVzdFxuICogICAgICAgIC5wb3N0KCcvdXNlcicsIHsgbmFtZTogJ3RqJyB9LCBmdW5jdGlvbihyZXMpe30pO1xuICpcbiAqIEBwYXJhbSB7WE1MSFRUUFJlcXVlc3R9IHhoclxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIFJlc3BvbnNlKHJlcSkge1xuICB0aGlzLnJlcSA9IHJlcTtcbiAgdGhpcy54aHIgPSB0aGlzLnJlcS54aHI7XG4gIC8vIHJlc3BvbnNlVGV4dCBpcyBhY2Nlc3NpYmxlIG9ubHkgaWYgcmVzcG9uc2VUeXBlIGlzICcnIG9yICd0ZXh0JyBhbmQgb24gb2xkZXIgYnJvd3NlcnNcbiAgdGhpcy50ZXh0ID1cbiAgICAodGhpcy5yZXEubWV0aG9kICE9PSAnSEVBRCcgJiZcbiAgICAgICh0aGlzLnhoci5yZXNwb25zZVR5cGUgPT09ICcnIHx8IHRoaXMueGhyLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnKSkgfHxcbiAgICB0eXBlb2YgdGhpcy54aHIucmVzcG9uc2VUeXBlID09PSAndW5kZWZpbmVkJ1xuICAgICAgPyB0aGlzLnhoci5yZXNwb25zZVRleHRcbiAgICAgIDogbnVsbDtcbiAgdGhpcy5zdGF0dXNUZXh0ID0gdGhpcy5yZXEueGhyLnN0YXR1c1RleHQ7XG4gIGxldCB7IHN0YXR1cyB9ID0gdGhpcy54aHI7XG4gIC8vIGhhbmRsZSBJRTkgYnVnOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEwMDQ2OTcyL21zaWUtcmV0dXJucy1zdGF0dXMtY29kZS1vZi0xMjIzLWZvci1hamF4LXJlcXVlc3RcbiAgaWYgKHN0YXR1cyA9PT0gMTIyMykge1xuICAgIHN0YXR1cyA9IDIwNDtcbiAgfVxuXG4gIHRoaXMuX3NldFN0YXR1c1Byb3BlcnRpZXMoc3RhdHVzKTtcbiAgdGhpcy5oZWFkZXJzID0gcGFyc2VIZWFkZXIodGhpcy54aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpO1xuICB0aGlzLmhlYWRlciA9IHRoaXMuaGVhZGVycztcbiAgLy8gZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIHNvbWV0aW1lcyBmYWxzZWx5IHJldHVybnMgXCJcIiBmb3IgQ09SUyByZXF1ZXN0cywgYnV0XG4gIC8vIGdldFJlc3BvbnNlSGVhZGVyIHN0aWxsIHdvcmtzLiBzbyB3ZSBnZXQgY29udGVudC10eXBlIGV2ZW4gaWYgZ2V0dGluZ1xuICAvLyBvdGhlciBoZWFkZXJzIGZhaWxzLlxuICB0aGlzLmhlYWRlclsnY29udGVudC10eXBlJ10gPSB0aGlzLnhoci5nZXRSZXNwb25zZUhlYWRlcignY29udGVudC10eXBlJyk7XG4gIHRoaXMuX3NldEhlYWRlclByb3BlcnRpZXModGhpcy5oZWFkZXIpO1xuXG4gIGlmICh0aGlzLnRleHQgPT09IG51bGwgJiYgcmVxLl9yZXNwb25zZVR5cGUpIHtcbiAgICB0aGlzLmJvZHkgPSB0aGlzLnhoci5yZXNwb25zZTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmJvZHkgPVxuICAgICAgdGhpcy5yZXEubWV0aG9kID09PSAnSEVBRCdcbiAgICAgICAgPyBudWxsXG4gICAgICAgIDogdGhpcy5fcGFyc2VCb2R5KHRoaXMudGV4dCA/IHRoaXMudGV4dCA6IHRoaXMueGhyLnJlc3BvbnNlKTtcbiAgfVxufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbmV3LWNhcFxuUmVzcG9uc2VCYXNlKFJlc3BvbnNlLnByb3RvdHlwZSk7XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGJvZHkgYHN0cmAuXG4gKlxuICogVXNlZCBmb3IgYXV0by1wYXJzaW5nIG9mIGJvZGllcy4gUGFyc2Vyc1xuICogYXJlIGRlZmluZWQgb24gdGhlIGBzdXBlcmFnZW50LnBhcnNlYCBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TWl4ZWR9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXNwb25zZS5wcm90b3R5cGUuX3BhcnNlQm9keSA9IGZ1bmN0aW9uKHN0cikge1xuICBsZXQgcGFyc2UgPSByZXF1ZXN0LnBhcnNlW3RoaXMudHlwZV07XG4gIGlmICh0aGlzLnJlcS5fcGFyc2VyKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxLl9wYXJzZXIodGhpcywgc3RyKTtcbiAgfVxuXG4gIGlmICghcGFyc2UgJiYgaXNKU09OKHRoaXMudHlwZSkpIHtcbiAgICBwYXJzZSA9IHJlcXVlc3QucGFyc2VbJ2FwcGxpY2F0aW9uL2pzb24nXTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZSAmJiBzdHIgJiYgKHN0ci5sZW5ndGggPiAwIHx8IHN0ciBpbnN0YW5jZW9mIE9iamVjdClcbiAgICA/IHBhcnNlKHN0cilcbiAgICA6IG51bGw7XG59O1xuXG4vKipcbiAqIFJldHVybiBhbiBgRXJyb3JgIHJlcHJlc2VudGF0aXZlIG9mIHRoaXMgcmVzcG9uc2UuXG4gKlxuICogQHJldHVybiB7RXJyb3J9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlc3BvbnNlLnByb3RvdHlwZS50b0Vycm9yID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHsgcmVxIH0gPSB0aGlzO1xuICBjb25zdCB7IG1ldGhvZCB9ID0gcmVxO1xuICBjb25zdCB7IHVybCB9ID0gcmVxO1xuXG4gIGNvbnN0IG1zZyA9IGBjYW5ub3QgJHttZXRob2R9ICR7dXJsfSAoJHt0aGlzLnN0YXR1c30pYDtcbiAgY29uc3QgZXJyID0gbmV3IEVycm9yKG1zZyk7XG4gIGVyci5zdGF0dXMgPSB0aGlzLnN0YXR1cztcbiAgZXJyLm1ldGhvZCA9IG1ldGhvZDtcbiAgZXJyLnVybCA9IHVybDtcblxuICByZXR1cm4gZXJyO1xufTtcblxuLyoqXG4gKiBFeHBvc2UgYFJlc3BvbnNlYC5cbiAqL1xuXG5yZXF1ZXN0LlJlc3BvbnNlID0gUmVzcG9uc2U7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgUmVxdWVzdGAgd2l0aCB0aGUgZ2l2ZW4gYG1ldGhvZGAgYW5kIGB1cmxgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXRob2RcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gUmVxdWVzdChtZXRob2QsIHVybCkge1xuICBjb25zdCBzZWxmID0gdGhpcztcbiAgdGhpcy5fcXVlcnkgPSB0aGlzLl9xdWVyeSB8fCBbXTtcbiAgdGhpcy5tZXRob2QgPSBtZXRob2Q7XG4gIHRoaXMudXJsID0gdXJsO1xuICB0aGlzLmhlYWRlciA9IHt9OyAvLyBwcmVzZXJ2ZXMgaGVhZGVyIG5hbWUgY2FzZVxuICB0aGlzLl9oZWFkZXIgPSB7fTsgLy8gY29lcmNlcyBoZWFkZXIgbmFtZXMgdG8gbG93ZXJjYXNlXG4gIHRoaXMub24oJ2VuZCcsICgpID0+IHtcbiAgICBsZXQgZXJyID0gbnVsbDtcbiAgICBsZXQgcmVzID0gbnVsbDtcblxuICAgIHRyeSB7XG4gICAgICByZXMgPSBuZXcgUmVzcG9uc2Uoc2VsZik7XG4gICAgfSBjYXRjaCAoZXJyXykge1xuICAgICAgZXJyID0gbmV3IEVycm9yKCdQYXJzZXIgaXMgdW5hYmxlIHRvIHBhcnNlIHRoZSByZXNwb25zZScpO1xuICAgICAgZXJyLnBhcnNlID0gdHJ1ZTtcbiAgICAgIGVyci5vcmlnaW5hbCA9IGVycl87XG4gICAgICAvLyBpc3N1ZSAjNjc1OiByZXR1cm4gdGhlIHJhdyByZXNwb25zZSBpZiB0aGUgcmVzcG9uc2UgcGFyc2luZyBmYWlsc1xuICAgICAgaWYgKHNlbGYueGhyKSB7XG4gICAgICAgIC8vIGllOSBkb2Vzbid0IGhhdmUgJ3Jlc3BvbnNlJyBwcm9wZXJ0eVxuICAgICAgICBlcnIucmF3UmVzcG9uc2UgPVxuICAgICAgICAgIHR5cGVvZiBzZWxmLnhoci5yZXNwb25zZVR5cGUgPT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICA/IHNlbGYueGhyLnJlc3BvbnNlVGV4dFxuICAgICAgICAgICAgOiBzZWxmLnhoci5yZXNwb25zZTtcbiAgICAgICAgLy8gaXNzdWUgIzg3NjogcmV0dXJuIHRoZSBodHRwIHN0YXR1cyBjb2RlIGlmIHRoZSByZXNwb25zZSBwYXJzaW5nIGZhaWxzXG4gICAgICAgIGVyci5zdGF0dXMgPSBzZWxmLnhoci5zdGF0dXMgPyBzZWxmLnhoci5zdGF0dXMgOiBudWxsO1xuICAgICAgICBlcnIuc3RhdHVzQ29kZSA9IGVyci5zdGF0dXM7IC8vIGJhY2t3YXJkcy1jb21wYXQgb25seVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXJyLnJhd1Jlc3BvbnNlID0gbnVsbDtcbiAgICAgICAgZXJyLnN0YXR1cyA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzZWxmLmNhbGxiYWNrKGVycik7XG4gICAgfVxuXG4gICAgc2VsZi5lbWl0KCdyZXNwb25zZScsIHJlcyk7XG5cbiAgICBsZXQgbmV3X2VycjtcbiAgICB0cnkge1xuICAgICAgaWYgKCFzZWxmLl9pc1Jlc3BvbnNlT0socmVzKSkge1xuICAgICAgICBuZXdfZXJyID0gbmV3IEVycm9yKFxuICAgICAgICAgIHJlcy5zdGF0dXNUZXh0IHx8IHJlcy50ZXh0IHx8ICdVbnN1Y2Nlc3NmdWwgSFRUUCByZXNwb25zZSdcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJfKSB7XG4gICAgICBuZXdfZXJyID0gZXJyXzsgLy8gb2soKSBjYWxsYmFjayBjYW4gdGhyb3dcbiAgICB9XG5cbiAgICAvLyAjMTAwMCBkb24ndCBjYXRjaCBlcnJvcnMgZnJvbSB0aGUgY2FsbGJhY2sgdG8gYXZvaWQgZG91YmxlIGNhbGxpbmcgaXRcbiAgICBpZiAobmV3X2Vycikge1xuICAgICAgbmV3X2Vyci5vcmlnaW5hbCA9IGVycjtcbiAgICAgIG5ld19lcnIucmVzcG9uc2UgPSByZXM7XG4gICAgICBuZXdfZXJyLnN0YXR1cyA9IHJlcy5zdGF0dXM7XG4gICAgICBzZWxmLmNhbGxiYWNrKG5ld19lcnIsIHJlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlbGYuY2FsbGJhY2sobnVsbCwgcmVzKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIE1peGluIGBFbWl0dGVyYCBhbmQgYFJlcXVlc3RCYXNlYC5cbiAqL1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbmV3LWNhcFxuRW1pdHRlcihSZXF1ZXN0LnByb3RvdHlwZSk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbmV3LWNhcFxuUmVxdWVzdEJhc2UoUmVxdWVzdC5wcm90b3R5cGUpO1xuXG4vKipcbiAqIFNldCBDb250ZW50LVR5cGUgdG8gYHR5cGVgLCBtYXBwaW5nIHZhbHVlcyBmcm9tIGByZXF1ZXN0LnR5cGVzYC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgIHN1cGVyYWdlbnQudHlwZXMueG1sID0gJ2FwcGxpY2F0aW9uL3htbCc7XG4gKlxuICogICAgICByZXF1ZXN0LnBvc3QoJy8nKVxuICogICAgICAgIC50eXBlKCd4bWwnKVxuICogICAgICAgIC5zZW5kKHhtbHN0cmluZylcbiAqICAgICAgICAuZW5kKGNhbGxiYWNrKTtcbiAqXG4gKiAgICAgIHJlcXVlc3QucG9zdCgnLycpXG4gKiAgICAgICAgLnR5cGUoJ2FwcGxpY2F0aW9uL3htbCcpXG4gKiAgICAgICAgLnNlbmQoeG1sc3RyaW5nKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUudHlwZSA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdGhpcy5zZXQoJ0NvbnRlbnQtVHlwZScsIHJlcXVlc3QudHlwZXNbdHlwZV0gfHwgdHlwZSk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgQWNjZXB0IHRvIGB0eXBlYCwgbWFwcGluZyB2YWx1ZXMgZnJvbSBgcmVxdWVzdC50eXBlc2AuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgICBzdXBlcmFnZW50LnR5cGVzLmpzb24gPSAnYXBwbGljYXRpb24vanNvbic7XG4gKlxuICogICAgICByZXF1ZXN0LmdldCgnL2FnZW50JylcbiAqICAgICAgICAuYWNjZXB0KCdqc29uJylcbiAqICAgICAgICAuZW5kKGNhbGxiYWNrKTtcbiAqXG4gKiAgICAgIHJlcXVlc3QuZ2V0KCcvYWdlbnQnKVxuICogICAgICAgIC5hY2NlcHQoJ2FwcGxpY2F0aW9uL2pzb24nKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBhY2NlcHRcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5hY2NlcHQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHRoaXMuc2V0KCdBY2NlcHQnLCByZXF1ZXN0LnR5cGVzW3R5cGVdIHx8IHR5cGUpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0IEF1dGhvcml6YXRpb24gZmllbGQgdmFsdWUgd2l0aCBgdXNlcmAgYW5kIGBwYXNzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXNlclxuICogQHBhcmFtIHtTdHJpbmd9IFtwYXNzXSBvcHRpb25hbCBpbiBjYXNlIG9mIHVzaW5nICdiZWFyZXInIGFzIHR5cGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIHdpdGggJ3R5cGUnIHByb3BlcnR5ICdhdXRvJywgJ2Jhc2ljJyBvciAnYmVhcmVyJyAoZGVmYXVsdCAnYmFzaWMnKVxuICogQHJldHVybiB7UmVxdWVzdH0gZm9yIGNoYWluaW5nXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3QucHJvdG90eXBlLmF1dGggPSBmdW5jdGlvbih1c2VyLCBwYXNzLCBvcHRpb25zKSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSBwYXNzID0gJyc7XG4gIGlmICh0eXBlb2YgcGFzcyA9PT0gJ29iamVjdCcgJiYgcGFzcyAhPT0gbnVsbCkge1xuICAgIC8vIHBhc3MgaXMgb3B0aW9uYWwgYW5kIGNhbiBiZSByZXBsYWNlZCB3aXRoIG9wdGlvbnNcbiAgICBvcHRpb25zID0gcGFzcztcbiAgICBwYXNzID0gJyc7XG4gIH1cblxuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgdHlwZTogdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicgPyAnYmFzaWMnIDogJ2F1dG8nXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IGVuY29kZXIgPSBzdHJpbmcgPT4ge1xuICAgIGlmICh0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGJ0b2Eoc3RyaW5nKTtcbiAgICB9XG5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCB1c2UgYmFzaWMgYXV0aCwgYnRvYSBpcyBub3QgYSBmdW5jdGlvbicpO1xuICB9O1xuXG4gIHJldHVybiB0aGlzLl9hdXRoKHVzZXIsIHBhc3MsIG9wdGlvbnMsIGVuY29kZXIpO1xufTtcblxuLyoqXG4gKiBBZGQgcXVlcnktc3RyaW5nIGB2YWxgLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgcmVxdWVzdC5nZXQoJy9zaG9lcycpXG4gKiAgICAgLnF1ZXJ5KCdzaXplPTEwJylcbiAqICAgICAucXVlcnkoeyBjb2xvcjogJ2JsdWUnIH0pXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSB2YWxcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5xdWVyeSA9IGZ1bmN0aW9uKHZhbCkge1xuICBpZiAodHlwZW9mIHZhbCAhPT0gJ3N0cmluZycpIHZhbCA9IHNlcmlhbGl6ZSh2YWwpO1xuICBpZiAodmFsKSB0aGlzLl9xdWVyeS5wdXNoKHZhbCk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBRdWV1ZSB0aGUgZ2l2ZW4gYGZpbGVgIGFzIGFuIGF0dGFjaG1lbnQgdG8gdGhlIHNwZWNpZmllZCBgZmllbGRgLFxuICogd2l0aCBvcHRpb25hbCBgb3B0aW9uc2AgKG9yIGZpbGVuYW1lKS5cbiAqXG4gKiBgYGAganNcbiAqIHJlcXVlc3QucG9zdCgnL3VwbG9hZCcpXG4gKiAgIC5hdHRhY2goJ2NvbnRlbnQnLCBuZXcgQmxvYihbJzxhIGlkPVwiYVwiPjxiIGlkPVwiYlwiPmhleSE8L2I+PC9hPiddLCB7IHR5cGU6IFwidGV4dC9odG1sXCJ9KSlcbiAqICAgLmVuZChjYWxsYmFjayk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZmllbGRcbiAqIEBwYXJhbSB7QmxvYnxGaWxlfSBmaWxlXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5hdHRhY2ggPSBmdW5jdGlvbihmaWVsZCwgZmlsZSwgb3B0aW9ucykge1xuICBpZiAoZmlsZSkge1xuICAgIGlmICh0aGlzLl9kYXRhKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJzdXBlcmFnZW50IGNhbid0IG1peCAuc2VuZCgpIGFuZCAuYXR0YWNoKClcIik7XG4gICAgfVxuXG4gICAgdGhpcy5fZ2V0Rm9ybURhdGEoKS5hcHBlbmQoZmllbGQsIGZpbGUsIG9wdGlvbnMgfHwgZmlsZS5uYW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuUmVxdWVzdC5wcm90b3R5cGUuX2dldEZvcm1EYXRhID0gZnVuY3Rpb24oKSB7XG4gIGlmICghdGhpcy5fZm9ybURhdGEpIHtcbiAgICB0aGlzLl9mb3JtRGF0YSA9IG5ldyByb290LkZvcm1EYXRhKCk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5fZm9ybURhdGE7XG59O1xuXG4vKipcbiAqIEludm9rZSB0aGUgY2FsbGJhY2sgd2l0aCBgZXJyYCBhbmQgYHJlc2BcbiAqIGFuZCBoYW5kbGUgYXJpdHkgY2hlY2suXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyXG4gKiBAcGFyYW0ge1Jlc3BvbnNlfSByZXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3QucHJvdG90eXBlLmNhbGxiYWNrID0gZnVuY3Rpb24oZXJyLCByZXMpIHtcbiAgaWYgKHRoaXMuX3Nob3VsZFJldHJ5KGVyciwgcmVzKSkge1xuICAgIHJldHVybiB0aGlzLl9yZXRyeSgpO1xuICB9XG5cbiAgY29uc3QgZm4gPSB0aGlzLl9jYWxsYmFjaztcbiAgdGhpcy5jbGVhclRpbWVvdXQoKTtcblxuICBpZiAoZXJyKSB7XG4gICAgaWYgKHRoaXMuX21heFJldHJpZXMpIGVyci5yZXRyaWVzID0gdGhpcy5fcmV0cmllcyAtIDE7XG4gICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XG4gIH1cblxuICBmbihlcnIsIHJlcyk7XG59O1xuXG4vKipcbiAqIEludm9rZSBjYWxsYmFjayB3aXRoIHgtZG9tYWluIGVycm9yLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3QucHJvdG90eXBlLmNyb3NzRG9tYWluRXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgZXJyID0gbmV3IEVycm9yKFxuICAgICdSZXF1ZXN0IGhhcyBiZWVuIHRlcm1pbmF0ZWRcXG5Qb3NzaWJsZSBjYXVzZXM6IHRoZSBuZXR3b3JrIGlzIG9mZmxpbmUsIE9yaWdpbiBpcyBub3QgYWxsb3dlZCBieSBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4sIHRoZSBwYWdlIGlzIGJlaW5nIHVubG9hZGVkLCBldGMuJ1xuICApO1xuICBlcnIuY3Jvc3NEb21haW4gPSB0cnVlO1xuXG4gIGVyci5zdGF0dXMgPSB0aGlzLnN0YXR1cztcbiAgZXJyLm1ldGhvZCA9IHRoaXMubWV0aG9kO1xuICBlcnIudXJsID0gdGhpcy51cmw7XG5cbiAgdGhpcy5jYWxsYmFjayhlcnIpO1xufTtcblxuLy8gVGhpcyBvbmx5IHdhcm5zLCBiZWNhdXNlIHRoZSByZXF1ZXN0IGlzIHN0aWxsIGxpa2VseSB0byB3b3JrXG5SZXF1ZXN0LnByb3RvdHlwZS5hZ2VudCA9IGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLndhcm4oJ1RoaXMgaXMgbm90IHN1cHBvcnRlZCBpbiBicm93c2VyIHZlcnNpb24gb2Ygc3VwZXJhZ2VudCcpO1xuICByZXR1cm4gdGhpcztcbn07XG5cblJlcXVlc3QucHJvdG90eXBlLmNhID0gUmVxdWVzdC5wcm90b3R5cGUuYWdlbnQ7XG5SZXF1ZXN0LnByb3RvdHlwZS5idWZmZXIgPSBSZXF1ZXN0LnByb3RvdHlwZS5jYTtcblxuLy8gVGhpcyB0aHJvd3MsIGJlY2F1c2UgaXQgY2FuJ3Qgc2VuZC9yZWNlaXZlIGRhdGEgYXMgZXhwZWN0ZWRcblJlcXVlc3QucHJvdG90eXBlLndyaXRlID0gKCkgPT4ge1xuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgJ1N0cmVhbWluZyBpcyBub3Qgc3VwcG9ydGVkIGluIGJyb3dzZXIgdmVyc2lvbiBvZiBzdXBlcmFnZW50J1xuICApO1xufTtcblxuUmVxdWVzdC5wcm90b3R5cGUucGlwZSA9IFJlcXVlc3QucHJvdG90eXBlLndyaXRlO1xuXG4vKipcbiAqIENoZWNrIGlmIGBvYmpgIGlzIGEgaG9zdCBvYmplY3QsXG4gKiB3ZSBkb24ndCB3YW50IHRvIHNlcmlhbGl6ZSB0aGVzZSA6KVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogaG9zdCBvYmplY3RcbiAqIEByZXR1cm4ge0Jvb2xlYW59IGlzIGEgaG9zdCBvYmplY3RcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5SZXF1ZXN0LnByb3RvdHlwZS5faXNIb3N0ID0gZnVuY3Rpb24ob2JqKSB7XG4gIC8vIE5hdGl2ZSBvYmplY3RzIHN0cmluZ2lmeSB0byBbb2JqZWN0IEZpbGVdLCBbb2JqZWN0IEJsb2JdLCBbb2JqZWN0IEZvcm1EYXRhXSwgZXRjLlxuICByZXR1cm4gKFxuICAgIG9iaiAmJlxuICAgIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmXG4gICAgIUFycmF5LmlzQXJyYXkob2JqKSAmJlxuICAgIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopICE9PSAnW29iamVjdCBPYmplY3RdJ1xuICApO1xufTtcblxuLyoqXG4gKiBJbml0aWF0ZSByZXF1ZXN0LCBpbnZva2luZyBjYWxsYmFjayBgZm4ocmVzKWBcbiAqIHdpdGggYW4gaW5zdGFuY2VvZiBgUmVzcG9uc2VgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oZm4pIHtcbiAgaWYgKHRoaXMuX2VuZENhbGxlZCkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXYXJuaW5nOiAuZW5kKCkgd2FzIGNhbGxlZCB0d2ljZS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkIGluIHN1cGVyYWdlbnQnXG4gICAgKTtcbiAgfVxuXG4gIHRoaXMuX2VuZENhbGxlZCA9IHRydWU7XG5cbiAgLy8gc3RvcmUgY2FsbGJhY2tcbiAgdGhpcy5fY2FsbGJhY2sgPSBmbiB8fCBub29wO1xuXG4gIC8vIHF1ZXJ5c3RyaW5nXG4gIHRoaXMuX2ZpbmFsaXplUXVlcnlTdHJpbmcoKTtcblxuICB0aGlzLl9lbmQoKTtcbn07XG5cblJlcXVlc3QucHJvdG90eXBlLl9zZXRVcGxvYWRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHNlbGYgPSB0aGlzO1xuXG4gIC8vIHVwbG9hZCB0aW1lb3V0IGl0J3Mgd29rcnMgb25seSBpZiBkZWFkbGluZSB0aW1lb3V0IGlzIG9mZlxuICBpZiAodGhpcy5fdXBsb2FkVGltZW91dCAmJiAhdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyKSB7XG4gICAgdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBzZWxmLl90aW1lb3V0RXJyb3IoXG4gICAgICAgICdVcGxvYWQgdGltZW91dCBvZiAnLFxuICAgICAgICBzZWxmLl91cGxvYWRUaW1lb3V0LFxuICAgICAgICAnRVRJTUVET1VUJ1xuICAgICAgKTtcbiAgICB9LCB0aGlzLl91cGxvYWRUaW1lb3V0KTtcbiAgfVxufTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcblJlcXVlc3QucHJvdG90eXBlLl9lbmQgPSBmdW5jdGlvbigpIHtcbiAgaWYgKHRoaXMuX2Fib3J0ZWQpXG4gICAgcmV0dXJuIHRoaXMuY2FsbGJhY2soXG4gICAgICBuZXcgRXJyb3IoJ1RoZSByZXF1ZXN0IGhhcyBiZWVuIGFib3J0ZWQgZXZlbiBiZWZvcmUgLmVuZCgpIHdhcyBjYWxsZWQnKVxuICAgICk7XG5cbiAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gIHRoaXMueGhyID0gcmVxdWVzdC5nZXRYSFIoKTtcbiAgY29uc3QgeyB4aHIgfSA9IHRoaXM7XG4gIGxldCBkYXRhID0gdGhpcy5fZm9ybURhdGEgfHwgdGhpcy5fZGF0YTtcblxuICB0aGlzLl9zZXRUaW1lb3V0cygpO1xuXG4gIC8vIHN0YXRlIGNoYW5nZVxuICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVhZHlTdGF0ZSB9ID0geGhyO1xuICAgIGlmIChyZWFkeVN0YXRlID49IDIgJiYgc2VsZi5fcmVzcG9uc2VUaW1lb3V0VGltZXIpIHtcbiAgICAgIGNsZWFyVGltZW91dChzZWxmLl9yZXNwb25zZVRpbWVvdXRUaW1lcik7XG4gICAgfVxuXG4gICAgaWYgKHJlYWR5U3RhdGUgIT09IDQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJbiBJRTksIHJlYWRzIHRvIGFueSBwcm9wZXJ0eSAoZS5nLiBzdGF0dXMpIG9mZiBvZiBhbiBhYm9ydGVkIFhIUiB3aWxsXG4gICAgLy8gcmVzdWx0IGluIHRoZSBlcnJvciBcIkNvdWxkIG5vdCBjb21wbGV0ZSB0aGUgb3BlcmF0aW9uIGR1ZSB0byBlcnJvciBjMDBjMDIzZlwiXG4gICAgbGV0IHN0YXR1cztcbiAgICB0cnkge1xuICAgICAgc3RhdHVzID0geGhyLnN0YXR1cztcbiAgICB9IGNhdGNoIHtcbiAgICAgIHN0YXR1cyA9IDA7XG4gICAgfVxuXG4gICAgaWYgKCFzdGF0dXMpIHtcbiAgICAgIGlmIChzZWxmLnRpbWVkb3V0IHx8IHNlbGYuX2Fib3J0ZWQpIHJldHVybjtcbiAgICAgIHJldHVybiBzZWxmLmNyb3NzRG9tYWluRXJyb3IoKTtcbiAgICB9XG5cbiAgICBzZWxmLmVtaXQoJ2VuZCcpO1xuICB9O1xuXG4gIC8vIHByb2dyZXNzXG4gIGNvbnN0IGhhbmRsZVByb2dyZXNzID0gKGRpcmVjdGlvbiwgZSkgPT4ge1xuICAgIGlmIChlLnRvdGFsID4gMCkge1xuICAgICAgZS5wZXJjZW50ID0gKGUubG9hZGVkIC8gZS50b3RhbCkgKiAxMDA7XG5cbiAgICAgIGlmIChlLnBlcmNlbnQgPT09IDEwMCkge1xuICAgICAgICBjbGVhclRpbWVvdXQoc2VsZi5fdXBsb2FkVGltZW91dFRpbWVyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBlLmRpcmVjdGlvbiA9IGRpcmVjdGlvbjtcbiAgICBzZWxmLmVtaXQoJ3Byb2dyZXNzJywgZSk7XG4gIH07XG5cbiAgaWYgKHRoaXMuaGFzTGlzdGVuZXJzKCdwcm9ncmVzcycpKSB7XG4gICAgdHJ5IHtcbiAgICAgIHhoci5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGhhbmRsZVByb2dyZXNzLmJpbmQobnVsbCwgJ2Rvd25sb2FkJykpO1xuICAgICAgaWYgKHhoci51cGxvYWQpIHtcbiAgICAgICAgeGhyLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICdwcm9ncmVzcycsXG4gICAgICAgICAgaGFuZGxlUHJvZ3Jlc3MuYmluZChudWxsLCAndXBsb2FkJylcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIHtcbiAgICAgIC8vIEFjY2Vzc2luZyB4aHIudXBsb2FkIGZhaWxzIGluIElFIGZyb20gYSB3ZWIgd29ya2VyLCBzbyBqdXN0IHByZXRlbmQgaXQgZG9lc24ndCBleGlzdC5cbiAgICAgIC8vIFJlcG9ydGVkIGhlcmU6XG4gICAgICAvLyBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzgzNzI0NS94bWxodHRwcmVxdWVzdC11cGxvYWQtdGhyb3dzLWludmFsaWQtYXJndW1lbnQtd2hlbi11c2VkLWZyb20td2ViLXdvcmtlci1jb250ZXh0XG4gICAgfVxuICB9XG5cbiAgaWYgKHhoci51cGxvYWQpIHtcbiAgICB0aGlzLl9zZXRVcGxvYWRUaW1lb3V0KCk7XG4gIH1cblxuICAvLyBpbml0aWF0ZSByZXF1ZXN0XG4gIHRyeSB7XG4gICAgaWYgKHRoaXMudXNlcm5hbWUgJiYgdGhpcy5wYXNzd29yZCkge1xuICAgICAgeGhyLm9wZW4odGhpcy5tZXRob2QsIHRoaXMudXJsLCB0cnVlLCB0aGlzLnVzZXJuYW1lLCB0aGlzLnBhc3N3b3JkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgeGhyLm9wZW4odGhpcy5tZXRob2QsIHRoaXMudXJsLCB0cnVlKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIHNlZSAjMTE0OVxuICAgIHJldHVybiB0aGlzLmNhbGxiYWNrKGVycik7XG4gIH1cblxuICAvLyBDT1JTXG4gIGlmICh0aGlzLl93aXRoQ3JlZGVudGlhbHMpIHhoci53aXRoQ3JlZGVudGlhbHMgPSB0cnVlO1xuXG4gIC8vIGJvZHlcbiAgaWYgKFxuICAgICF0aGlzLl9mb3JtRGF0YSAmJlxuICAgIHRoaXMubWV0aG9kICE9PSAnR0VUJyAmJlxuICAgIHRoaXMubWV0aG9kICE9PSAnSEVBRCcgJiZcbiAgICB0eXBlb2YgZGF0YSAhPT0gJ3N0cmluZycgJiZcbiAgICAhdGhpcy5faXNIb3N0KGRhdGEpXG4gICkge1xuICAgIC8vIHNlcmlhbGl6ZSBzdHVmZlxuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gdGhpcy5faGVhZGVyWydjb250ZW50LXR5cGUnXTtcbiAgICBsZXQgc2VyaWFsaXplID1cbiAgICAgIHRoaXMuX3NlcmlhbGl6ZXIgfHxcbiAgICAgIHJlcXVlc3Quc2VyaWFsaXplW2NvbnRlbnRUeXBlID8gY29udGVudFR5cGUuc3BsaXQoJzsnKVswXSA6ICcnXTtcbiAgICBpZiAoIXNlcmlhbGl6ZSAmJiBpc0pTT04oY29udGVudFR5cGUpKSB7XG4gICAgICBzZXJpYWxpemUgPSByZXF1ZXN0LnNlcmlhbGl6ZVsnYXBwbGljYXRpb24vanNvbiddO1xuICAgIH1cblxuICAgIGlmIChzZXJpYWxpemUpIGRhdGEgPSBzZXJpYWxpemUoZGF0YSk7XG4gIH1cblxuICAvLyBzZXQgaGVhZGVyIGZpZWxkc1xuICBmb3IgKGNvbnN0IGZpZWxkIGluIHRoaXMuaGVhZGVyKSB7XG4gICAgaWYgKHRoaXMuaGVhZGVyW2ZpZWxkXSA9PT0gbnVsbCkgY29udGludWU7XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuaGVhZGVyLCBmaWVsZCkpXG4gICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihmaWVsZCwgdGhpcy5oZWFkZXJbZmllbGRdKTtcbiAgfVxuXG4gIGlmICh0aGlzLl9yZXNwb25zZVR5cGUpIHtcbiAgICB4aHIucmVzcG9uc2VUeXBlID0gdGhpcy5fcmVzcG9uc2VUeXBlO1xuICB9XG5cbiAgLy8gc2VuZCBzdHVmZlxuICB0aGlzLmVtaXQoJ3JlcXVlc3QnLCB0aGlzKTtcblxuICAvLyBJRTExIHhoci5zZW5kKHVuZGVmaW5lZCkgc2VuZHMgJ3VuZGVmaW5lZCcgc3RyaW5nIGFzIFBPU1QgcGF5bG9hZCAoaW5zdGVhZCBvZiBub3RoaW5nKVxuICAvLyBXZSBuZWVkIG51bGwgaGVyZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICB4aHIuc2VuZCh0eXBlb2YgZGF0YSA9PT0gJ3VuZGVmaW5lZCcgPyBudWxsIDogZGF0YSk7XG59O1xuXG5yZXF1ZXN0LmFnZW50ID0gKCkgPT4gbmV3IEFnZW50KCk7XG5cblsnR0VUJywgJ1BPU1QnLCAnT1BUSU9OUycsICdQQVRDSCcsICdQVVQnLCAnREVMRVRFJ10uZm9yRWFjaChtZXRob2QgPT4ge1xuICBBZ2VudC5wcm90b3R5cGVbbWV0aG9kLnRvTG93ZXJDYXNlKCldID0gZnVuY3Rpb24odXJsLCBmbikge1xuICAgIGNvbnN0IHJlcSA9IG5ldyByZXF1ZXN0LlJlcXVlc3QobWV0aG9kLCB1cmwpO1xuICAgIHRoaXMuX3NldERlZmF1bHRzKHJlcSk7XG4gICAgaWYgKGZuKSB7XG4gICAgICByZXEuZW5kKGZuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVxO1xuICB9O1xufSk7XG5cbkFnZW50LnByb3RvdHlwZS5kZWwgPSBBZ2VudC5wcm90b3R5cGUuZGVsZXRlO1xuXG4vKipcbiAqIEdFVCBgdXJsYCB3aXRoIG9wdGlvbmFsIGNhbGxiYWNrIGBmbihyZXMpYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge01peGVkfEZ1bmN0aW9ufSBbZGF0YV0gb3IgZm5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbnJlcXVlc3QuZ2V0ID0gKHVybCwgZGF0YSwgZm4pID0+IHtcbiAgY29uc3QgcmVxID0gcmVxdWVzdCgnR0VUJywgdXJsKTtcbiAgaWYgKHR5cGVvZiBkYXRhID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm4gPSBkYXRhO1xuICAgIGRhdGEgPSBudWxsO1xuICB9XG5cbiAgaWYgKGRhdGEpIHJlcS5xdWVyeShkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG5cbi8qKlxuICogSEVBRCBgdXJsYCB3aXRoIG9wdGlvbmFsIGNhbGxiYWNrIGBmbihyZXMpYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge01peGVkfEZ1bmN0aW9ufSBbZGF0YV0gb3IgZm5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbnJlcXVlc3QuaGVhZCA9ICh1cmwsIGRhdGEsIGZuKSA9PiB7XG4gIGNvbnN0IHJlcSA9IHJlcXVlc3QoJ0hFQUQnLCB1cmwpO1xuICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmbiA9IGRhdGE7XG4gICAgZGF0YSA9IG51bGw7XG4gIH1cblxuICBpZiAoZGF0YSkgcmVxLnF1ZXJ5KGRhdGEpO1xuICBpZiAoZm4pIHJlcS5lbmQoZm4pO1xuICByZXR1cm4gcmVxO1xufTtcblxuLyoqXG4gKiBPUFRJT05TIHF1ZXJ5IHRvIGB1cmxgIHdpdGggb3B0aW9uYWwgY2FsbGJhY2sgYGZuKHJlcylgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7TWl4ZWR8RnVuY3Rpb259IFtkYXRhXSBvciBmblxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZuXVxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxucmVxdWVzdC5vcHRpb25zID0gKHVybCwgZGF0YSwgZm4pID0+IHtcbiAgY29uc3QgcmVxID0gcmVxdWVzdCgnT1BUSU9OUycsIHVybCk7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZuID0gZGF0YTtcbiAgICBkYXRhID0gbnVsbDtcbiAgfVxuXG4gIGlmIChkYXRhKSByZXEuc2VuZChkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG5cbi8qKlxuICogREVMRVRFIGB1cmxgIHdpdGggb3B0aW9uYWwgYGRhdGFgIGFuZCBjYWxsYmFjayBgZm4ocmVzKWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybFxuICogQHBhcmFtIHtNaXhlZH0gW2RhdGFdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZWwodXJsLCBkYXRhLCBmbikge1xuICBjb25zdCByZXEgPSByZXF1ZXN0KCdERUxFVEUnLCB1cmwpO1xuICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmbiA9IGRhdGE7XG4gICAgZGF0YSA9IG51bGw7XG4gIH1cblxuICBpZiAoZGF0YSkgcmVxLnNlbmQoZGF0YSk7XG4gIGlmIChmbikgcmVxLmVuZChmbik7XG4gIHJldHVybiByZXE7XG59XG5cbnJlcXVlc3QuZGVsID0gZGVsO1xucmVxdWVzdC5kZWxldGUgPSBkZWw7XG5cbi8qKlxuICogUEFUQ0ggYHVybGAgd2l0aCBvcHRpb25hbCBgZGF0YWAgYW5kIGNhbGxiYWNrIGBmbihyZXMpYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge01peGVkfSBbZGF0YV1cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbnJlcXVlc3QucGF0Y2ggPSAodXJsLCBkYXRhLCBmbikgPT4ge1xuICBjb25zdCByZXEgPSByZXF1ZXN0KCdQQVRDSCcsIHVybCk7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZuID0gZGF0YTtcbiAgICBkYXRhID0gbnVsbDtcbiAgfVxuXG4gIGlmIChkYXRhKSByZXEuc2VuZChkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG5cbi8qKlxuICogUE9TVCBgdXJsYCB3aXRoIG9wdGlvbmFsIGBkYXRhYCBhbmQgY2FsbGJhY2sgYGZuKHJlcylgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7TWl4ZWR9IFtkYXRhXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZuXVxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxucmVxdWVzdC5wb3N0ID0gKHVybCwgZGF0YSwgZm4pID0+IHtcbiAgY29uc3QgcmVxID0gcmVxdWVzdCgnUE9TVCcsIHVybCk7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZuID0gZGF0YTtcbiAgICBkYXRhID0gbnVsbDtcbiAgfVxuXG4gIGlmIChkYXRhKSByZXEuc2VuZChkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG5cbi8qKlxuICogUFVUIGB1cmxgIHdpdGggb3B0aW9uYWwgYGRhdGFgIGFuZCBjYWxsYmFjayBgZm4ocmVzKWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybFxuICogQHBhcmFtIHtNaXhlZHxGdW5jdGlvbn0gW2RhdGFdIG9yIGZuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5yZXF1ZXN0LnB1dCA9ICh1cmwsIGRhdGEsIGZuKSA9PiB7XG4gIGNvbnN0IHJlcSA9IHJlcXVlc3QoJ1BVVCcsIHVybCk7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZuID0gZGF0YTtcbiAgICBkYXRhID0gbnVsbDtcbiAgfVxuXG4gIGlmIChkYXRhKSByZXEuc2VuZChkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCJmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzTG9vc2U7IiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnLCBmbGFncyhvcHRpb25zKSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENoZWNrIGlmIGBvYmpgIGlzIGFuIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gaXNPYmplY3Qob2JqKSB7XG4gIHJldHVybiBvYmogIT09IG51bGwgJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNPYmplY3Q7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vIEBmbG93XG4ndXNlIHN0cmljdCc7XG5cbnZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZ2xvYmFsW2tleV0gPSAoZ2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9XG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIi8qXG4gKiBHZW5lcmF0ZWQgYnkgUEVHLmpzIDAuMTAuMC5cbiAqXG4gKiBodHRwOi8vcGVnanMub3JnL1xuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBwZWckc3ViY2xhc3MoY2hpbGQsIHBhcmVudCkge1xuICBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH1cbiAgY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlO1xuICBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpO1xufVxuXG5mdW5jdGlvbiBwZWckU3ludGF4RXJyb3IobWVzc2FnZSwgZXhwZWN0ZWQsIGZvdW5kLCBsb2NhdGlvbikge1xuICB0aGlzLm1lc3NhZ2UgID0gbWVzc2FnZTtcbiAgdGhpcy5leHBlY3RlZCA9IGV4cGVjdGVkO1xuICB0aGlzLmZvdW5kICAgID0gZm91bmQ7XG4gIHRoaXMubG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgdGhpcy5uYW1lICAgICA9IFwiU3ludGF4RXJyb3JcIjtcblxuICBpZiAodHlwZW9mIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBwZWckU3ludGF4RXJyb3IpO1xuICB9XG59XG5cbnBlZyRzdWJjbGFzcyhwZWckU3ludGF4RXJyb3IsIEVycm9yKTtcblxucGVnJFN5bnRheEVycm9yLmJ1aWxkTWVzc2FnZSA9IGZ1bmN0aW9uKGV4cGVjdGVkLCBmb3VuZCkge1xuICB2YXIgREVTQ1JJQkVfRVhQRUNUQVRJT05fRk5TID0ge1xuICAgICAgICBsaXRlcmFsOiBmdW5jdGlvbihleHBlY3RhdGlvbikge1xuICAgICAgICAgIHJldHVybiBcIlxcXCJcIiArIGxpdGVyYWxFc2NhcGUoZXhwZWN0YXRpb24udGV4dCkgKyBcIlxcXCJcIjtcbiAgICAgICAgfSxcblxuICAgICAgICBcImNsYXNzXCI6IGZ1bmN0aW9uKGV4cGVjdGF0aW9uKSB7XG4gICAgICAgICAgdmFyIGVzY2FwZWRQYXJ0cyA9IFwiXCIsXG4gICAgICAgICAgICAgIGk7XG5cbiAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZXhwZWN0YXRpb24ucGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGVzY2FwZWRQYXJ0cyArPSBleHBlY3RhdGlvbi5wYXJ0c1tpXSBpbnN0YW5jZW9mIEFycmF5XG4gICAgICAgICAgICAgID8gY2xhc3NFc2NhcGUoZXhwZWN0YXRpb24ucGFydHNbaV1bMF0pICsgXCItXCIgKyBjbGFzc0VzY2FwZShleHBlY3RhdGlvbi5wYXJ0c1tpXVsxXSlcbiAgICAgICAgICAgICAgOiBjbGFzc0VzY2FwZShleHBlY3RhdGlvbi5wYXJ0c1tpXSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIFwiW1wiICsgKGV4cGVjdGF0aW9uLmludmVydGVkID8gXCJeXCIgOiBcIlwiKSArIGVzY2FwZWRQYXJ0cyArIFwiXVwiO1xuICAgICAgICB9LFxuXG4gICAgICAgIGFueTogZnVuY3Rpb24oZXhwZWN0YXRpb24pIHtcbiAgICAgICAgICByZXR1cm4gXCJhbnkgY2hhcmFjdGVyXCI7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZW5kOiBmdW5jdGlvbihleHBlY3RhdGlvbikge1xuICAgICAgICAgIHJldHVybiBcImVuZCBvZiBpbnB1dFwiO1xuICAgICAgICB9LFxuXG4gICAgICAgIG90aGVyOiBmdW5jdGlvbihleHBlY3RhdGlvbikge1xuICAgICAgICAgIHJldHVybiBleHBlY3RhdGlvbi5kZXNjcmlwdGlvbjtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICBmdW5jdGlvbiBoZXgoY2gpIHtcbiAgICByZXR1cm4gY2guY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpdGVyYWxFc2NhcGUocykge1xuICAgIHJldHVybiBzXG4gICAgICAucmVwbGFjZSgvXFxcXC9nLCAnXFxcXFxcXFwnKVxuICAgICAgLnJlcGxhY2UoL1wiL2csICAnXFxcXFwiJylcbiAgICAgIC5yZXBsYWNlKC9cXDAvZywgJ1xcXFwwJylcbiAgICAgIC5yZXBsYWNlKC9cXHQvZywgJ1xcXFx0JylcbiAgICAgIC5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJylcbiAgICAgIC5yZXBsYWNlKC9cXHIvZywgJ1xcXFxyJylcbiAgICAgIC5yZXBsYWNlKC9bXFx4MDAtXFx4MEZdL2csICAgICAgICAgIGZ1bmN0aW9uKGNoKSB7IHJldHVybiAnXFxcXHgwJyArIGhleChjaCk7IH0pXG4gICAgICAucmVwbGFjZSgvW1xceDEwLVxceDFGXFx4N0YtXFx4OUZdL2csIGZ1bmN0aW9uKGNoKSB7IHJldHVybiAnXFxcXHgnICArIGhleChjaCk7IH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xhc3NFc2NhcGUocykge1xuICAgIHJldHVybiBzXG4gICAgICAucmVwbGFjZSgvXFxcXC9nLCAnXFxcXFxcXFwnKVxuICAgICAgLnJlcGxhY2UoL1xcXS9nLCAnXFxcXF0nKVxuICAgICAgLnJlcGxhY2UoL1xcXi9nLCAnXFxcXF4nKVxuICAgICAgLnJlcGxhY2UoLy0vZywgICdcXFxcLScpXG4gICAgICAucmVwbGFjZSgvXFwwL2csICdcXFxcMCcpXG4gICAgICAucmVwbGFjZSgvXFx0L2csICdcXFxcdCcpXG4gICAgICAucmVwbGFjZSgvXFxuL2csICdcXFxcbicpXG4gICAgICAucmVwbGFjZSgvXFxyL2csICdcXFxccicpXG4gICAgICAucmVwbGFjZSgvW1xceDAwLVxceDBGXS9nLCAgICAgICAgICBmdW5jdGlvbihjaCkgeyByZXR1cm4gJ1xcXFx4MCcgKyBoZXgoY2gpOyB9KVxuICAgICAgLnJlcGxhY2UoL1tcXHgxMC1cXHgxRlxceDdGLVxceDlGXS9nLCBmdW5jdGlvbihjaCkgeyByZXR1cm4gJ1xcXFx4JyAgKyBoZXgoY2gpOyB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc2NyaWJlRXhwZWN0YXRpb24oZXhwZWN0YXRpb24pIHtcbiAgICByZXR1cm4gREVTQ1JJQkVfRVhQRUNUQVRJT05fRk5TW2V4cGVjdGF0aW9uLnR5cGVdKGV4cGVjdGF0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc2NyaWJlRXhwZWN0ZWQoZXhwZWN0ZWQpIHtcbiAgICB2YXIgZGVzY3JpcHRpb25zID0gbmV3IEFycmF5KGV4cGVjdGVkLmxlbmd0aCksXG4gICAgICAgIGksIGo7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgZXhwZWN0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgIGRlc2NyaXB0aW9uc1tpXSA9IGRlc2NyaWJlRXhwZWN0YXRpb24oZXhwZWN0ZWRbaV0pO1xuICAgIH1cblxuICAgIGRlc2NyaXB0aW9ucy5zb3J0KCk7XG5cbiAgICBpZiAoZGVzY3JpcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgIGZvciAoaSA9IDEsIGogPSAxOyBpIDwgZGVzY3JpcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChkZXNjcmlwdGlvbnNbaSAtIDFdICE9PSBkZXNjcmlwdGlvbnNbaV0pIHtcbiAgICAgICAgICBkZXNjcmlwdGlvbnNbal0gPSBkZXNjcmlwdGlvbnNbaV07XG4gICAgICAgICAgaisrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBkZXNjcmlwdGlvbnMubGVuZ3RoID0gajtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKGRlc2NyaXB0aW9ucy5sZW5ndGgpIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgcmV0dXJuIGRlc2NyaXB0aW9uc1swXTtcblxuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gZGVzY3JpcHRpb25zWzBdICsgXCIgb3IgXCIgKyBkZXNjcmlwdGlvbnNbMV07XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbnMuc2xpY2UoMCwgLTEpLmpvaW4oXCIsIFwiKVxuICAgICAgICAgICsgXCIsIG9yIFwiXG4gICAgICAgICAgKyBkZXNjcmlwdGlvbnNbZGVzY3JpcHRpb25zLmxlbmd0aCAtIDFdO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc2NyaWJlRm91bmQoZm91bmQpIHtcbiAgICByZXR1cm4gZm91bmQgPyBcIlxcXCJcIiArIGxpdGVyYWxFc2NhcGUoZm91bmQpICsgXCJcXFwiXCIgOiBcImVuZCBvZiBpbnB1dFwiO1xuICB9XG5cbiAgcmV0dXJuIFwiRXhwZWN0ZWQgXCIgKyBkZXNjcmliZUV4cGVjdGVkKGV4cGVjdGVkKSArIFwiIGJ1dCBcIiArIGRlc2NyaWJlRm91bmQoZm91bmQpICsgXCIgZm91bmQuXCI7XG59O1xuXG5mdW5jdGlvbiBwZWckcGFyc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiB7fTtcblxuICB2YXIgcGVnJEZBSUxFRCA9IHt9LFxuXG4gICAgICBwZWckc3RhcnRSdWxlRnVuY3Rpb25zID0geyBzdGFydDogcGVnJHBhcnNlc3RhcnQgfSxcbiAgICAgIHBlZyRzdGFydFJ1bGVGdW5jdGlvbiAgPSBwZWckcGFyc2VzdGFydCxcblxuICAgICAgcGVnJGMwID0gXCIqXCIsXG4gICAgICBwZWckYzEgPSBwZWckbGl0ZXJhbEV4cGVjdGF0aW9uKFwiKlwiLCBmYWxzZSksXG4gICAgICBwZWckYzIgPSBwZWckYW55RXhwZWN0YXRpb24oKSxcbiAgICAgIHBlZyRjMyA9IGZ1bmN0aW9uKGxhYmVsKSB7IHJldHVybiB7dGFnOiBcImgyXCIsIGxhYmVsfSB9LFxuICAgICAgcGVnJGM0ID0gZnVuY3Rpb24oaXRlbXMpIHsgcmV0dXJuIHt0YWc6XCJ1bFwiLCBpdGVtc30gfSxcbiAgICAgIHBlZyRjNSA9IFwiLVwiLFxuICAgICAgcGVnJGM2ID0gcGVnJGxpdGVyYWxFeHBlY3RhdGlvbihcIi1cIiwgZmFsc2UpLFxuICAgICAgcGVnJGM3ID0gL15bXlxcbl0vLFxuICAgICAgcGVnJGM4ID0gcGVnJGNsYXNzRXhwZWN0YXRpb24oW1wiXFxuXCJdLCB0cnVlLCBmYWxzZSksXG4gICAgICBwZWckYzkgPSBcIlxcblwiLFxuICAgICAgcGVnJGMxMCA9IHBlZyRsaXRlcmFsRXhwZWN0YXRpb24oXCJcXG5cIiwgZmFsc2UpLFxuICAgICAgcGVnJGMxMSA9IGZ1bmN0aW9uKGxhYmVsKSB7IHJldHVybiBsYWJlbCB9LFxuICAgICAgcGVnJGMxMiA9IFwiPlwiLFxuICAgICAgcGVnJGMxMyA9IHBlZyRsaXRlcmFsRXhwZWN0YXRpb24oXCI+XCIsIGZhbHNlKSxcbiAgICAgIHBlZyRjMTQgPSBmdW5jdGlvbihsYWJlbCkgeyByZXR1cm4ge3RhZzpcImJsb2NrcXVvdGVcIiwgbGFiZWx9IH0sXG4gICAgICBwZWckYzE1ID0gXCJAXCIsXG4gICAgICBwZWckYzE2ID0gcGVnJGxpdGVyYWxFeHBlY3RhdGlvbihcIkBcIiwgZmFsc2UpLFxuICAgICAgcGVnJGMxNyA9IGZ1bmN0aW9uKGxhYmVsKSB7IHJldHVybiB7dGFnOiBcImFcIiwgbGFiZWx9IH0sXG4gICAgICBwZWckYzE4ID0gZnVuY3Rpb24obGFiZWwpIHsgcmV0dXJuIHt0YWc6IFwicFwiLCBsYWJlbH0gfSxcbiAgICAgIHBlZyRjMTkgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHt0YWc6IFwicFwiLCBsYWJlbDonJ30gfSxcblxuICAgICAgcGVnJGN1cnJQb3MgICAgICAgICAgPSAwLFxuICAgICAgcGVnJHNhdmVkUG9zICAgICAgICAgPSAwLFxuICAgICAgcGVnJHBvc0RldGFpbHNDYWNoZSAgPSBbeyBsaW5lOiAxLCBjb2x1bW46IDEgfV0sXG4gICAgICBwZWckbWF4RmFpbFBvcyAgICAgICA9IDAsXG4gICAgICBwZWckbWF4RmFpbEV4cGVjdGVkICA9IFtdLFxuICAgICAgcGVnJHNpbGVudEZhaWxzICAgICAgPSAwLFxuXG4gICAgICBwZWckcmVzdWx0O1xuXG4gIGlmIChcInN0YXJ0UnVsZVwiIGluIG9wdGlvbnMpIHtcbiAgICBpZiAoIShvcHRpb25zLnN0YXJ0UnVsZSBpbiBwZWckc3RhcnRSdWxlRnVuY3Rpb25zKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3Qgc3RhcnQgcGFyc2luZyBmcm9tIHJ1bGUgXFxcIlwiICsgb3B0aW9ucy5zdGFydFJ1bGUgKyBcIlxcXCIuXCIpO1xuICAgIH1cblxuICAgIHBlZyRzdGFydFJ1bGVGdW5jdGlvbiA9IHBlZyRzdGFydFJ1bGVGdW5jdGlvbnNbb3B0aW9ucy5zdGFydFJ1bGVdO1xuICB9XG5cbiAgZnVuY3Rpb24gdGV4dCgpIHtcbiAgICByZXR1cm4gaW5wdXQuc3Vic3RyaW5nKHBlZyRzYXZlZFBvcywgcGVnJGN1cnJQb3MpO1xuICB9XG5cbiAgZnVuY3Rpb24gbG9jYXRpb24oKSB7XG4gICAgcmV0dXJuIHBlZyRjb21wdXRlTG9jYXRpb24ocGVnJHNhdmVkUG9zLCBwZWckY3VyclBvcyk7XG4gIH1cblxuICBmdW5jdGlvbiBleHBlY3RlZChkZXNjcmlwdGlvbiwgbG9jYXRpb24pIHtcbiAgICBsb2NhdGlvbiA9IGxvY2F0aW9uICE9PSB2b2lkIDAgPyBsb2NhdGlvbiA6IHBlZyRjb21wdXRlTG9jYXRpb24ocGVnJHNhdmVkUG9zLCBwZWckY3VyclBvcylcblxuICAgIHRocm93IHBlZyRidWlsZFN0cnVjdHVyZWRFcnJvcihcbiAgICAgIFtwZWckb3RoZXJFeHBlY3RhdGlvbihkZXNjcmlwdGlvbildLFxuICAgICAgaW5wdXQuc3Vic3RyaW5nKHBlZyRzYXZlZFBvcywgcGVnJGN1cnJQb3MpLFxuICAgICAgbG9jYXRpb25cbiAgICApO1xuICB9XG5cbiAgZnVuY3Rpb24gZXJyb3IobWVzc2FnZSwgbG9jYXRpb24pIHtcbiAgICBsb2NhdGlvbiA9IGxvY2F0aW9uICE9PSB2b2lkIDAgPyBsb2NhdGlvbiA6IHBlZyRjb21wdXRlTG9jYXRpb24ocGVnJHNhdmVkUG9zLCBwZWckY3VyclBvcylcblxuICAgIHRocm93IHBlZyRidWlsZFNpbXBsZUVycm9yKG1lc3NhZ2UsIGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRsaXRlcmFsRXhwZWN0YXRpb24odGV4dCwgaWdub3JlQ2FzZSkge1xuICAgIHJldHVybiB7IHR5cGU6IFwibGl0ZXJhbFwiLCB0ZXh0OiB0ZXh0LCBpZ25vcmVDYXNlOiBpZ25vcmVDYXNlIH07XG4gIH1cblxuICBmdW5jdGlvbiBwZWckY2xhc3NFeHBlY3RhdGlvbihwYXJ0cywgaW52ZXJ0ZWQsIGlnbm9yZUNhc2UpIHtcbiAgICByZXR1cm4geyB0eXBlOiBcImNsYXNzXCIsIHBhcnRzOiBwYXJ0cywgaW52ZXJ0ZWQ6IGludmVydGVkLCBpZ25vcmVDYXNlOiBpZ25vcmVDYXNlIH07XG4gIH1cblxuICBmdW5jdGlvbiBwZWckYW55RXhwZWN0YXRpb24oKSB7XG4gICAgcmV0dXJuIHsgdHlwZTogXCJhbnlcIiB9O1xuICB9XG5cbiAgZnVuY3Rpb24gcGVnJGVuZEV4cGVjdGF0aW9uKCkge1xuICAgIHJldHVybiB7IHR5cGU6IFwiZW5kXCIgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRvdGhlckV4cGVjdGF0aW9uKGRlc2NyaXB0aW9uKSB7XG4gICAgcmV0dXJuIHsgdHlwZTogXCJvdGhlclwiLCBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24gfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRjb21wdXRlUG9zRGV0YWlscyhwb3MpIHtcbiAgICB2YXIgZGV0YWlscyA9IHBlZyRwb3NEZXRhaWxzQ2FjaGVbcG9zXSwgcDtcblxuICAgIGlmIChkZXRhaWxzKSB7XG4gICAgICByZXR1cm4gZGV0YWlscztcbiAgICB9IGVsc2Uge1xuICAgICAgcCA9IHBvcyAtIDE7XG4gICAgICB3aGlsZSAoIXBlZyRwb3NEZXRhaWxzQ2FjaGVbcF0pIHtcbiAgICAgICAgcC0tO1xuICAgICAgfVxuXG4gICAgICBkZXRhaWxzID0gcGVnJHBvc0RldGFpbHNDYWNoZVtwXTtcbiAgICAgIGRldGFpbHMgPSB7XG4gICAgICAgIGxpbmU6ICAgZGV0YWlscy5saW5lLFxuICAgICAgICBjb2x1bW46IGRldGFpbHMuY29sdW1uXG4gICAgICB9O1xuXG4gICAgICB3aGlsZSAocCA8IHBvcykge1xuICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwKSA9PT0gMTApIHtcbiAgICAgICAgICBkZXRhaWxzLmxpbmUrKztcbiAgICAgICAgICBkZXRhaWxzLmNvbHVtbiA9IDE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGV0YWlscy5jb2x1bW4rKztcbiAgICAgICAgfVxuXG4gICAgICAgIHArKztcbiAgICAgIH1cblxuICAgICAgcGVnJHBvc0RldGFpbHNDYWNoZVtwb3NdID0gZGV0YWlscztcbiAgICAgIHJldHVybiBkZXRhaWxzO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRjb21wdXRlTG9jYXRpb24oc3RhcnRQb3MsIGVuZFBvcykge1xuICAgIHZhciBzdGFydFBvc0RldGFpbHMgPSBwZWckY29tcHV0ZVBvc0RldGFpbHMoc3RhcnRQb3MpLFxuICAgICAgICBlbmRQb3NEZXRhaWxzICAgPSBwZWckY29tcHV0ZVBvc0RldGFpbHMoZW5kUG9zKTtcblxuICAgIHJldHVybiB7XG4gICAgICBzdGFydDoge1xuICAgICAgICBvZmZzZXQ6IHN0YXJ0UG9zLFxuICAgICAgICBsaW5lOiAgIHN0YXJ0UG9zRGV0YWlscy5saW5lLFxuICAgICAgICBjb2x1bW46IHN0YXJ0UG9zRGV0YWlscy5jb2x1bW5cbiAgICAgIH0sXG4gICAgICBlbmQ6IHtcbiAgICAgICAgb2Zmc2V0OiBlbmRQb3MsXG4gICAgICAgIGxpbmU6ICAgZW5kUG9zRGV0YWlscy5saW5lLFxuICAgICAgICBjb2x1bW46IGVuZFBvc0RldGFpbHMuY29sdW1uXG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRmYWlsKGV4cGVjdGVkKSB7XG4gICAgaWYgKHBlZyRjdXJyUG9zIDwgcGVnJG1heEZhaWxQb3MpIHsgcmV0dXJuOyB9XG5cbiAgICBpZiAocGVnJGN1cnJQb3MgPiBwZWckbWF4RmFpbFBvcykge1xuICAgICAgcGVnJG1heEZhaWxQb3MgPSBwZWckY3VyclBvcztcbiAgICAgIHBlZyRtYXhGYWlsRXhwZWN0ZWQgPSBbXTtcbiAgICB9XG5cbiAgICBwZWckbWF4RmFpbEV4cGVjdGVkLnB1c2goZXhwZWN0ZWQpO1xuICB9XG5cbiAgZnVuY3Rpb24gcGVnJGJ1aWxkU2ltcGxlRXJyb3IobWVzc2FnZSwgbG9jYXRpb24pIHtcbiAgICByZXR1cm4gbmV3IHBlZyRTeW50YXhFcnJvcihtZXNzYWdlLCBudWxsLCBudWxsLCBsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckYnVpbGRTdHJ1Y3R1cmVkRXJyb3IoZXhwZWN0ZWQsIGZvdW5kLCBsb2NhdGlvbikge1xuICAgIHJldHVybiBuZXcgcGVnJFN5bnRheEVycm9yKFxuICAgICAgcGVnJFN5bnRheEVycm9yLmJ1aWxkTWVzc2FnZShleHBlY3RlZCwgZm91bmQpLFxuICAgICAgZXhwZWN0ZWQsXG4gICAgICBmb3VuZCxcbiAgICAgIGxvY2F0aW9uXG4gICAgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRwYXJzZXN0YXJ0KCkge1xuICAgIHZhciBzMCwgczE7XG5cbiAgICBzMCA9IFtdO1xuICAgIHMxID0gcGVnJHBhcnNlc2VudGVuY2UoKTtcbiAgICB3aGlsZSAoczEgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgIHMwLnB1c2goczEpO1xuICAgICAgczEgPSBwZWckcGFyc2VzZW50ZW5jZSgpO1xuICAgIH1cblxuICAgIHJldHVybiBzMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRwYXJzZXNlbnRlbmNlKCkge1xuICAgIHZhciBzMDtcblxuICAgIHMwID0gcGVnJHBhcnNldGl0bGUoKTtcbiAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgIHMwID0gcGVnJHBhcnNlbGlzdCgpO1xuICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIHMwID0gcGVnJHBhcnNlYmxvY2txdW90ZSgpO1xuICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBzMCA9IHBlZyRwYXJzZWxpbmsoKTtcbiAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICAgIHMwID0gcGVnJHBhcnNlbm9wKCk7XG4gICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICAgICAgczAgPSBwZWckcGFyc2V0ZXh0KCk7XG4gICAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkge1xuICAgICAgICAgICAgICAgIHMwID0gcGVnJHBhcnNlZW9zKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gczA7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckcGFyc2V0aXRsZSgpIHtcbiAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNSwgczY7XG5cbiAgICBzMCA9IHBlZyRjdXJyUG9zO1xuICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDIpIHtcbiAgICAgIHMxID0gcGVnJGMwO1xuICAgICAgcGVnJGN1cnJQb3MrKztcbiAgICB9IGVsc2Uge1xuICAgICAgczEgPSBwZWckRkFJTEVEO1xuICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgeyBwZWckZmFpbChwZWckYzEpOyB9XG4gICAgfVxuICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgczIgPSBwZWckY3VyclBvcztcbiAgICAgIHMzID0gW107XG4gICAgICBzNCA9IHBlZyRjdXJyUG9zO1xuICAgICAgczUgPSBwZWckY3VyclBvcztcbiAgICAgIHBlZyRzaWxlbnRGYWlscysrO1xuICAgICAgczYgPSBwZWckcGFyc2VFT0woKTtcbiAgICAgIHBlZyRzaWxlbnRGYWlscy0tO1xuICAgICAgaWYgKHM2ID09PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIHM1ID0gdm9pZCAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGVnJGN1cnJQb3MgPSBzNTtcbiAgICAgICAgczUgPSBwZWckRkFJTEVEO1xuICAgICAgfVxuICAgICAgaWYgKHM1ICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIGlmIChpbnB1dC5sZW5ndGggPiBwZWckY3VyclBvcykge1xuICAgICAgICAgIHM2ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTtcbiAgICAgICAgICBwZWckY3VyclBvcysrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHM2ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjMik7IH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoczYgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBzNSA9IFtzNSwgczZdO1xuICAgICAgICAgIHM0ID0gczU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGVnJGN1cnJQb3MgPSBzNDtcbiAgICAgICAgICBzNCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBlZyRjdXJyUG9zID0gczQ7XG4gICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgIH1cbiAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBzMy5wdXNoKHM0KTtcbiAgICAgICAgICBzNCA9IHBlZyRjdXJyUG9zO1xuICAgICAgICAgIHM1ID0gcGVnJGN1cnJQb3M7XG4gICAgICAgICAgcGVnJHNpbGVudEZhaWxzKys7XG4gICAgICAgICAgczYgPSBwZWckcGFyc2VFT0woKTtcbiAgICAgICAgICBwZWckc2lsZW50RmFpbHMtLTtcbiAgICAgICAgICBpZiAoczYgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICAgIHM1ID0gdm9pZCAwO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwZWckY3VyclBvcyA9IHM1O1xuICAgICAgICAgICAgczUgPSBwZWckRkFJTEVEO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICAgIGlmIChpbnB1dC5sZW5ndGggPiBwZWckY3VyclBvcykge1xuICAgICAgICAgICAgICBzNiA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7XG4gICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzNiA9IHBlZyRGQUlMRUQ7XG4gICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMyKTsgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHM2ICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgICAgICAgIHM1ID0gW3M1LCBzNl07XG4gICAgICAgICAgICAgIHM0ID0gczU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHM0O1xuICAgICAgICAgICAgICBzNCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczQ7XG4gICAgICAgICAgICBzNCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7XG4gICAgICB9XG4gICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczIgPSBpbnB1dC5zdWJzdHJpbmcoczIsIHBlZyRjdXJyUG9zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHMyID0gczM7XG4gICAgICB9XG4gICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczMgPSBwZWckcGFyc2VFT0woKTtcbiAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7XG4gICAgICAgICAgczEgPSBwZWckYzMoczIpO1xuICAgICAgICAgIHMwID0gczE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBlZyRjdXJyUG9zID0gczA7XG4gICAgICAgIHMwID0gcGVnJEZBSUxFRDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgIHMwID0gcGVnJEZBSUxFRDtcbiAgICB9XG5cbiAgICByZXR1cm4gczA7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckcGFyc2VsaXN0KCkge1xuICAgIHZhciBzMCwgczEsIHMyO1xuXG4gICAgczAgPSBwZWckY3VyclBvcztcbiAgICBzMSA9IFtdO1xuICAgIHMyID0gcGVnJHBhcnNlbGlzdF9pdGVtKCk7XG4gICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczEucHVzaChzMik7XG4gICAgICAgIHMyID0gcGVnJHBhcnNlbGlzdF9pdGVtKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHMxID0gcGVnJEZBSUxFRDtcbiAgICB9XG4gICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICBwZWckc2F2ZWRQb3MgPSBzMDtcbiAgICAgIHMxID0gcGVnJGM0KHMxKTtcbiAgICB9XG4gICAgczAgPSBzMTtcblxuICAgIHJldHVybiBzMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRwYXJzZWxpc3RfaXRlbSgpIHtcbiAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0O1xuXG4gICAgczAgPSBwZWckY3VyclBvcztcbiAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDQ1KSB7XG4gICAgICBzMSA9IHBlZyRjNTtcbiAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHMxID0gcGVnJEZBSUxFRDtcbiAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGM2KTsgfVxuICAgIH1cbiAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgIHMyID0gcGVnJGN1cnJQb3M7XG4gICAgICBzMyA9IFtdO1xuICAgICAgaWYgKHBlZyRjNy50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7XG4gICAgICAgIHM0ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTtcbiAgICAgICAgcGVnJGN1cnJQb3MrKztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgeyBwZWckZmFpbChwZWckYzgpOyB9XG4gICAgICB9XG4gICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczMucHVzaChzNCk7XG4gICAgICAgIGlmIChwZWckYzcudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkge1xuICAgICAgICAgIHM0ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTtcbiAgICAgICAgICBwZWckY3VyclBvcysrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjOCk7IH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIHMyID0gaW5wdXQuc3Vic3RyaW5nKHMyLCBwZWckY3VyclBvcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzMiA9IHMzO1xuICAgICAgfVxuICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTApIHtcbiAgICAgICAgICBzMyA9IHBlZyRjOTtcbiAgICAgICAgICBwZWckY3VyclBvcysrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjMTApOyB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7XG4gICAgICAgICAgczEgPSBwZWckYzExKHMyKTtcbiAgICAgICAgICBzMCA9IHMxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7XG4gICAgICAgICAgczAgPSBwZWckRkFJTEVEO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwZWckY3VyclBvcyA9IHMwO1xuICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBlZyRjdXJyUG9zID0gczA7XG4gICAgICBzMCA9IHBlZyRGQUlMRUQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHMwO1xuICB9XG5cbiAgZnVuY3Rpb24gcGVnJHBhcnNlYmxvY2txdW90ZSgpIHtcbiAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNSwgczY7XG5cbiAgICBzMCA9IHBlZyRjdXJyUG9zO1xuICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjIpIHtcbiAgICAgIHMxID0gcGVnJGMxMjtcbiAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHMxID0gcGVnJEZBSUxFRDtcbiAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMxMyk7IH1cbiAgICB9XG4gICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICBzMiA9IHBlZyRjdXJyUG9zO1xuICAgICAgczMgPSBbXTtcbiAgICAgIHM0ID0gcGVnJGN1cnJQb3M7XG4gICAgICBzNSA9IHBlZyRjdXJyUG9zO1xuICAgICAgcGVnJHNpbGVudEZhaWxzKys7XG4gICAgICBzNiA9IHBlZyRwYXJzZUVPTCgpO1xuICAgICAgcGVnJHNpbGVudEZhaWxzLS07XG4gICAgICBpZiAoczYgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczUgPSB2b2lkIDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwZWckY3VyclBvcyA9IHM1O1xuICAgICAgICBzNSA9IHBlZyRGQUlMRUQ7XG4gICAgICB9XG4gICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgaWYgKGlucHV0Lmxlbmd0aCA+IHBlZyRjdXJyUG9zKSB7XG4gICAgICAgICAgczYgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpO1xuICAgICAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgczYgPSBwZWckRkFJTEVEO1xuICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMyKTsgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzNiAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICAgIHM1ID0gW3M1LCBzNl07XG4gICAgICAgICAgczQgPSBzNTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwZWckY3VyclBvcyA9IHM0O1xuICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGVnJGN1cnJQb3MgPSBzNDtcbiAgICAgICAgczQgPSBwZWckRkFJTEVEO1xuICAgICAgfVxuICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIHdoaWxlIChzNCAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICAgIHMzLnB1c2goczQpO1xuICAgICAgICAgIHM0ID0gcGVnJGN1cnJQb3M7XG4gICAgICAgICAgczUgPSBwZWckY3VyclBvcztcbiAgICAgICAgICBwZWckc2lsZW50RmFpbHMrKztcbiAgICAgICAgICBzNiA9IHBlZyRwYXJzZUVPTCgpO1xuICAgICAgICAgIHBlZyRzaWxlbnRGYWlscy0tO1xuICAgICAgICAgIGlmIChzNiA9PT0gcGVnJEZBSUxFRCkge1xuICAgICAgICAgICAgczUgPSB2b2lkIDA7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczU7XG4gICAgICAgICAgICBzNSA9IHBlZyRGQUlMRUQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICAgICAgaWYgKGlucHV0Lmxlbmd0aCA+IHBlZyRjdXJyUG9zKSB7XG4gICAgICAgICAgICAgIHM2ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTtcbiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHM2ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgeyBwZWckZmFpbChwZWckYzIpOyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoczYgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICAgICAgczUgPSBbczUsIHM2XTtcbiAgICAgICAgICAgICAgczQgPSBzNTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczQ7XG4gICAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzNDtcbiAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHMzID0gcGVnJEZBSUxFRDtcbiAgICAgIH1cbiAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICBzMiA9IGlucHV0LnN1YnN0cmluZyhzMiwgcGVnJGN1cnJQb3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgczIgPSBzMztcbiAgICAgIH1cbiAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICBzMyA9IHBlZyRwYXJzZUVPTCgpO1xuICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDtcbiAgICAgICAgICBzMSA9IHBlZyRjMTQoczIpO1xuICAgICAgICAgIHMwID0gczE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBlZyRjdXJyUG9zID0gczA7XG4gICAgICAgIHMwID0gcGVnJEZBSUxFRDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgIHMwID0gcGVnJEZBSUxFRDtcbiAgICB9XG5cbiAgICByZXR1cm4gczA7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckcGFyc2VsaW5rKCkge1xuICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQ7XG5cbiAgICBzMCA9IHBlZyRjdXJyUG9zO1xuICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjQpIHtcbiAgICAgIHMxID0gcGVnJGMxNTtcbiAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHMxID0gcGVnJEZBSUxFRDtcbiAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMxNik7IH1cbiAgICB9XG4gICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICBzMiA9IHBlZyRjdXJyUG9zO1xuICAgICAgczMgPSBbXTtcbiAgICAgIGlmIChwZWckYzcudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkge1xuICAgICAgICBzNCA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7XG4gICAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzNCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGM4KTsgfVxuICAgICAgfVxuICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIHdoaWxlIChzNCAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICAgIHMzLnB1c2goczQpO1xuICAgICAgICAgIGlmIChwZWckYzcudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkge1xuICAgICAgICAgICAgczQgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpO1xuICAgICAgICAgICAgcGVnJGN1cnJQb3MrKztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgczQgPSBwZWckRkFJTEVEO1xuICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgeyBwZWckZmFpbChwZWckYzgpOyB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7XG4gICAgICB9XG4gICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczIgPSBpbnB1dC5zdWJzdHJpbmcoczIsIHBlZyRjdXJyUG9zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHMyID0gczM7XG4gICAgICB9XG4gICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAxMCkge1xuICAgICAgICAgIHMzID0gcGVnJGM5O1xuICAgICAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgczMgPSBwZWckRkFJTEVEO1xuICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMxMCk7IH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDtcbiAgICAgICAgICBzMSA9IHBlZyRjMTcoczIpO1xuICAgICAgICAgIHMwID0gczE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBlZyRjdXJyUG9zID0gczA7XG4gICAgICAgIHMwID0gcGVnJEZBSUxFRDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgIHMwID0gcGVnJEZBSUxFRDtcbiAgICB9XG5cbiAgICByZXR1cm4gczA7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckcGFyc2V0ZXh0KCkge1xuICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQsIHM1O1xuXG4gICAgczAgPSBwZWckY3VyclBvcztcbiAgICBzMSA9IHBlZyRjdXJyUG9zO1xuICAgIHMyID0gW107XG4gICAgczMgPSBwZWckY3VyclBvcztcbiAgICBzNCA9IHBlZyRjdXJyUG9zO1xuICAgIHBlZyRzaWxlbnRGYWlscysrO1xuICAgIHM1ID0gcGVnJHBhcnNlRU9MKCk7XG4gICAgcGVnJHNpbGVudEZhaWxzLS07XG4gICAgaWYgKHM1ID09PSBwZWckRkFJTEVEKSB7XG4gICAgICBzNCA9IHZvaWQgMDtcbiAgICB9IGVsc2Uge1xuICAgICAgcGVnJGN1cnJQb3MgPSBzNDtcbiAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICB9XG4gICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICBpZiAoaW5wdXQubGVuZ3RoID4gcGVnJGN1cnJQb3MpIHtcbiAgICAgICAgczUgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpO1xuICAgICAgICBwZWckY3VyclBvcysrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgczUgPSBwZWckRkFJTEVEO1xuICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjMik7IH1cbiAgICAgIH1cbiAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICBzNCA9IFtzNCwgczVdO1xuICAgICAgICBzMyA9IHM0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMztcbiAgICAgICAgczMgPSBwZWckRkFJTEVEO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwZWckY3VyclBvcyA9IHMzO1xuICAgICAgczMgPSBwZWckRkFJTEVEO1xuICAgIH1cbiAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICBzMi5wdXNoKHMzKTtcbiAgICAgICAgczMgPSBwZWckY3VyclBvcztcbiAgICAgICAgczQgPSBwZWckY3VyclBvcztcbiAgICAgICAgcGVnJHNpbGVudEZhaWxzKys7XG4gICAgICAgIHM1ID0gcGVnJHBhcnNlRU9MKCk7XG4gICAgICAgIHBlZyRzaWxlbnRGYWlscy0tO1xuICAgICAgICBpZiAoczUgPT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBzNCA9IHZvaWQgMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwZWckY3VyclBvcyA9IHM0O1xuICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICBpZiAoaW5wdXQubGVuZ3RoID4gcGVnJGN1cnJQb3MpIHtcbiAgICAgICAgICAgIHM1ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTtcbiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHM1ID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMyKTsgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgICAgIHM0ID0gW3M0LCBzNV07XG4gICAgICAgICAgICBzMyA9IHM0O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwZWckY3VyclBvcyA9IHMzO1xuICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwZWckY3VyclBvcyA9IHMzO1xuICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzMiA9IHBlZyRGQUlMRUQ7XG4gICAgfVxuICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgczEgPSBpbnB1dC5zdWJzdHJpbmcoczEsIHBlZyRjdXJyUG9zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgczEgPSBzMjtcbiAgICB9XG4gICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICBzMiA9IHBlZyRwYXJzZUVPTCgpO1xuICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwO1xuICAgICAgICBzMSA9IHBlZyRjMTgoczEpO1xuICAgICAgICBzMCA9IHMxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgICAgczAgPSBwZWckRkFJTEVEO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwZWckY3VyclBvcyA9IHMwO1xuICAgICAgczAgPSBwZWckRkFJTEVEO1xuICAgIH1cblxuICAgIHJldHVybiBzMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBlZyRwYXJzZW5vcCgpIHtcbiAgICB2YXIgczAsIHMxLCBzMjtcblxuICAgIHMwID0gcGVnJGN1cnJQb3M7XG4gICAgczEgPSBbXTtcbiAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDEwKSB7XG4gICAgICBzMiA9IHBlZyRjOTtcbiAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHMyID0gcGVnJEZBSUxFRDtcbiAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMxMCk7IH1cbiAgICB9XG4gICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczEucHVzaChzMik7XG4gICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTApIHtcbiAgICAgICAgICBzMiA9IHBlZyRjOTtcbiAgICAgICAgICBwZWckY3VyclBvcysrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjMTApOyB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgczEgPSBwZWckRkFJTEVEO1xuICAgIH1cbiAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgIHBlZyRzYXZlZFBvcyA9IHMwO1xuICAgICAgczEgPSBwZWckYzE5KCk7XG4gICAgfVxuICAgIHMwID0gczE7XG5cbiAgICByZXR1cm4gczA7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckcGFyc2Vlb3MoKSB7XG4gICAgdmFyIHMwLCBzMSwgczIsIHMzO1xuXG4gICAgczAgPSBwZWckY3VyclBvcztcbiAgICBzMSA9IHBlZyRjdXJyUG9zO1xuICAgIHMyID0gW107XG4gICAgaWYgKGlucHV0Lmxlbmd0aCA+IHBlZyRjdXJyUG9zKSB7XG4gICAgICBzMyA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7XG4gICAgICBwZWckY3VyclBvcysrO1xuICAgIH0gZWxzZSB7XG4gICAgICBzMyA9IHBlZyRGQUlMRUQ7XG4gICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjMik7IH1cbiAgICB9XG4gICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgICAgczIucHVzaChzMyk7XG4gICAgICAgIGlmIChpbnB1dC5sZW5ndGggPiBwZWckY3VyclBvcykge1xuICAgICAgICAgIHMzID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTtcbiAgICAgICAgICBwZWckY3VyclBvcysrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDtcbiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7IHBlZyRmYWlsKHBlZyRjMik7IH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzMiA9IHBlZyRGQUlMRUQ7XG4gICAgfVxuICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgczEgPSBpbnB1dC5zdWJzdHJpbmcoczEsIHBlZyRjdXJyUG9zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgczEgPSBzMjtcbiAgICB9XG4gICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7XG4gICAgICBwZWckc2F2ZWRQb3MgPSBzMDtcbiAgICAgIHMxID0gcGVnJGMxOChzMSk7XG4gICAgfVxuICAgIHMwID0gczE7XG5cbiAgICByZXR1cm4gczA7XG4gIH1cblxuICBmdW5jdGlvbiBwZWckcGFyc2VFT0woKSB7XG4gICAgdmFyIHMwLCBzMSwgczI7XG5cbiAgICBzMCA9IHBlZyRjdXJyUG9zO1xuICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTApIHtcbiAgICAgIHMxID0gcGVnJGM5O1xuICAgICAgcGVnJGN1cnJQb3MrKztcbiAgICB9IGVsc2Uge1xuICAgICAgczEgPSBwZWckRkFJTEVEO1xuICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgeyBwZWckZmFpbChwZWckYzEwKTsgfVxuICAgIH1cbiAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHtcbiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTApIHtcbiAgICAgICAgczIgPSBwZWckYzk7XG4gICAgICAgIHBlZyRjdXJyUG9zKys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7XG4gICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsgcGVnJGZhaWwocGVnJGMxMCk7IH1cbiAgICAgIH1cbiAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkge1xuICAgICAgICBzMSA9IFtzMSwgczJdO1xuICAgICAgICBzMCA9IHMxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDtcbiAgICAgICAgczAgPSBwZWckRkFJTEVEO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwZWckY3VyclBvcyA9IHMwO1xuICAgICAgczAgPSBwZWckRkFJTEVEO1xuICAgIH1cblxuICAgIHJldHVybiBzMDtcbiAgfVxuXG4gIHBlZyRyZXN1bHQgPSBwZWckc3RhcnRSdWxlRnVuY3Rpb24oKTtcblxuICBpZiAocGVnJHJlc3VsdCAhPT0gcGVnJEZBSUxFRCAmJiBwZWckY3VyclBvcyA9PT0gaW5wdXQubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHBlZyRyZXN1bHQ7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHBlZyRyZXN1bHQgIT09IHBlZyRGQUlMRUQgJiYgcGVnJGN1cnJQb3MgPCBpbnB1dC5sZW5ndGgpIHtcbiAgICAgIHBlZyRmYWlsKHBlZyRlbmRFeHBlY3RhdGlvbigpKTtcbiAgICB9XG5cbiAgICB0aHJvdyBwZWckYnVpbGRTdHJ1Y3R1cmVkRXJyb3IoXG4gICAgICBwZWckbWF4RmFpbEV4cGVjdGVkLFxuICAgICAgcGVnJG1heEZhaWxQb3MgPCBpbnB1dC5sZW5ndGggPyBpbnB1dC5jaGFyQXQocGVnJG1heEZhaWxQb3MpIDogbnVsbCxcbiAgICAgIHBlZyRtYXhGYWlsUG9zIDwgaW5wdXQubGVuZ3RoXG4gICAgICAgID8gcGVnJGNvbXB1dGVMb2NhdGlvbihwZWckbWF4RmFpbFBvcywgcGVnJG1heEZhaWxQb3MgKyAxKVxuICAgICAgICA6IHBlZyRjb21wdXRlTG9jYXRpb24ocGVnJG1heEZhaWxQb3MsIHBlZyRtYXhGYWlsUG9zKVxuICAgICk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFN5bnRheEVycm9yOiBwZWckU3ludGF4RXJyb3IsXG4gIHBhcnNlOiAgICAgICBwZWckcGFyc2Vcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEyLjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBoPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzO24mJlN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO1xudmFyIHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxhYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2O24mJlN5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTtuJiZTeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpO24mJlN5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTt2YXIgQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBDPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxEPXt9O1xuZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1jfHxDfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307RS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEIoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1jfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2goSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxsPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGw9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBrPUFycmF5KGYpLG09MDttPGY7bSsrKWtbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1rfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmwscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIGJhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGMsZSl7aWYoUC5sZW5ndGgpe3ZhciBkPVAucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgbD0wO2w8YS5sZW5ndGg7bCsrKXtkPWFbbF07dmFyIGY9YitUKGQsbCk7Zys9UyhkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksbD1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1QoZCxsKyspLGcrPVMoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihCKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixjKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGUsZCk7VShhLGRhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihCKDMyMSkpO3JldHVybiBhfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107VihhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixjKTtVKGEsY2EsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtWKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU4oYSkpdGhyb3cgRXJyb3IoQigxNDMpKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RSxQdXJlQ29tcG9uZW50OkcsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmFhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ2FsbGJhY2soYSxiKX0sdXNlQ29udGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ29udGV4dChhLGIpfSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUVmZmVjdChhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsXG5iLGMpe3JldHVybiBXKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9LHVzZURlYnVnVmFsdWU6ZnVuY3Rpb24oKXt9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZU1lbW8oYSxiKX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFcoKS51c2VSZWR1Y2VyKGEsYixjKX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlUmVmKGEpfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVN0YXRlKGEpfSxGcmFnbWVudDpyLFByb2ZpbGVyOnUsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnksY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQigyNjcsYSkpO3ZhciBlPWgoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGw9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsbD1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoayBpbiBiKUsuY2FsbChiLGspJiYhTC5oYXNPd25Qcm9wZXJ0eShrKSYmKGVba109dm9pZCAwPT09YltrXSYmdm9pZCAwIT09Zj9mW2tdOmJba10pfXZhciBrPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ayllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGspe2Y9QXJyYXkoayk7Zm9yKHZhciBtPTA7bTxrO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjpsfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuMTIuMFwiLFxuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmh9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEyLjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxxPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTt2YXIgYmE9bnVsbCxjYT17fTtcbmZ1bmN0aW9uIGRhKCl7aWYoYmEpZm9yKHZhciBhIGluIGNhKXt2YXIgYj1jYVthXSxjPWJhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighZWFbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7ZWFbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZihmYS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTtmYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZoYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oaGEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIGhhKGEsYixjKXtpZihpYVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7aWFbYV09YjtqYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBlYT1bXSxmYT17fSxpYT17fSxqYT17fTtmdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgbGE9ITEsbWE9bnVsbCxuYT0hMSxvYT1udWxsLHBhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2xhPSEwO21hPWF9fTtmdW5jdGlvbiBxYShhLGIsYyxkLGUsZixnLGgsayl7bGE9ITE7bWE9bnVsbDtrYS5hcHBseShwYSxhcmd1bWVudHMpfVxuZnVuY3Rpb24gcmEoYSxiLGMsZCxlLGYsZyxoLGspe3FhLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihsYSl7aWYobGEpe3ZhciBsPW1hO2xhPSExO21hPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO25hfHwobmE9ITAsb2E9bCl9fXZhciBzYT1udWxsLHVhPW51bGwsdmE9bnVsbDtmdW5jdGlvbiB3YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9dmEoYyk7cmEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB4YShhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHlhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciB6YT1udWxsO2Z1bmN0aW9uIEFhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl3YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ3YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gQmEoYSl7bnVsbCE9PWEmJih6YT14YSh6YSxhKSk7YT16YTt6YT1udWxsO2lmKGEpe3lhKGEsQWEpO2lmKHphKXRocm93IEVycm9yKHUoOTUpKTtpZihuYSl0aHJvdyBhPW9hLG5hPSExLG9hPW51bGwsYTt9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2lmKGJhKXRocm93IEVycm9yKHUoMTAxKSk7YmE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7ZGEoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFjYS5oYXNPd25Qcm9wZXJ0eShjKXx8Y2FbY10hPT1kKXtpZihjYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7Y2FbY109ZDtiPSEwfX1iJiZkYSgpfX07XG5mdW5jdGlvbiBEYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXNhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLGIsdHlwZW9mIGMpKTtcbnJldHVybiBjfXZhciBFYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtFYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChFYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtFYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoRWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbnZhciBGYT0vXiguKilbXFxcXFxcL10vLHc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixHYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLEhhPXc/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixJYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxKYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxLYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxMYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxNYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLE5hPXc/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxPYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixQYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxRYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsUmE9dz9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxTYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2O3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTt3JiZTeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpO3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTt2YXIgVGE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIFVhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1UYSYmYVtUYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFZhKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gV2EoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBIYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgS2E6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgSmE6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBQYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBRYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBNYTpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIExhOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgT2E6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIFJhOnJldHVybiBXYShhLnR5cGUpO2Nhc2UgU2E6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBXYShhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBYYShhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9V2EoYS50eXBlKTtjPW51bGw7ZCYmKGM9V2EoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShGYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIFlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxaYT1udWxsLCRhPW51bGwsYWI9bnVsbDtmdW5jdGlvbiBiYihhKXtpZihhPXVhKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgWmEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1zYShhLnN0YXRlTm9kZSk7WmEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBjYihhKXskYT9hYj9hYi5wdXNoKGEpOmFiPVthXTokYT1hfWZ1bmN0aW9uIGRiKCl7aWYoJGEpe3ZhciBhPSRhLGI9YWI7YWI9JGE9bnVsbDtiYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspYmIoYlthXSl9fWZ1bmN0aW9uIGViKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gZmIoYSxiLGMsZCl7cmV0dXJuIGEoYixjLGQpfWZ1bmN0aW9uIGdiKCl7fVxudmFyIGhiPWViLGliPSExLGpiPSExO2Z1bmN0aW9uIGtiKCl7aWYobnVsbCE9PSRhfHxudWxsIT09YWIpZ2IoKSxkYigpfW5ldyBNYXA7dmFyIGxiPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxtYj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG5iPXt9LG9iPXt9O1xuZnVuY3Rpb24gcGIoYSl7aWYobWIuY2FsbChvYixhKSlyZXR1cm4hMDtpZihtYi5jYWxsKG5iLGEpKXJldHVybiExO2lmKGxiLnRlc3QoYSkpcmV0dXJuIG9iW2FdPSEwO25iW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHFiKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcmIoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8cWIoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgc2I9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB0YihhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShzYixcbnRiKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsdGIpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsdGIpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTtmdW5jdGlvbiB1YihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiB2YihhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChyYihiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/cGIoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHdiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB4YihhKXt2YXIgYj13YihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geWIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXhiKGEpKX1mdW5jdGlvbiB6YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9d2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBBYihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBCYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIENiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdmIoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIEViKGEsYil7Q2IoYSxiKTt2YXIgYz11YihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9GYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZGYihhLGIudHlwZSx1YihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEdiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIEZiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBIYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBJYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUhiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit1YihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gS2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBMYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmRlZmF1bHRWYWx1ZTtiPWIuY2hpbGRyZW47aWYobnVsbCE9Yil7aWYobnVsbCE9Yyl0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShiKSl7aWYoISgxPj1iLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2I9YlswXX1jPWJ9bnVsbD09YyYmKGM9XCJcIil9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6dWIoYyl9fVxuZnVuY3Rpb24gTWIoYSxiKXt2YXIgYz11YihiLnZhbHVlKSxkPXViKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTmIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgT2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gUGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBRYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/UGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUmIsU2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09T2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UmI9UmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gVGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBVYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBWYj17YW5pbWF0aW9uZW5kOlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxXYj17fSxYYj17fTtcbllhJiYoWGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVmIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVmIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVmIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVmIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBZYihhKXtpZihXYlthXSlyZXR1cm4gV2JbYV07aWYoIVZiW2FdKXJldHVybiBhO3ZhciBiPVZiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFhiKXJldHVybiBXYlthXT1iW2NdO3JldHVybiBhfXZhciBaYj1ZYihcImFuaW1hdGlvbmVuZFwiKSwkYj1ZYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxhYz1ZYihcImFuaW1hdGlvbnN0YXJ0XCIpLGJjPVliKFwidHJhbnNpdGlvbmVuZFwiKSxjYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBlYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBmYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGdjKGEpe2lmKGVjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGhjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWVjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGdjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGdjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaWMoYSl7YT1oYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBqYyxrYyxsYyxtYz0hMSxuYz1bXSxvYz1udWxsLHBjPW51bGwscWM9bnVsbCxyYz1uZXcgTWFwLHNjPW5ldyBNYXAsdGM9W10sdWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSx2Yz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj14YyhhKTt1Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe3ljKGMsYSxiKX0pO3ZjLmZvckVhY2goZnVuY3Rpb24oYyl7eWMoYyxhLGIpfSl9ZnVuY3Rpb24gemMoYSxiLGMsZCl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDpkfX1mdW5jdGlvbiBBYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOm9jPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpwYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpxYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6cmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6c2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiBCYyhhLGIsYyxkLGUpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZSlyZXR1cm4gYT16YyhiLGMsZCxlKSxudWxsIT09YiYmKGI9Q2MoYiksbnVsbCE9PWImJmtjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1mdW5jdGlvbiBEYyhhLGIsYyxkKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIG9jPUJjKG9jLGEsYixjLGQpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gcGM9QmMocGMsYSxiLGMsZCksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBxYz1CYyhxYyxhLGIsYyxkKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZT1kLnBvaW50ZXJJZDtyYy5zZXQoZSxCYyhyYy5nZXQoZSl8fG51bGwsYSxiLGMsZCkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBlPWQucG9pbnRlcklkLHNjLnNldChlLEJjKHNjLmdldChlKXx8bnVsbCxhLGIsYyxkKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBFYyhhKXt2YXIgYj1GYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWVjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWZjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3EudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtsYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gR2MoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPUhjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9Q2MoYik7bnVsbCE9PWMmJmtjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBJYyhhLGIsYyl7R2MoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIEpjKCl7Zm9yKG1jPSExOzA8bmMubGVuZ3RoOyl7dmFyIGE9bmNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNjKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmamMoYSk7YnJlYWt9dmFyIGI9SGMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6bmMuc2hpZnQoKX1udWxsIT09b2MmJkdjKG9jKSYmKG9jPW51bGwpO251bGwhPT1wYyYmR2MocGMpJiYocGM9bnVsbCk7bnVsbCE9PXFjJiZHYyhxYykmJihxYz1udWxsKTtyYy5mb3JFYWNoKEljKTtzYy5mb3JFYWNoKEljKX1mdW5jdGlvbiBLYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsbWN8fChtYz0hMCxxLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2socS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxKYykpKX1cbmZ1bmN0aW9uIExjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEtjKGIsYSl9aWYoMDxuYy5sZW5ndGgpe0tjKG5jWzBdLGEpO2Zvcih2YXIgYz0xO2M8bmMubGVuZ3RoO2MrKyl7dmFyIGQ9bmNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1vYyYmS2Mob2MsYSk7bnVsbCE9PXBjJiZLYyhwYyxhKTtudWxsIT09cWMmJktjKHFjLGEpO3JjLmZvckVhY2goYik7c2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8dGMubGVuZ3RoO2MrKylkPXRjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDx0Yy5sZW5ndGgmJihjPXRjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KUVjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmdGMuc2hpZnQoKX1cbmZ1bmN0aW9uIE1jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBOYyhhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE9jKGEsYixjKXtpZihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBQYyhhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPU5jKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylPYyhjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU9jKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIFFjKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUmMoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZRYyhhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBTYyhhKXt5YShhLFBjKX1mdW5jdGlvbiBUYygpe3JldHVybiEwfWZ1bmN0aW9uIFVjKCl7cmV0dXJuITF9ZnVuY3Rpb24gRShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/VGM6VWM7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1VYztyZXR1cm4gdGhpc31cbm4oRS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1UYyl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1UYyl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1UY30saXNQZXJzaXN0ZW50OlVjLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPVVjO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7RS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5FLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO1ZjKGMpO3JldHVybiBjfTtWYyhFKTtmdW5jdGlvbiBXYyhhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIFhjKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIFZjKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPVdjO2EucmVsZWFzZT1YY312YXIgWWM9RS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLFpjPUUuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksJGM9RS5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLGFkPSRjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBiZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBjZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sZGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LGVkPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBnZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWVkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gaGQoKXtyZXR1cm4gZ2R9XG52YXIgaWQ9JGMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPWNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9kZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6aGQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/YmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxqZD0wLGtkPTAsbGQ9ITEsbWQ9ITEsbmQ9JGMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPWpkO2pkPWEuc2NyZWVuWDtyZXR1cm4gbGQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtXG5iOjA6KGxkPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO3ZhciBiPWtkO2tkPWEuc2NyZWVuWTtyZXR1cm4gbWQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihtZD0hMCwwKX19KSxvZD1uZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSkscGQ9bmQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPSRjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkfSkscmQ9RS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLFxuZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxzZD1uZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksdGQ9W1tcImJsdXJcIixcImJsdXJcIiwwXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiLDBdLFtcImNsaWNrXCIsXCJjbGlja1wiLDBdLFtcImNsb3NlXCIsXCJjbG9zZVwiLDBdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiLDBdLFtcImNvcHlcIixcImNvcHlcIiwwXSxbXCJjdXRcIixcImN1dFwiLDBdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiLDBdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiLDBdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIixcbjBdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCIsMF0sW1wiZHJvcFwiLFwiZHJvcFwiLDBdLFtcImZvY3VzXCIsXCJmb2N1c1wiLDBdLFtcImlucHV0XCIsXCJpbnB1dFwiLDBdLFtcImludmFsaWRcIixcImludmFsaWRcIiwwXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCIsMF0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCIsMF0sW1wia2V5dXBcIixcImtleVVwXCIsMF0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIiwwXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCIsMF0sW1wicGFzdGVcIixcInBhc3RlXCIsMF0sW1wicGF1c2VcIixcInBhdXNlXCIsMF0sW1wicGxheVwiLFwicGxheVwiLDBdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIiwwXSxbXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIiwwXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiLDBdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIiwwXSxbXCJyZXNldFwiLFwicmVzZXRcIiwwXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiLDBdLFtcInN1Ym1pdFwiLFwic3VibWl0XCIsMF0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCIsXG4wXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIiwwXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCIsMF0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIiwwXSxbXCJkcmFnXCIsXCJkcmFnXCIsMV0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIiwxXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIiwxXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiLDFdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiLDFdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCIsMV0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCIsMV0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIiwxXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIiwxXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCIsMV0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCIsMV0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIiwxXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiLDFdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCIsMV0sW1wid2hlZWxcIixcIndoZWVsXCIsMV0sW1wiYWJvcnRcIixcImFib3J0XCIsXG4yXSxbWmIsXCJhbmltYXRpb25FbmRcIiwyXSxbJGIsXCJhbmltYXRpb25JdGVyYXRpb25cIiwyXSxbYWMsXCJhbmltYXRpb25TdGFydFwiLDJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIiwyXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIiwyXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIiwyXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsMl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIiwyXSxbXCJlbmRlZFwiLFwiZW5kZWRcIiwyXSxbXCJlcnJvclwiLFwiZXJyb3JcIiwyXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIiwyXSxbXCJsb2FkXCIsXCJsb2FkXCIsMl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLDJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLDJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsMl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIiwyXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsMl0sW1wicHJvZ3Jlc3NcIixcblwicHJvZ3Jlc3NcIiwyXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsMl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiLDJdLFtcInN1c3BlbmRcIixcInN1c3BlbmRcIiwyXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsMl0sW2JjLFwidHJhbnNpdGlvbkVuZFwiLDJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIiwyXV0sdWQ9e30sdmQ9e30sd2Q9MDtmb3IoO3dkPHRkLmxlbmd0aDt3ZCsrKXt2YXIgeWQ9dGRbd2RdLHpkPXlkWzBdLEFkPXlkWzFdLEJkPXlkWzJdLENkPVwib25cIisoQWRbMF0udG9VcHBlckNhc2UoKStBZC5zbGljZSgxKSksRGQ9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOkNkLGNhcHR1cmVkOkNkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W3pkXSxldmVudFByaW9yaXR5OkJkfTt1ZFtBZF09RGQ7dmRbemRdPURkfVxudmFyIEVkPXtldmVudFR5cGVzOnVkLGdldEV2ZW50UHJpb3JpdHk6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YT9hLmV2ZW50UHJpb3JpdHk6Mn0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12ZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PWJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1pZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9YWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1uZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxucGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT1xZDticmVhaztjYXNlIFpiOmNhc2UgJGI6Y2FzZSBhYzphPVljO2JyZWFrO2Nhc2UgYmM6YT1yZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT0kYzticmVhaztjYXNlIFwid2hlZWxcIjphPXNkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9WmM7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1vZDticmVhaztkZWZhdWx0OmE9RX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1NjKGIpO3JldHVybiBifX0sRmQ9cS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxcbkdkPXEudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEhkPUVkLmdldEV2ZW50UHJpb3JpdHksSWQ9MTAsSmQ9W107XG5mdW5jdGlvbiBLZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9RmMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9TWMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFncyxoPW51bGwsaz0wO2s8ZWEubGVuZ3RoO2srKyl7dmFyIGw9ZWFba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD14YShoLGwpKX1CYShoKX19XG52YXIgTGQ9ITA7ZnVuY3Rpb24gRihhLGIpe01kKGIsYSwhMSl9ZnVuY3Rpb24gTWQoYSxiLGMpe3N3aXRjaChIZChiKSl7Y2FzZSAwOnZhciBkPU5kLmJpbmQobnVsbCxiLDEpO2JyZWFrO2Nhc2UgMTpkPU9kLmJpbmQobnVsbCxiLDEpO2JyZWFrO2RlZmF1bHQ6ZD1QZC5iaW5kKG51bGwsYiwxKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIE5kKGEsYixjKXtpYnx8Z2IoKTt2YXIgZD1QZCxlPWliO2liPSEwO3RyeXtmYihkLGEsYixjKX1maW5hbGx5eyhpYj1lKXx8a2IoKX19ZnVuY3Rpb24gT2QoYSxiLGMpe0dkKEZkLFBkLmJpbmQobnVsbCxhLGIsYykpfVxuZnVuY3Rpb24gUWQoYSxiLGMsZCl7aWYoSmQubGVuZ3RoKXt2YXIgZT1KZC5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1iO2UubmF0aXZlRXZlbnQ9YztlLnRhcmdldEluc3Q9ZDthPWV9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmIsbmF0aXZlRXZlbnQ6Yyx0YXJnZXRJbnN0OmQsYW5jZXN0b3JzOltdfTt0cnl7aWYoYj1LZCxjPWEsamIpYihjLHZvaWQgMCk7ZWxzZXtqYj0hMDt0cnl7aGIoYixjLHZvaWQgMCl9ZmluYWxseXtqYj0hMSxrYigpfX19ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCxKZC5sZW5ndGg8SWQmJkpkLnB1c2goYSl9fVxuZnVuY3Rpb24gUGQoYSxiLGMpe2lmKExkKWlmKDA8bmMubGVuZ3RoJiYtMTx1Yy5pbmRleE9mKGEpKWE9emMobnVsbCxhLGIsYyksbmMucHVzaChhKTtlbHNle3ZhciBkPUhjKGEsYixjKTtudWxsPT09ZD9BYyhhLGMpOi0xPHVjLmluZGV4T2YoYSk/KGE9emMoZCxhLGIsYyksbmMucHVzaChhKSk6RGMoZCxhLGIsYyl8fChBYyhhLGMpLFFkKGEsYixjLG51bGwpKX19ZnVuY3Rpb24gSGMoYSxiLGMpe3ZhciBkPU1jKGMpO2Q9RmMoZCk7aWYobnVsbCE9PWQpe3ZhciBlPWVjKGQpO2lmKG51bGw9PT1lKWQ9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7ZD1mYyhlKTtpZihudWxsIT09ZClyZXR1cm4gZDtkPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtkPW51bGx9ZWxzZSBlIT09ZCYmKGQ9bnVsbCl9fVFkKGEsYixjLGQpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gUmQoYSl7aWYoIVlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBTZD1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiB4YyhhKXt2YXIgYj1TZC5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IFNldCxTZC5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiB5YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOk1kKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpNZChiLFwiZm9jdXNcIiwhMCk7TWQoYixcImJsdXJcIiwhMCk7Yy5hZGQoXCJibHVyXCIpO2MuYWRkKFwiZm9jdXNcIik7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlJkKGEpJiZNZChiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1jYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5hZGQoYSl9fVxudmFyIFRkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LFVkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhUZCkuZm9yRWFjaChmdW5jdGlvbihhKXtVZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO1RkW2JdPVRkW2FdfSl9KTtmdW5jdGlvbiBWZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8VGQuaGFzT3duUHJvcGVydHkoYSkmJlRkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIFdkKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPVZkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIFhkPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBZZChhLGIpe2lmKGIpe2lmKFhkW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gWmQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uICRkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPXhjKGEpO2I9amFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspeWMoYltkXSxhLGMpfWZ1bmN0aW9uIGFlKCl7fVxuZnVuY3Rpb24gYmUoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIGNlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiBkZShhLGIpe3ZhciBjPWNlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPWNlKGMpfX1cbmZ1bmN0aW9uIGVlKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/ZWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIGZlKCl7Zm9yKHZhciBhPXdpbmRvdyxiPWJlKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPWJlKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24gZ2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgaGU9XCIkXCIsaWU9XCIvJFwiLGplPVwiJD9cIixrZT1cIiQhXCIsbGU9bnVsbCxtZT1udWxsO2Z1bmN0aW9uIG5lKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG9lKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgcGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHJlKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gc2UoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09aGV8fGM9PT1rZXx8Yz09PWplKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09aWUmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0ZT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx1ZT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK3RlLHZlPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrdGUsd2U9XCJfX3JlYWN0Q29udGFpbmVyZSRcIit0ZTtcbmZ1bmN0aW9uIEZjKGEpe3ZhciBiPWFbdWVdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW3dlXXx8Y1t1ZV0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZShhKTtudWxsIT09YTspe2lmKGM9YVt1ZV0pcmV0dXJuIGM7YT1zZShhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2MoYSl7YT1hW3VlXXx8YVt3ZV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHhlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIHllKGEpe3JldHVybiBhW3ZlXXx8bnVsbH12YXIgemU9bnVsbCxBZT1udWxsLEJlPW51bGw7XG5mdW5jdGlvbiBDZSgpe2lmKEJlKXJldHVybiBCZTt2YXIgYSxiPUFlLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIHplP3plLnZhbHVlOnplLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIEJlPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9dmFyIERlPUUuZXh0ZW5kKHtkYXRhOm51bGx9KSxFZT1FLmV4dGVuZCh7ZGF0YTpudWxsfSksRmU9WzksMTMsMjcsMzJdLEdlPVlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxIZT1udWxsO1lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihIZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIEllPVlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhSGUsSmU9WWEmJighR2V8fEhlJiY4PEhlJiYxMT49SGUpLEtlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLExlPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LE1lPSExO1xuZnVuY3Rpb24gTmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1GZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIE9lKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIFBlPSExO2Z1bmN0aW9uIFFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBPZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7TWU9ITA7cmV0dXJuIEtlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUtlJiZNZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBSZShhLGIpe2lmKFBlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFHZSYmTmUoYSxiKT8oYT1DZSgpLEJlPUFlPXplPW51bGwsUGU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIEplJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBTZT17ZXZlbnRUeXBlczpMZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKEdlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPUxlLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPUxlLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1MZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2UgUGU/TmUoYSxjKSYmKGY9TGUuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1MZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhKZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihQZXx8ZiE9PUxlLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PUxlLmNvbXBvc2l0aW9uRW5kJiZQZSYmKGU9Q2UoKSk6KHplPWQsQWU9XCJ2YWx1ZVwiaW4gemU/emUudmFsdWU6emUudGV4dENvbnRlbnQsUGU9ITApKSxmPURlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9T2UoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFNjKGYpLGU9Zik6ZT1udWxsOyhhPUllP1FlKGEsYyk6UmUoYSxjKSk/KGI9RWUuZ2V0UG9vbGVkKExlLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxTYyhiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSxUZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBVZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIVRlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciBWZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBXZShhLGIsYyl7YT1FLmdldFBvb2xlZChWZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO2NiKGMpO1NjKGEpO3JldHVybiBhfXZhciBYZT1udWxsLFllPW51bGw7ZnVuY3Rpb24gWmUoYSl7QmEoYSl9ZnVuY3Rpb24gJGUoYSl7dmFyIGI9eGUoYSk7aWYoemIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gYWYoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgYmY9ITE7WWEmJihiZj1SZChcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIGNmKCl7WGUmJihYZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixkZiksWWU9WGU9bnVsbCl9ZnVuY3Rpb24gZGYoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJiRlKFllKSlpZihhPVdlKFllLGEsTWMoYSkpLGliKUJhKGEpO2Vsc2V7aWI9ITA7dHJ5e2ViKFplLGEpfWZpbmFsbHl7aWI9ITEsa2IoKX19fWZ1bmN0aW9uIGVmKGEsYixjKXtcImZvY3VzXCI9PT1hPyhjZigpLFhlPWIsWWU9YyxYZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixkZikpOlwiYmx1clwiPT09YSYmY2YoKX1mdW5jdGlvbiBmZihhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiAkZShZZSl9ZnVuY3Rpb24gZ2YoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiAkZShiKX1mdW5jdGlvbiBoZihhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiAkZShiKX1cbnZhciBqZj17ZXZlbnRUeXBlczpWZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOmJmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj94ZShiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPWFmO2Vsc2UgaWYoVWUoZSkpaWYoYmYpZz1oZjtlbHNle2c9ZmY7dmFyIGg9ZWZ9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPWdmKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiBXZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkZiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LGtmPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsXG5kZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxsZixtZj17ZXZlbnRUeXBlczprZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtcbmU9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/RmMoYik6bnVsbCxudWxsIT09YiYmKGY9ZWMoYiksYiE9PWZ8fDUhPT1iLnRhZyYmNiE9PWIudGFnKSliPW51bGx9ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpe3ZhciBoPW5kO3ZhciBrPWtmLm1vdXNlTGVhdmU7dmFyIGw9a2YubW91c2VFbnRlcjt2YXIgbT1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaD1vZCxrPWtmLnBvaW50ZXJMZWF2ZSxsPWtmLnBvaW50ZXJFbnRlcixtPVwicG9pbnRlclwiO2E9bnVsbD09Zz9lOnhlKGcpO2U9bnVsbD09Yj9lOnhlKGIpO2s9aC5nZXRQb29sZWQoayxnLGMsZCk7ay50eXBlPW0rXCJsZWF2ZVwiO2sudGFyZ2V0PVxuYTtrLnJlbGF0ZWRUYXJnZXQ9ZTtkPWguZ2V0UG9vbGVkKGwsYixjLGQpO2QudHlwZT1tK1wiZW50ZXJcIjtkLnRhcmdldD1lO2QucmVsYXRlZFRhcmdldD1hO2g9ZzttPWI7aWYoaCYmbSlhOntsPWg7YT1tO2c9MDtmb3IoYj1sO2I7Yj1OYyhiKSlnKys7Yj0wO2ZvcihlPWE7ZTtlPU5jKGUpKWIrKztmb3IoOzA8Zy1iOylsPU5jKGwpLGctLTtmb3IoOzA8Yi1nOylhPU5jKGEpLGItLTtmb3IoO2ctLTspe2lmKGw9PT1hfHxsPT09YS5hbHRlcm5hdGUpYnJlYWsgYTtsPU5jKGwpO2E9TmMoYSl9bD1udWxsfWVsc2UgbD1udWxsO2E9bDtmb3IobD1bXTtoJiZoIT09YTspe2c9aC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1hKWJyZWFrO2wucHVzaChoKTtoPU5jKGgpfWZvcihoPVtdO20mJm0hPT1hOyl7Zz1tLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWEpYnJlYWs7aC5wdXNoKG0pO209TmMobSl9Zm9yKG09MDttPGwubGVuZ3RoO20rKylRYyhsW21dLFwiYnViYmxlZFwiLGspO2ZvcihtPVxuaC5sZW5ndGg7MDxtLS07KVFjKGhbbV0sXCJjYXB0dXJlZFwiLGQpO2lmKGM9PT1sZilyZXR1cm4gbGY9bnVsbCxba107bGY9YztyZXR1cm5bayxkXX19O2Z1bmN0aW9uIG5mKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6bmYscGY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBxZihhLGIpe2lmKG9mKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighcGYuY2FsbChiLGNbZF0pfHwhb2YoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciByZj1ZYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLHNmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSx0Zj1udWxsLHVmPW51bGwsdmY9bnVsbCx3Zj0hMTtcbmZ1bmN0aW9uIHhmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYod2Z8fG51bGw9PXRmfHx0ZiE9PWJlKGMpKXJldHVybiBudWxsO2M9dGY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmZ2UoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gdmYmJnFmKHZmLGMpP251bGw6KHZmPWMsYT1FLmdldFBvb2xlZChzZi5zZWxlY3QsdWYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD10ZixTYyhhKSxhKX1cbnZhciB5Zj17ZXZlbnRUeXBlczpzZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT14YyhlKTtmPWphLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj94ZShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFVlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKXRmPWUsdWY9Yix2Zj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6dmY9dWY9dGY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6d2Y9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiB3Zj0hMSx4ZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihyZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIHhmKGMsZCl9cmV0dXJuIG51bGx9fTtDYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3ZhciB6Zj1DYztzYT15ZTt1YT16Zjt2YT14ZTtDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkVkLEVudGVyTGVhdmVFdmVudFBsdWdpbjptZixDaGFuZ2VFdmVudFBsdWdpbjpqZixTZWxlY3RFdmVudFBsdWdpbjp5ZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOlNlfSk7bmV3IFNldDt2YXIgQWY9W10sQmY9LTE7ZnVuY3Rpb24gRyhhKXswPkJmfHwoYS5jdXJyZW50PUFmW0JmXSxBZltCZl09bnVsbCxCZi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXtCZisrO0FmW0JmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LEo9e2N1cnJlbnQ6Q2Z9LEs9e2N1cnJlbnQ6ITF9LERmPUNmO2Z1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRmYoYSl7RyhLLGEpO0coSixhKX1mdW5jdGlvbiBHZihhKXtHKEssYSk7RyhKLGEpfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiLGEpO0koSyxjLGEpfWZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgsV2EoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEpmKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9Si5jdXJyZW50O0koSixiLGEpO0koSyxLLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhiPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEcoSyxhKSxHKEosYSksSShKLGIsYSkpOkcoSyxhKTtJKEssYyxhKX1cbnZhciBMZj1xLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxNZj1xLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssTmY9cS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxPZj1xLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFBmPXEudW5zdGFibGVfcmVxdWVzdFBhaW50LFFmPXEudW5zdGFibGVfbm93LFJmPXEudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsU2Y9cS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxUZj1xLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFVmPXEudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVmY9cS51bnN0YWJsZV9Mb3dQcmlvcml0eSxXZj1xLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxYZj17fSxZZj12b2lkIDAhPT1QZj9QZjpmdW5jdGlvbigpe30sWmY9bnVsbCwkZj1udWxsLGFnPSExLGJnPVFmKCksY2c9MUU0PmJnP1FmOmZ1bmN0aW9uKCl7cmV0dXJuIFFmKCktYmd9O1xuZnVuY3Rpb24gZGcoKXtzd2l0Y2goUmYoKSl7Y2FzZSBTZjpyZXR1cm4gOTk7Y2FzZSBUZjpyZXR1cm4gOTg7Y2FzZSBVZjpyZXR1cm4gOTc7Y2FzZSBWZjpyZXR1cm4gOTY7Y2FzZSBXZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gZWcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFNmO2Nhc2UgOTg6cmV0dXJuIFRmO2Nhc2UgOTc6cmV0dXJuIFVmO2Nhc2UgOTY6cmV0dXJuIFZmO2Nhc2UgOTU6cmV0dXJuIFdmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEsYil7YT1lZyhhKTtyZXR1cm4gTGYoYSxiKX1mdW5jdGlvbiBnZyhhLGIsYyl7YT1lZyhhKTtyZXR1cm4gTWYoYSxiLGMpfWZ1bmN0aW9uIGhnKGEpe251bGw9PT1aZj8oWmY9W2FdLCRmPU1mKFNmLGlnKSk6WmYucHVzaChhKTtyZXR1cm4gWGZ9ZnVuY3Rpb24gamcoKXtpZihudWxsIT09JGYpe3ZhciBhPSRmOyRmPW51bGw7TmYoYSl9aWcoKX1cbmZ1bmN0aW9uIGlnKCl7aWYoIWFnJiZudWxsIT09WmYpe2FnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVpmO2ZnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtaZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1aZiYmKFpmPVpmLnNsaWNlKGErMSkpLE1mKFNmLGpnKSxjO31maW5hbGx5e2FnPSExfX19dmFyIGtnPTM7ZnVuY3Rpb24gbGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gbWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIG5nPXtjdXJyZW50Om51bGx9LG9nPW51bGwscGc9bnVsbCxxZz1udWxsO2Z1bmN0aW9uIHJnKCl7cWc9cGc9b2c9bnVsbH1cbmZ1bmN0aW9uIHNnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0kobmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHRnKGEpe3ZhciBiPW5nLmN1cnJlbnQ7RyhuZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHVnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fVxuZnVuY3Rpb24gdmcoYSxiKXtvZz1hO3FnPXBnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHdnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1mdW5jdGlvbiB4ZyhhLGIpe2lmKHFnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilxZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09cGcpe2lmKG51bGw9PT1vZyl0aHJvdyBFcnJvcih1KDMwOCkpO3BnPWI7b2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBwZz1wZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgeWc9ITE7XG5mdW5jdGlvbiB6ZyhhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gQWcoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gQmcoYSxiKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIENnKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIERnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT16ZyhjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9QWcoZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9QWcoZCkpO251bGw9PT1lfHxkPT09ZT9DZyhkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KENnKGQsYiksQ2coZSxiKSk6KENnKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gRWcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpOkZnKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gRmcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9QWcoYikpO3JldHVybiBifVxuZnVuY3Rpb24gR2coYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2UgMjp5Zz0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIEhnKGEsYixjLGQsZSl7eWc9ITE7Yj1GZyhhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxsPWY7bnVsbCE9PWs7KXt2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWssZj1sKSxoPG0mJihoPW0pKTooSWcobSxrLnN1c3BlbnNlQ29uZmlnKSxsPUdnKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciBDPWsuZXhwaXJhdGlvblRpbWU7QzxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8QyYmKGg9QykpOihsPUdnKGEsYixrLGwsYyxkKSxudWxsIT09XG5rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTtKZyhoKTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiBLZyhhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7TGcoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO0xnKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiBMZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDE5MSxjKSk7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbnZhciBNZz1FYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxOZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBPZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBTZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZWMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVBnKCksZT1NZy5zdXNwZW5zZTtkPVFnKGQsYSxlKTtlPUJnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO0RnKGEsZSk7UmcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UGcoKSxlPU1nLnN1c3BlbnNlO2Q9UWcoZCxhLGUpO2U9QmcoZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtEZyhhLGUpO1JnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVBnKCksZD1NZy5zdXNwZW5zZTtcbmM9UWcoYyxhLGQpO2Q9QmcoYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtEZyhhLGQpO1JnKGEsYyl9fTtmdW5jdGlvbiBUZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFxZihjLGQpfHwhcWYoZSxmKTohMH1cbmZ1bmN0aW9uIFVnKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXhnKGYpOihlPUwoYik/RGY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVNnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFZnKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZTZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIFdnKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Tmc7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD14ZyhmKTooZj1MKGIpP0RmOkouY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoSGcoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKE9nKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlNnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKEhnKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgWGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFlnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1OZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gWmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uICRnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9YWgoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1iaChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9WWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPWNoKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVlnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZGgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9ZWgoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEMoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWJoKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBjPWNoKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVlnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBIYTpyZXR1cm4gYj1kaChiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoWGcoYil8fFxuVWEoYikpcmV0dXJuIGI9ZWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7WmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09SWE/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIEhhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFhnKGMpfHxVYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7WmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBIKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgR2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PUlhP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIEhhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFhnKGQpfHxVYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7WmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCxyPWcseD1nPTAsQT1udWxsO251bGwhPT1yJiZ4PGgubGVuZ3RoO3grKyl7ci5pbmRleD54PyhBPXIscj1udWxsKTpBPXIuc2libGluZzt2YXIgcD15KGUscixoW3hdLGspO2lmKG51bGw9PT1wKXtudWxsPT09ciYmKHI9QSk7YnJlYWt9YSYmXG5yJiZudWxsPT09cC5hbHRlcm5hdGUmJmIoZSxyKTtnPWYocCxnLHgpO251bGw9PT1tP2w9cDptLnNpYmxpbmc9cDttPXA7cj1BfWlmKHg9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHIpLGw7aWYobnVsbD09PXIpe2Zvcig7eDxoLmxlbmd0aDt4Kyspcj1DKGUsaFt4XSxrKSxudWxsIT09ciYmKGc9ZihyLGcseCksbnVsbD09PW0/bD1yOm0uc2libGluZz1yLG09cik7cmV0dXJuIGx9Zm9yKHI9ZChlLHIpO3g8aC5sZW5ndGg7eCsrKUE9SChyLGUseCxoW3hdLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZyLmRlbGV0ZShudWxsPT09QS5rZXk/eDpBLmtleSksZz1mKEEsZyx4KSxudWxsPT09bT9sPUE6bS5zaWJsaW5nPUEsbT1BKTthJiZyLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHRhKGUsZyxoLGspe3ZhciBsPVVhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHUoMTUwKSk7aD1sLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWw9bnVsbCxyPWcseD1nPTAsQT1udWxsLHA9aC5uZXh0KCk7bnVsbCE9PXImJiFwLmRvbmU7eCsrLHA9aC5uZXh0KCkpe3IuaW5kZXg+eD8oQT1yLHI9bnVsbCk6QT1yLnNpYmxpbmc7dmFyIHo9eShlLHIscC52YWx1ZSxrKTtpZihudWxsPT09eil7bnVsbD09PXImJihyPUEpO2JyZWFrfWEmJnImJm51bGw9PT16LmFsdGVybmF0ZSYmYihlLHIpO2c9Zih6LGcseCk7bnVsbD09PW0/bD16Om0uc2libGluZz16O209ejtyPUF9aWYocC5kb25lKXJldHVybiBjKGUsciksbDtpZihudWxsPT09cil7Zm9yKDshcC5kb25lO3grKyxwPWgubmV4dCgpKXA9QyhlLHAudmFsdWUsayksbnVsbCE9PXAmJihnPWYocCxnLHgpLG51bGw9PT1tP2w9cDptLnNpYmxpbmc9cCxtPXApO3JldHVybiBsfWZvcihyPWQoZSxyKTshcC5kb25lO3grKyxwPWgubmV4dCgpKXA9SChyLGUseCxwLnZhbHVlLGspLG51bGwhPT1wJiYoYSYmbnVsbCE9PVxucC5hbHRlcm5hdGUmJnIuZGVsZXRlKG51bGw9PT1wLmtleT94OnAua2V5KSxnPWYocCxnLHgpLG51bGw9PT1tP2w9cDptLnNpYmxpbmc9cCxtPXApO2EmJnIuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PUlhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIEdhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09SWE6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09SWE/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPVlnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLFxuayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09SWE/KGQ9ZWgoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWNoKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVlnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBIYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWRoKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT1cbnR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1iaChmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihYZyhmKSlyZXR1cm4geihhLGQsZixoKTtpZihVYShmKSlyZXR1cm4gdGEoYSxkLGYsaCk7bCYmWmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIGZoPSRnKCEwKSxnaD0kZyghMSksaGg9e30saWg9e2N1cnJlbnQ6aGh9LGpoPXtjdXJyZW50OmhofSxraD17Y3VycmVudDpoaH07ZnVuY3Rpb24gbGgoYSl7aWYoYT09PWhoKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBtaChhLGIpe0koa2gsYixhKTtJKGpoLGEsYSk7SShpaCxoaCxhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpRYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9UWIoYixjKX1HKGloLGEpO0koaWgsYixhKX1mdW5jdGlvbiBuaChhKXtHKGloLGEpO0coamgsYSk7RyhraCxhKX1mdW5jdGlvbiBvaChhKXtsaChraC5jdXJyZW50KTt2YXIgYj1saChpaC5jdXJyZW50KTt2YXIgYz1RYihiLGEudHlwZSk7YiE9PWMmJihJKGpoLGEsYSksSShpaCxjLGEpKX1mdW5jdGlvbiBwaChhKXtqaC5jdXJyZW50PT09YSYmKEcoaWgsYSksRyhqaCxhKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBxaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1qZXx8Yy5kYXRhPT09a2UpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcmgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgc2g9RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixOPUVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHRoPTAsdWg9bnVsbCxPPW51bGwsdmg9bnVsbCx3aD1udWxsLFA9bnVsbCx4aD1udWxsLHloPTAsemg9bnVsbCxBaD0wLEJoPSExLENoPW51bGwsR2g9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gSGgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighb2YoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEloKGEsYixjLGQsZSxmKXt0aD1mO3VoPWI7dmg9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7c2guY3VycmVudD1udWxsPT09dmg/Smg6S2g7Yj1jKGQsZSk7aWYoQmgpe2RvIEJoPSExLEdoKz0xLHZoPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsLHhoPXdoLHpoPVA9Tz1udWxsLHNoLmN1cnJlbnQ9S2gsYj1jKGQsZSk7d2hpbGUoQmgpO0NoPW51bGw7R2g9MH1zaC5jdXJyZW50PUxoO2E9dWg7YS5tZW1vaXplZFN0YXRlPXdoO2EuZXhwaXJhdGlvblRpbWU9eWg7YS51cGRhdGVRdWV1ZT16aDthLmVmZmVjdFRhZ3w9QWg7YT1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDt0aD0wO3hoPVA9d2g9dmg9Tz11aD1udWxsO3loPTA7emg9bnVsbDtBaD0wO2lmKGEpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1oKCl7c2guY3VycmVudD1MaDt0aD0wO3hoPVA9d2g9dmg9Tz11aD1udWxsO3loPTA7emg9bnVsbDtBaD0wO0JoPSExO0NoPW51bGw7R2g9MH1mdW5jdGlvbiBOaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD93aD1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiBPaCgpe2lmKG51bGwhPT14aClQPXhoLHhoPVAubmV4dCxPPXZoLHZoPW51bGwhPT1PP08ubmV4dDpudWxsO2Vsc2V7aWYobnVsbD09PXZoKXRocm93IEVycm9yKHUoMzEwKSk7Tz12aDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtQPW51bGw9PT1QP3doPWE6UC5uZXh0PWE7dmg9Ty5uZXh0fXJldHVybiBQfVxuZnVuY3Rpb24gUGgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBRaChhKXt2YXIgYj1PaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO2lmKDA8R2gpe3ZhciBkPWMuZGlzcGF0Y2g7aWYobnVsbCE9PUNoKXt2YXIgZT1DaC5nZXQoYyk7aWYodm9pZCAwIT09ZSl7Q2guZGVsZXRlKGMpO3ZhciBmPWIubWVtb2l6ZWRTdGF0ZTtkbyBmPWEoZixlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO29mKGYsYi5tZW1vaXplZFN0YXRlKXx8KHdnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9PT1jLmxhc3QmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWY7cmV0dXJuW2YsZF19fXJldHVybltiLm1lbW9pemVkU3RhdGUsZF19ZD1jLmxhc3Q7dmFyIGc9Yi5iYXNlVXBkYXRlO2Y9Yi5iYXNlU3RhdGU7bnVsbCE9PWc/KG51bGwhPT1kJiYoZC5uZXh0PW51bGwpLGQ9Zy5uZXh0KTpkPW51bGwhPT1kP2QubmV4dDpudWxsO2lmKG51bGwhPT1cbmQpe3ZhciBoPWU9bnVsbCxrPWQsbD0hMTtkb3t2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208dGg/KGx8fChsPSEwLGg9ZyxlPWYpLG0+eWgmJih5aD1tLEpnKHloKSkpOihJZyhtLGsuc3VzcGVuc2VDb25maWcpLGY9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGYsay5hY3Rpb24pKTtnPWs7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1kKTtsfHwoaD1nLGU9Zik7b2YoZixiLm1lbW9pemVkU3RhdGUpfHwod2c9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT1oO2IuYmFzZVN0YXRlPWU7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBSaChhKXt2YXIgYj1OaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpQaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9U2guYmluZChudWxsLHVoLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gVGgoYSl7cmV0dXJuIFFoKFBoLGEpfWZ1bmN0aW9uIFVoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09emg/KHpoPXtsYXN0RWZmZWN0Om51bGx9LHpoLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPXpoLmxhc3RFZmZlY3QsbnVsbD09PWI/emgubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsemgubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1OaCgpO0FofD1hO2UubWVtb2l6ZWRTdGF0ZT1VaChiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBXaChhLGIsYyxkKXt2YXIgZT1PaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkhoKGQsZy5kZXBzKSl7VWgoMCxjLGYsZCk7cmV0dXJufX1BaHw9YTtlLm1lbW9pemVkU3RhdGU9VWgoYixjLGYsZCl9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDE5MixhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFdoKDUxNiwxOTIsYSxiKX1cbmZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gJGgoKXt9ZnVuY3Rpb24gYWkoYSxiKXtOaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9T2goKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkhoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gU2goYSxiLGMpe2lmKCEoMjU+R2gpKXRocm93IEVycm9yKHUoMzAxKSk7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PXVofHxudWxsIT09ZCYmZD09PXVoKWlmKEJoPSEwLGE9e2V4cGlyYXRpb25UaW1lOnRoLHN1c3BlbnNlQ29uZmlnOm51bGwsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sbnVsbD09PUNoJiYoQ2g9bmV3IE1hcCksYz1DaC5nZXQoYiksdm9pZCAwPT09YylDaC5zZXQoYixhKTtlbHNle2ZvcihiPWM7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXt2YXIgZT1QZygpLGY9TWcuc3VzcGVuc2U7ZT1RZyhlLGEsZik7Zj17ZXhwaXJhdGlvblRpbWU6ZSxzdXNwZW5zZUNvbmZpZzpmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmXG4oZi5uZXh0PWgpO2cubmV4dD1mfWIubGFzdD1mO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGs9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxsPWQoayxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1sO2lmKG9mKGwsaykpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31SZyhhLGUpfX1cbnZhciBMaD17cmVhZENvbnRleHQ6eGcsdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0sSmg9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOmFpLHVzZUNvbnRleHQ6eGcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDM2LFpoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVmgoNCwzNixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9TmgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1cblthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1OaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPVNoLmJpbmQobnVsbCx1aCxhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9TmgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6UmgsdXNlRGVidWdWYWx1ZTokaCx1c2VSZXNwb25kZXI6cmgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPVJoKGEpLGQ9Y1swXSxlPWNbMV07WGgoZnVuY3Rpb24oKXtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtOLnN1c3BlbnNlPVxuY319KX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVJoKCExKSxjPWJbMF0sZD1iWzFdO3JldHVyblthaShmdW5jdGlvbihiKXtkKCEwKTtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09YT9udWxsOmE7dHJ5e2QoITEpLGIoKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsY10pLGNdfX0sS2g9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6eGcsdXNlRWZmZWN0OlloLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBXaCg0LDM2LFpoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gV2goNCwzNixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9T2goKTtiPXZvaWQgMD09PWI/XG5udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmSGgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6UWgsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIE9oKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6VGgsdXNlRGVidWdWYWx1ZTokaCx1c2VSZXNwb25kZXI6cmgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPVRoKGEpLGQ9Y1swXSxlPWNbMV07WWgoZnVuY3Rpb24oKXtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtOLnN1c3BlbnNlPWN9fSl9LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1UaCghMSksYz1iWzBdLGQ9YlsxXTtyZXR1cm5bYmkoZnVuY3Rpb24oYil7ZCghMCk7cS51bnN0YWJsZV9uZXh0KGZ1bmN0aW9uKCl7dmFyIGM9XG5OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09YT9udWxsOmE7dHJ5e2QoITEpLGIoKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsY10pLGNdfX0sY2k9bnVsbCxkaT1udWxsLGVpPSExO2Z1bmN0aW9uIGZpKGEsYil7dmFyIGM9Z2koNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIGhpKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBpaShhKXtpZihlaSl7dmFyIGI9ZGk7aWYoYil7dmFyIGM9YjtpZighaGkoYSxiKSl7Yj1yZShjLm5leHRTaWJsaW5nKTtpZighYnx8IWhpKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7ZWk9ITE7Y2k9YTtyZXR1cm59ZmkoY2ksYyl9Y2k9YTtkaT1yZShiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixlaT0hMSxjaT1hfX1mdW5jdGlvbiBqaShhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47Y2k9YX1cbmZ1bmN0aW9uIGtpKGEpe2lmKGEhPT1jaSlyZXR1cm4hMTtpZighZWkpcmV0dXJuIGppKGEpLGVpPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhb2UoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWRpO2I7KWZpKGEsYiksYj1yZShiLm5leHRTaWJsaW5nKTtqaShhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PWllKXtpZigwPT09Yil7ZGk9cmUoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09aGUmJmMhPT1rZSYmYyE9PWplfHxiKyt9YT1hLm5leHRTaWJsaW5nfWRpPW51bGx9fWVsc2UgZGk9Y2k/cmUoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBsaSgpe2RpPWNpPW51bGw7ZWk9ITF9dmFyIG1pPUVhLlJlYWN0Q3VycmVudE93bmVyLHdnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9naChiLG51bGwsYyxkKTpmaChiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBuaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dmcoYixlKTtkPUloKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXdnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksb2koYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIXFpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLHJpKGEsYixnLGQsZSxmKTthPWNoKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6cWYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gb2koYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9YWgoZyxkLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIHJpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJnFmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHdnPSExLGU8Zik/b2koYSxiLGYpOnNpKGEsYixjLGQsZil9ZnVuY3Rpb24gdGkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBzaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/RGY6Si5jdXJyZW50O2Y9RWYoYixmKTt2ZyhiLGUpO2M9SWgoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhd2cpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxvaShhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHVpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3ZnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxVZyhiLGMsZCxlKSxXZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD14ZyhsKToobD1MKGMpP0RmOkouY3VycmVudCxsPUVmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0N8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZWZyhiLGcsZCxsKTt5Zz0hMTt2YXIgeT1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXk7dmFyIEg9Yi51cGRhdGVRdWV1ZTtudWxsIT09SCYmKEhnKGIsSCxkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx5IT09a3x8Sy5jdXJyZW50fHx5Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihPZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9eWd8fFRnKGIsYyxoLGQseSxrLGwpKT8oQ3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOm1nKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXhnKGwpOihsPUwoYyk/RGY6Si5jdXJyZW50LGw9RWYoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywoQz1cblwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmVmcoYixnLGQsbCkseWc9ITEsaz1iLm1lbW9pemVkU3RhdGUseT1nLnN0YXRlPWssSD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1IJiYoSGcoYixILGQsZyxlKSx5PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT15fHxLLmN1cnJlbnR8fHlnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKE9nKGIsYyxtLGQpLHk9Yi5tZW1vaXplZFN0YXRlKSwobT15Z3x8VGcoYixjLGgsZCxrLHksbCkpPyhDfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQseSxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHksbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9eSksZy5wcm9wcz1kLGcuc3RhdGU9eSxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gdmkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gdmkoYSxiLGMsZCxlLGYpe3RpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLG9pKGEsYixmKTtkPWIuc3RhdGVOb2RlO21pLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWZoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9ZmgoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB3aShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTttaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgeGk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiB5aShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxLGIpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZpaShiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1laChudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPWVoKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1naChiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9YWgoYSxhLnBlbmRpbmdQcm9wcywwKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPWFoKGQsZSxkLmV4cGlyYXRpb25UaW1lKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT14aTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1maChiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9XG5udWxsO3JldHVybiBiLmNoaWxkPWN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPWVoKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9ZWgoZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPWZoKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24gemkoYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3VnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIEFpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQmkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnppKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXppKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkLGIpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1xaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO0FpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PXFoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1BaShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6QWkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZKZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9YWgoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9YWgoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfWZ1bmN0aW9uIENpKGEpe2EuZWZmZWN0VGFnfD00fXZhciBIaSxJaSxKaSxLaTtcbkhpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtJaT1mdW5jdGlvbigpe307XG5KaT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7bGgoaWguY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPUFiKGcsZik7ZD1BYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9S2IoZyxmKTtkPUtiKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9YWUpfVlkKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYoaWEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKGlhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiYkZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJkNpKGIpfX07S2k9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJkNpKGIpfTtcbmZ1bmN0aW9uIExpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIE1pKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRmYoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpuaChhKTtHZihhKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gcGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBHKE0sYSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBHKE0sYSksbnVsbDtjYXNlIDQ6cmV0dXJuIG5oKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gdGcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBOaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOlhhKGIpfX1cbnZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBQaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPVhhKGMpKTtudWxsIT09YyYmV2EoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmV2EoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gUWkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe1JpKGEsYyl9fWZ1bmN0aW9uIFNpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1JpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDIsMCxiKTticmVhaztjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzptZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjMpKTt9fVxuZnVuY3Rpb24gVWkoYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigwIT09KGQudGFnJmEpKXt2YXIgZT1kLmRlc3Ryb3k7ZC5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1lJiZlKCl9MCE9PShkLnRhZyZiKSYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIFZpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2kmJldpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2ZnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtSaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6U2koYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmUWkoYixjKTticmVhaztjYXNlIDU6U2koYik7YnJlYWs7Y2FzZSA0OlhpKGEsYixjKX19XG5mdW5jdGlvbiBZaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO251bGwhPT1iJiZZaShiKX1mdW5jdGlvbiBaaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uICRpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFppKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihUYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8WmkoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXt2YXIgZj01PT09ZS50YWd8fDY9PT1lLnRhZztpZihmKXt2YXIgZz1mP2Uuc3RhdGVOb2RlOmUuc3RhdGVOb2RlLmluc3RhbmNlO2lmKGMpaWYoZCl7Zj1iO3ZhciBoPWc7Zz1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaCxnKTpmLmluc2VydEJlZm9yZShoLGcpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZyxjKTtlbHNlIGQ/KGg9Yiw4PT09aC5ub2RlVHlwZT8oZj1oLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoZyxoKSk6KGY9aCxmLmFwcGVuZENoaWxkKGcpKSxoPWguX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09aCYmdm9pZCAwIT09aHx8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz1hZSkpOmIuYXBwZW5kQ2hpbGQoZyl9ZWxzZSBpZig0IT09XG5lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gWGkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihWaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoVmkoYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIGFqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6VWkoNCw4LGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbdmVdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkNiKGMsZCk7WmQoYSxlKTtiPVpkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9XZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/U2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1RiKGMsaCk6dmIoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkViKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYyxcbmQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0piKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9KYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1icmVhaztjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsTGMoYi5jb250YWluZXJJbmZvKSk7YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP2Q9ITE6KGQ9ITAsYz1iLmNoaWxkLGJqPWNnKCkpO1xuaWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PVZkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPWY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49XG5hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWNqKGIpO2JyZWFrO2Nhc2UgMTk6Y2ooYik7YnJlYWs7Y2FzZSAxNzpicmVhaztjYXNlIDIwOmJyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MykpO319ZnVuY3Rpb24gY2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgT2kpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1kai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX12YXIgZWo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7XG5mdW5jdGlvbiBmaihhLGIsYyl7Yz1CZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe2dqfHwoZ2o9ITAsaGo9ZCk7UGkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBpaihhLGIsYyl7Yz1CZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtQaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09amo/amo9bmV3IFNldChbdGhpc10pOmpqLmFkZCh0aGlzKSxQaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBraj1NYXRoLmNlaWwsbGo9RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixtaj1FYS5SZWFjdEN1cnJlbnRPd25lcixTPTAsbmo9OCxvaj0xNixwaj0zMixxaj0wLHJqPTEsc2o9Mix0aj0zLHVqPTQsdmo9NSxUPVMsVT1udWxsLFY9bnVsbCxXPTAsWD1xaix3aj1udWxsLHhqPTEwNzM3NDE4MjMseWo9MTA3Mzc0MTgyMyx6aj1udWxsLEFqPTAsQmo9ITEsYmo9MCxDaj01MDAsWT1udWxsLGdqPSExLGhqPW51bGwsamo9bnVsbCxEaj0hMSxFaj1udWxsLEZqPTkwLEdqPW51bGwsSGo9MCxJaj1udWxsLEpqPTA7ZnVuY3Rpb24gUGcoKXtyZXR1cm4oVCYob2p8cGopKSE9PVM/MTA3Mzc0MTgyMS0oY2coKS8xMHwwKTowIT09Smo/Smo6Smo9MTA3Mzc0MTgyMS0oY2coKS8xMHwwKX1cbmZ1bmN0aW9uIFFnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9ZGcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFQmb2opIT09UylyZXR1cm4gVztpZihudWxsIT09YylhPWxnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWxnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9bGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1VJiZhPT09VyYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZig1MDxIail0aHJvdyBIaj0wLElqPW51bGwsRXJyb3IodSgxODUpKTthPUtqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWRnKCk7MTA3Mzc0MTgyMz09PWI/KFQmbmopIT09UyYmKFQmKG9qfHBqKSk9PT1TP0xqKGEpOihaKGEpLFQ9PT1TJiZqZygpKTpaKGEpOyhUJjQpPT09U3x8OTghPT1jJiY5OSE9PWN8fChudWxsPT09R2o/R2o9bmV3IE1hcChbW2EsYl1dKTooYz1Hai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJkdqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24gS2ooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFU9PT1lJiYoSmcoYiksWD09PXVqJiZNaihlLFcpKSxOaihlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIE9qKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFQaihhLGIpKXJldHVybiBiO2I9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO3JldHVybiBiPmE/YjphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWhnKExqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj1PaihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9UGcoKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09WGYmJk5mKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9oZyhMai5iaW5kKG51bGwsYSkpOmdnKGQsUWouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLWNnKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBRaihhLGIpe0pqPTA7aWYoYilyZXR1cm4gYj1QZygpLFJqKGEsYiksWihhKSxudWxsO3ZhciBjPU9qKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDMyNykpO1NqKCk7YT09PVUmJmM9PT1XfHxUaihhLGMpO2lmKG51bGwhPT1WKXt2YXIgZD1UO1R8PW9qO3ZhciBlPVVqKGEpO2RvIHRyeXtWaigpO2JyZWFrfWNhdGNoKGgpe1dqKGEsaCl9d2hpbGUoMSk7cmcoKTtUPWQ7bGouY3VycmVudD1lO2lmKFg9PT1yail0aHJvdyBiPXdqLFRqKGEsYyksTWooYSxjKSxaKGEpLGI7aWYobnVsbD09PVYpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVgsVT1udWxsLGQpe2Nhc2UgcWo6Y2FzZSByajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2Ugc2o6UmooYSwyPGM/MjpjKTticmVhaztjYXNlIHRqOk1qKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1YaihlKSk7aWYoMTA3Mzc0MTgyMz09PXhqJiYoZT1iaitDai1jZygpLDEwPGUpKXtpZihCail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO1RqKGEsYyk7YnJlYWt9fWY9T2ooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1wZShZai5iaW5kKG51bGwsYSksZSk7YnJlYWt9WWooYSk7YnJlYWs7Y2FzZSB1ajpNaihhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPVhqKGUpKTtpZihCaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztUaihhLGMpO2JyZWFrfWU9T2ooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PXlqP2Q9MTAqKDEwNzM3NDE4MjEteWopLWNnKCk6MTA3Mzc0MTgyMz09PXhqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS14aiktNUUzLGU9Y2coKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmtqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPXBlKFlqLmJpbmQobnVsbCxhKSxkKTticmVha31ZaihhKTticmVhaztjYXNlIHZqOmlmKDEwNzM3NDE4MjMhPT14aiYmbnVsbCE9PXpqKXtmPXhqO3ZhciBnPXpqO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPWNnKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7TWooYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5wZShZai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fVlqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIFFqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBMaihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZihhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1iKVlqKGEpO2Vsc2V7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7U2ooKTthPT09VSYmYj09PVd8fFRqKGEsYik7aWYobnVsbCE9PVYpe3ZhciBjPVQ7VHw9b2o7dmFyIGQ9VWooYSk7ZG8gdHJ5e1pqKCk7YnJlYWt9Y2F0Y2goZSl7V2ooYSxlKX13aGlsZSgxKTtyZygpO1Q9Yztsai5jdXJyZW50PWQ7aWYoWD09PXJqKXRocm93IGM9d2osVGooYSxiKSxNaihhLGIpLFooYSksYztpZihudWxsIT09Vil0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VT1udWxsO1lqKGEpO1ooYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gYWsoKXtpZihudWxsIT09R2ope3ZhciBhPUdqO0dqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7UmooYyxhKTtaKGMpfSk7amcoKX19ZnVuY3Rpb24gYmsoYSxiKXt2YXIgYz1UO1R8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX1mdW5jdGlvbiBjayhhLGIpe3ZhciBjPVQ7VCY9LTI7VHw9bmo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX1cbmZ1bmN0aW9uIFRqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHFlKGMpKTtpZihudWxsIT09Vilmb3IoYz1WLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6dmFyIGU9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1lJiZ2b2lkIDAhPT1lJiZGZihkKTticmVhaztjYXNlIDM6bmgoZCk7R2YoZCk7YnJlYWs7Y2FzZSA1OnBoKGQpO2JyZWFrO2Nhc2UgNDpuaChkKTticmVhaztjYXNlIDEzOkcoTSxkKTticmVhaztjYXNlIDE5OkcoTSxkKTticmVhaztjYXNlIDEwOnRnKGQpfWM9Yy5yZXR1cm59VT1hO1Y9YWgoYS5jdXJyZW50LG51bGwsYik7Vz1iO1g9cWo7d2o9bnVsbDt5aj14aj0xMDczNzQxODIzO3pqPW51bGw7QWo9MDtCaj0hMX1cbmZ1bmN0aW9uIFdqKGEsYil7ZG97dHJ5e3JnKCk7TWgoKTtpZihudWxsPT09Vnx8bnVsbD09PVYucmV0dXJuKXJldHVybiBYPXJqLHdqPWIsbnVsbDthOnt2YXIgYz1hLGQ9Vi5yZXR1cm4sZT1WLGY9YjtiPVc7ZS5lZmZlY3RUYWd8PTIwNDg7ZS5maXJzdEVmZmVjdD1lLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ZiYmXCJvYmplY3RcIj09PXR5cGVvZiBmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi50aGVuKXt2YXIgZz1mLGg9MCE9PShNLmN1cnJlbnQmMSksaz1kO2Rve3ZhciBsO2lmKGw9MTM9PT1rLnRhZyl7dmFyIG09ay5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKWw9bnVsbCE9PW0uZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBDPWsubWVtb2l6ZWRQcm9wcztsPXZvaWQgMD09PUMuZmFsbGJhY2s/ITE6ITAhPT1DLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOmg/ITE6ITB9fWlmKGwpe3ZhciB5PWsudXBkYXRlUXVldWU7aWYobnVsbD09PXkpe3ZhciBIPW5ldyBTZXQ7XG5ILmFkZChnKTtrLnVwZGF0ZVF1ZXVlPUh9ZWxzZSB5LmFkZChnKTtpZigwPT09KGsubW9kZSYyKSl7ay5lZmZlY3RUYWd8PTY0O2UuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09ZS50YWcpaWYobnVsbD09PWUuYWx0ZXJuYXRlKWUudGFnPTE3O2Vsc2V7dmFyIHo9QmcoMTA3Mzc0MTgyMyxudWxsKTt6LnRhZz0yO0RnKGUseil9ZS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9Zj12b2lkIDA7ZT1iO3ZhciB0YT1jLnBpbmdDYWNoZTtudWxsPT09dGE/KHRhPWMucGluZ0NhY2hlPW5ldyBlaixmPW5ldyBTZXQsdGEuc2V0KGcsZikpOihmPXRhLmdldChnKSx2b2lkIDA9PT1mJiYoZj1uZXcgU2V0LHRhLnNldChnLGYpKSk7aWYoIWYuaGFzKGUpKXtmLmFkZChlKTt2YXIgcj1kay5iaW5kKG51bGwsYyxnLGUpO2cudGhlbihyLHIpfWsuZWZmZWN0VGFnfD00MDk2O2suZXhwaXJhdGlvblRpbWU9YjticmVhayBhfWs9ay5yZXR1cm59d2hpbGUobnVsbCE9PWspO2Y9RXJyb3IoKFdhKGUudHlwZSl8fFxuXCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK1hhKGUpKX1YIT09dmomJihYPXNqKTtmPU5pKGYsZSk7az1kO2Rve3N3aXRjaChrLnRhZyl7Y2FzZSAzOmc9ZjtrLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7dmFyIHg9ZmooayxnLGIpO0VnKGsseCk7YnJlYWsgYTtjYXNlIDE6Zz1mO3ZhciBBPWsudHlwZSxwPWsuc3RhdGVOb2RlO2lmKDA9PT0oay5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEEuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09cCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHAuY29tcG9uZW50RGlkQ2F0Y2gmJlxuKG51bGw9PT1qanx8IWpqLmhhcyhwKSkpKXtrLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7dmFyIHQ9aWooayxnLGIpO0VnKGssdCk7YnJlYWsgYX19az1rLnJldHVybn13aGlsZShudWxsIT09ayl9Vj1layhWKX1jYXRjaCh2KXtiPXY7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9ZnVuY3Rpb24gVWooKXt2YXIgYT1sai5jdXJyZW50O2xqLmN1cnJlbnQ9TGg7cmV0dXJuIG51bGw9PT1hP0xoOmF9ZnVuY3Rpb24gSWcoYSxiKXthPHhqJiYyPGEmJih4aj1hKTtudWxsIT09YiYmYTx5aiYmMjxhJiYoeWo9YSx6aj1iKX1mdW5jdGlvbiBKZyhhKXthPkFqJiYoQWo9YSl9ZnVuY3Rpb24gWmooKXtmb3IoO251bGwhPT1WOylWPWZrKFYpfWZ1bmN0aW9uIFZqKCl7Zm9yKDtudWxsIT09ViYmIU9mKCk7KVY9ZmsoVil9XG5mdW5jdGlvbiBmayhhKXt2YXIgYj1nayhhLmFsdGVybmF0ZSxhLFcpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9ZWsoYSkpO21qLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVrKGEpe1Y9YTtkb3t2YXIgYj1WLmFsdGVybmF0ZTthPVYucmV0dXJuO2lmKDA9PT0oVi5lZmZlY3RUYWcmMjA0OCkpe2E6e3ZhciBjPWI7Yj1WO3ZhciBkPVc7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6TChiLnR5cGUpJiZGZihiKTticmVhaztjYXNlIDM6bmgoYik7R2YoYik7ZT1iLnN0YXRlTm9kZTtlLnBlbmRpbmdDb250ZXh0JiYoZS5jb250ZXh0PWUucGVuZGluZ0NvbnRleHQsZS5wZW5kaW5nQ29udGV4dD1udWxsKTsobnVsbD09PWN8fG51bGw9PT1jLmNoaWxkKSYma2koYikmJkNpKGIpO0lpKGIpO2JyZWFrO2Nhc2UgNTpwaChiKTtkPWxoKGtoLmN1cnJlbnQpO3ZhciBmPWIudHlwZTtpZihudWxsIT09YyYmbnVsbCE9Yi5zdGF0ZU5vZGUpSmkoYyxiLGYsZSxkKSxjLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZSBpZihlKXt2YXIgZz1cbmxoKGloLmN1cnJlbnQpO2lmKGtpKGIpKXtlPWI7dmFyIGg9ZS5zdGF0ZU5vZGU7Yz1lLnR5cGU7dmFyIGs9ZS5tZW1vaXplZFByb3BzLGw9ZDtoW3VlXT1lO2hbdmVdPWs7Zj12b2lkIDA7ZD1oO3N3aXRjaChjKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGNjLmxlbmd0aDtoKyspRihjY1toXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpCYihkLGspO0YoXCJpbnZhbGlkXCIsZCk7JGQobCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFrLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpOyRkKGwsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpMYihkLGspLEYoXCJpbnZhbGlkXCIsZCksJGQobCxcIm9uQ2hhbmdlXCIpfVlkKGMsayk7aD1udWxsO2ZvcihmIGluIGspay5oYXNPd25Qcm9wZXJ0eShmKSYmKGc9a1tmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgZz9kLnRleHRDb250ZW50IT09ZyYmKGg9W1wiY2hpbGRyZW5cIixnXSk6XCJudW1iZXJcIj09PXR5cGVvZiBnJiZkLnRleHRDb250ZW50IT09XCJcIitnJiYoaD1bXCJjaGlsZHJlblwiLFwiXCIrZ10pOmlhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1nJiYkZChsLGYpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWIoZCk7R2IoZCxrLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5YihkKTtOYihkLGspO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5vbkNsaWNrJiZcbihkLm9uY2xpY2s9YWUpfWY9aDtlLnVwZGF0ZVF1ZXVlPWY7ZT1udWxsIT09Zj8hMDohMTtlJiZDaShiKX1lbHNle2M9YjtsPWY7az1lO2g9OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQ7Zz09PU9iLmh0bWwmJihnPVBiKGwpKTtnPT09T2IuaHRtbD9cInNjcmlwdFwiPT09bD8oaz1oLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksay5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixoPWsucmVtb3ZlQ2hpbGQoay5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBrLmlzP2g9aC5jcmVhdGVFbGVtZW50KGwse2lzOmsuaXN9KTooaD1oLmNyZWF0ZUVsZW1lbnQobCksXCJzZWxlY3RcIj09PWwmJihsPWgsay5tdWx0aXBsZT9sLm11bHRpcGxlPSEwOmsuc2l6ZSYmKGwuc2l6ZT1rLnNpemUpKSk6aD1oLmNyZWF0ZUVsZW1lbnROUyhnLGwpO2s9aDtrW3VlXT1jO2tbdmVdPWU7SGkoayxiLCExLCExKTtiLnN0YXRlTm9kZT1rO2w9ZjtjPWU7dmFyIG09ZCxDPVpkKGwsYyk7c3dpdGNoKGwpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmspO2Q9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZD0wO2Q8Y2MubGVuZ3RoO2QrKylGKGNjW2RdLGspO2Q9YzticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGspO0YoXCJsb2FkXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsayk7RihcInN1Ym1pdFwiLGspO2Q9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixrKTtkPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6QmIoayxjKTtkPUFiKGssYyk7RihcImludmFsaWRcIixrKTskZChtLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmQ9SWIoayxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6ay5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWMubXVsdGlwbGV9O2Q9bih7fSxjLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGspOyRkKG0sXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpMYihrLFxuYyk7ZD1LYihrLGMpO0YoXCJpbnZhbGlkXCIsayk7JGQobSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6ZD1jfVlkKGwsZCk7aD12b2lkIDA7Zz1sO3ZhciB5PWssSD1kO2ZvcihoIGluIEgpaWYoSC5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIHo9SFtoXTtcInN0eWxlXCI9PT1oP1dkKHkseik6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8oej16P3ouX19odG1sOnZvaWQgMCxudWxsIT16JiZTYih5LHopKTpcImNoaWxkcmVuXCI9PT1oP1wic3RyaW5nXCI9PT10eXBlb2Ygej8oXCJ0ZXh0YXJlYVwiIT09Z3x8XCJcIiE9PXopJiZUYih5LHopOlwibnVtYmVyXCI9PT10eXBlb2YgeiYmVGIoeSxcIlwiK3opOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihpYS5oYXNPd25Qcm9wZXJ0eShoKT9udWxsIT16JiYkZChtLGgpOm51bGwhPXomJnZiKHksaCx6LEMpKX1zd2l0Y2gobCl7Y2FzZSBcImlucHV0XCI6eWIoayk7XG5HYihrLGMsITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnliKGspO05iKGssYyk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWMudmFsdWUmJmsuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3ViKGMudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZD1rO2QubXVsdGlwbGU9ISFjLm11bHRpcGxlO2s9Yy52YWx1ZTtudWxsIT1rP0piKGQsISFjLm11bHRpcGxlLGssITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZKYihkLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoay5vbmNsaWNrPWFlKX0oZT1uZShmLGUpKSYmQ2koYil9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTticmVhaztjYXNlIDY6aWYoYyYmbnVsbCE9Yi5zdGF0ZU5vZGUpS2koYyxiLGMubWVtb2l6ZWRQcm9wcyxlKTtlbHNle2lmKFwic3RyaW5nXCIhPT1cbnR5cGVvZiBlJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtkPWxoKGtoLmN1cnJlbnQpO2xoKGloLmN1cnJlbnQpO2tpKGIpPyhlPWIsZj1lLnN0YXRlTm9kZSxkPWUubWVtb2l6ZWRQcm9wcyxmW3VlXT1lLChlPWYubm9kZVZhbHVlIT09ZCkmJkNpKGIpKTooZj1iLGU9KDk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShlKSxlW3VlXT1mLGIuc3RhdGVOb2RlPWUpfWJyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpHKE0sYik7ZT1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZDticmVhayBhfWU9bnVsbCE9PWU7Zj0hMTtudWxsPT09Yz92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJmtpKGIpOihkPWMubWVtb2l6ZWRTdGF0ZSxmPW51bGwhPT1kLGV8fG51bGw9PT1kfHwoZD1jLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWQmJihrPWIuZmlyc3RFZmZlY3QsXG5udWxsIT09az8oYi5maXJzdEVmZmVjdD1kLGQubmV4dEVmZmVjdD1rKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9ZCxkLm5leHRFZmZlY3Q9bnVsbCksZC5lZmZlY3RUYWc9OCkpKTtpZihlJiYhZiYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWMmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlYPT09cWomJihYPXRqKTtlbHNle2lmKFg9PT1xanx8WD09PXRqKVg9dWo7MCE9PUFqJiZudWxsIT09VSYmKE1qKFUsVyksTmooVSxBaikpfWlmKGV8fGYpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpuaChiKTtJaShiKTticmVhaztjYXNlIDEwOnRnKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TChiLnR5cGUpJiZGZihiKTticmVhaztjYXNlIDE5OkcoTSxiKTtlPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09XG5lKWJyZWFrO2Y9MCE9PShiLmVmZmVjdFRhZyY2NCk7az1lLnJlbmRlcmluZztpZihudWxsPT09aylpZihmKUxpKGUsITEpO2Vsc2V7aWYoWCE9PXFqfHxudWxsIT09YyYmMCE9PShjLmVmZmVjdFRhZyY2NCkpZm9yKGM9Yi5jaGlsZDtudWxsIT09Yzspe2s9cWgoYyk7aWYobnVsbCE9PWspe2IuZWZmZWN0VGFnfD02NDtMaShlLCExKTtmPWsudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1lLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1lLmxhc3RFZmZlY3Q7ZT1kO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWQ9ZixjPWUsZC5lZmZlY3RUYWcmPTIsZC5uZXh0RWZmZWN0PW51bGwsZC5maXJzdEVmZmVjdD1udWxsLGQubGFzdEVmZmVjdD1udWxsLGs9ZC5hbHRlcm5hdGUsbnVsbD09PWs/KGQuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGQuZXhwaXJhdGlvblRpbWU9YyxkLmNoaWxkPW51bGwsXG5kLm1lbW9pemVkUHJvcHM9bnVsbCxkLm1lbW9pemVkU3RhdGU9bnVsbCxkLnVwZGF0ZVF1ZXVlPW51bGwsZC5kZXBlbmRlbmNpZXM9bnVsbCk6KGQuY2hpbGRFeHBpcmF0aW9uVGltZT1rLmNoaWxkRXhwaXJhdGlvblRpbWUsZC5leHBpcmF0aW9uVGltZT1rLmV4cGlyYXRpb25UaW1lLGQuY2hpbGQ9ay5jaGlsZCxkLm1lbW9pemVkUHJvcHM9ay5tZW1vaXplZFByb3BzLGQubWVtb2l6ZWRTdGF0ZT1rLm1lbW9pemVkU3RhdGUsZC51cGRhdGVRdWV1ZT1rLnVwZGF0ZVF1ZXVlLGM9ay5kZXBlbmRlbmNpZXMsZC5kZXBlbmRlbmNpZXM9bnVsbD09PWM/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yy5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Yy5maXJzdENvbnRleHQscmVzcG9uZGVyczpjLnJlc3BvbmRlcnN9KSxmPWYuc2libGluZztJKE0sTS5jdXJyZW50JjF8MixiKTtiPWIuY2hpbGQ7YnJlYWsgYX1jPWMuc2libGluZ319ZWxzZXtpZighZilpZihjPXFoKGspLG51bGwhPT1jKXtpZihiLmVmZmVjdFRhZ3w9XG42NCxmPSEwLGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGIudXBkYXRlUXVldWU9ZCxiLmVmZmVjdFRhZ3w9NCksTGkoZSwhMCksbnVsbD09PWUudGFpbCYmXCJoaWRkZW5cIj09PWUudGFpbE1vZGUmJiFrLmFsdGVybmF0ZSl7Yj1iLmxhc3RFZmZlY3Q9ZS5sYXN0RWZmZWN0O251bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpO2JyZWFrfX1lbHNlIGNnKCk+ZS50YWlsRXhwaXJhdGlvbiYmMTxkJiYoYi5lZmZlY3RUYWd8PTY0LGY9ITAsTGkoZSwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9ZC0xKTtlLmlzQmFja3dhcmRzPyhrLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWspOihkPWUubGFzdCxudWxsIT09ZD9kLnNpYmxpbmc9azpiLmNoaWxkPWssZS5sYXN0PWspfWlmKG51bGwhPT1lLnRhaWwpezA9PT1lLnRhaWxFeHBpcmF0aW9uJiYoZS50YWlsRXhwaXJhdGlvbj1jZygpKzUwMCk7ZD1lLnRhaWw7ZS5yZW5kZXJpbmc9ZDtlLnRhaWw9ZC5zaWJsaW5nO1xuZS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdDtkLnNpYmxpbmc9bnVsbDtlPU0uY3VycmVudDtlPWY/ZSYxfDI6ZSYxO0koTSxlLGIpO2I9ZDticmVhayBhfWJyZWFrO2Nhc2UgMjA6YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fWI9bnVsbH1lPVY7aWYoMT09PVd8fDEhPT1lLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Y9MDtmb3IoZD1lLmNoaWxkO251bGwhPT1kOyljPWQuZXhwaXJhdGlvblRpbWUsaz1kLmNoaWxkRXhwaXJhdGlvblRpbWUsYz5mJiYoZj1jKSxrPmYmJihmPWspLGQ9ZC5zaWJsaW5nO2UuY2hpbGRFeHBpcmF0aW9uVGltZT1mfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVYuZmlyc3RFZmZlY3QpLG51bGwhPT1WLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9XG5WLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Vi5sYXN0RWZmZWN0KSwxPFYuZWZmZWN0VGFnJiYobnVsbCE9PWEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1WOmEuZmlyc3RFZmZlY3Q9VixhLmxhc3RFZmZlY3Q9VikpfWVsc2V7Yj1NaShWLFcpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1WLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7Vj1hfXdoaWxlKG51bGwhPT1WKTtYPT09cWomJihYPXZqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBYaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIFlqKGEpe3ZhciBiPWRnKCk7ZmcoOTksaWsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gaWsoYSxiKXtkbyBTaigpO3doaWxlKG51bGwhPT1Faik7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1YaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1VJiYoVj1VPW51bGwsVz0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1UO1R8PXBqO21qLmN1cnJlbnQ9bnVsbDtsZT1MZDt2YXIgZz1mZSgpO2lmKGdlKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2goRGIpe2g9bnVsbDticmVhayBhfXZhciBDPTAseT0tMSxIPS0xLHo9MCx0YT0wLHI9Zyx4PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXtyIT09aHx8MCE9PWwmJjMhPT1yLm5vZGVUeXBlfHwoeT1DK2wpO3IhPT1tfHwwIT09ayYmMyE9PXIubm9kZVR5cGV8fChIPUMrayk7Mz09PXIubm9kZVR5cGUmJihDKz1yLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT1yLmZpcnN0Q2hpbGQpKWJyZWFrO3g9cjtyPUF9Zm9yKDs7KXtpZihyPT09ZylicmVhayBiO3g9PT1oJiYrK3o9PT1sJiYoeT1DKTt4PT09bSYmKyt0YT09PWsmJihIPUMpO2lmKG51bGwhPT0oQT1yLm5leHRTaWJsaW5nKSlicmVhaztyPXg7eD1yLnBhcmVudE5vZGV9cj1BfWg9LTE9PT15fHwtMT09PUg/bnVsbDp7c3RhcnQ6eSxlbmQ6SH19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDttZT17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtMZD0hMTtZPWU7ZG8gdHJ5e2prKCl9Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcD1ZLmVmZmVjdFRhZztwJjE2JiZUYihZLnN0YXRlTm9kZSxcIlwiKTtpZihwJjEyOCl7dmFyIHQ9WS5hbHRlcm5hdGU7aWYobnVsbCE9PXQpe3ZhciB2PXQucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChwJjEwMzgpe2Nhc2UgMjokaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OiRpKFkpO1kuZWZmZWN0VGFnJj0tMzthaihZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9LTEwMjU7YWooWS5hbHRlcm5hdGUsXG5ZKTticmVhaztjYXNlIDQ6YWooWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxYaShnLGwsaCksWWkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKERiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKFksRGIpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt2PW1lO3Q9ZmUoKTtwPXYuZm9jdXNlZEVsZW07aD12LnNlbGVjdGlvblJhbmdlO2lmKHQhPT1wJiZwJiZwLm93bmVyRG9jdW1lbnQmJmVlKHAub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscCkpe251bGwhPT1oJiZnZShwKSYmKHQ9aC5zdGFydCx2PWguZW5kLHZvaWQgMD09PXYmJih2PXQpLFwic2VsZWN0aW9uU3RhcnRcImluIHA/KHAuc2VsZWN0aW9uU3RhcnQ9dCxwLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHAudmFsdWUubGVuZ3RoKSk6KHY9KHQ9cC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnQuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxcbmw9cC50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdi5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPWRlKHAsZyksbT1kZShwLGgpLGwmJm0mJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1sLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09bS5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYodD10LmNyZWF0ZVJhbmdlKCksdC5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh2LmFkZFJhbmdlKHQpLHYuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOih0LnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHYuYWRkUmFuZ2UodCkpKSkpKTt0PVtdO2Zvcih2PXA7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZ0LnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBwLmZvY3VzJiZwLmZvY3VzKCk7Zm9yKHA9MDtwPHQubGVuZ3RoO3ArKyl2PXRbcF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9bWU9bnVsbDtMZD0hIWxlO2xlPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocD1kO251bGwhPT1ZOyl7dmFyIERoPVkuZWZmZWN0VGFnO2lmKERoJjM2KXt2YXIgZGM9WS5hbHRlcm5hdGU7dD1ZO3Y9cDtzd2l0Y2godC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VWkoMTYsMzIsdCk7YnJlYWs7Y2FzZSAxOnZhciBmZD10LnN0YXRlTm9kZTtpZih0LmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kYylmZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGhrPXQuZWxlbWVudFR5cGU9PT10LnR5cGU/ZGMubWVtb2l6ZWRQcm9wczptZyh0LnR5cGUsZGMubWVtb2l6ZWRQcm9wcyk7ZmQuY29tcG9uZW50RGlkVXBkYXRlKGhrLGRjLm1lbW9pemVkU3RhdGUsXG5mZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIEVoPXQudXBkYXRlUXVldWU7bnVsbCE9PUVoJiZLZyh0LEVoLGZkLHYpO2JyZWFrO2Nhc2UgMzp2YXIgRmg9dC51cGRhdGVRdWV1ZTtpZihudWxsIT09Rmgpe2c9bnVsbDtpZihudWxsIT09dC5jaGlsZClzd2l0Y2godC5jaGlsZC50YWcpe2Nhc2UgNTpnPXQuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPXQuY2hpbGQuc3RhdGVOb2RlfUtnKHQsRmgsZyx2KX1icmVhaztjYXNlIDU6dmFyIHhrPXQuc3RhdGVOb2RlO251bGw9PT1kYyYmdC5lZmZlY3RUYWcmNCYmbmUodC50eXBlLHQubWVtb2l6ZWRQcm9wcykmJnhrLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PXQubWVtb2l6ZWRTdGF0ZSl7dmFyIERpPXQuYWx0ZXJuYXRlO2lmKG51bGwhPT1EaSl7dmFyIEVpPURpLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PUVpKXt2YXIgRmk9XG5FaS5kZWh5ZHJhdGVkO251bGwhPT1GaSYmTGMoRmkpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYzKSk7fX1pZihEaCYxMjgpe3Q9dm9pZCAwO3ZhciB4ZD1ZLnJlZjtpZihudWxsIT09eGQpe3ZhciBHaT1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTp0PUdpO2JyZWFrO2RlZmF1bHQ6dD1HaX1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeGQ/eGQodCk6eGQuY3VycmVudD10fX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9bnVsbDtZZigpO1Q9Zn1lbHNlIGEuY3VycmVudD1jO2lmKERqKURqPSExLEVqPWEsRmo9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmXG4oamo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PUlqP0hqKys6KEhqPTAsSWo9YSk6SGo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2Yga2smJmtrKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoZ2opdGhyb3cgZ2o9ITEsYT1oaixoaj1udWxsLGE7aWYoKFQmbmopIT09UylyZXR1cm4gbnVsbDtqZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIGprKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZUaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8RGp8fChEaj0hMCxnZyg5NyxmdW5jdGlvbigpe1NqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fWZ1bmN0aW9uIFNqKCl7aWYoOTAhPT1Gail7dmFyIGE9OTc8Rmo/OTc6Rmo7Rmo9OTA7cmV0dXJuIGZnKGEsbGspfX1cbmZ1bmN0aW9uIGxrKCl7aWYobnVsbD09PUVqKXJldHVybiExO3ZhciBhPUVqO0VqPW51bGw7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VDtUfD1wajtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDEyOCwwLGMpLFVpKDAsNjQsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7UmkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9VD1iO2pnKCk7cmV0dXJuITB9ZnVuY3Rpb24gbWsoYSxiLGMpe2I9TmkoYyxiKTtiPWZqKGEsYiwxMDczNzQxODIzKTtEZyhhLGIpO2E9S2ooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1cbmZ1bmN0aW9uIFJpKGEsYil7aWYoMz09PWEudGFnKW1rKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7bWsoYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09amp8fCFqai5oYXMoZCkpKXthPU5pKGIsYSk7YT1paihjLGEsMTA3Mzc0MTgyMyk7RGcoYyxhKTtjPUtqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gZGsoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtVPT09YSYmVz09PWM/WD09PXVqfHxYPT09dGomJjEwNzM3NDE4MjM9PT14aiYmY2coKS1iajxDaj9UaihhLFcpOkJqPSEwOlBqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1jJiYoYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTAsYS5maW5pc2hlZFdvcms9bnVsbCksWihhKSkpfWZ1bmN0aW9uIGRqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9UGcoKSxiPVFnKGIsYSxudWxsKSk7YT1LaihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBnaztcbmdrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpd2c9ITA7ZWxzZXtpZihkPGMpe3dnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOndpKGIpO2xpKCk7YnJlYWs7Y2FzZSA1Om9oKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6bWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnNnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB5aShhLGIsYyk7SShNLE0uY3VycmVudCZcbjEsYik7Yj1vaShhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSxiKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBCaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCxiKTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gb2koYSxiLGMpfXdnPSExfX1lbHNlIHdnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsSi5jdXJyZW50KTt2ZyhiLGMpO2U9SWgobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO01oKCk7aWYoTChkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJk9nKGIsZCxnLGEpO2UudXBkYXRlcj1TZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO1dnKGIsZCxhLGMpO2I9dmkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7VmEoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7XG5lPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPW5rKGUpO2E9bWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9c2kobnVsbCxiLGUsYSxjKTticmVhaztjYXNlIDE6Yj11aShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTE6Yj1uaShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTQ6Yj1waShudWxsLGIsZSxtZyhlLnR5cGUsYSksZCxjKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksc2koYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksdWkoYSxiLGQsZSxjKTtjYXNlIDM6d2koYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6XG5udWxsO0hnKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpbGkoKSxiPW9pKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlkaT1yZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGNpPWIsZT1laT0hMDtpZihlKWZvcihjPWdoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxsaSgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIG9oKGIpLG51bGw9PT1hJiZpaShiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG9lKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZvZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx0aShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9XG5iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZpaShiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHlpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIG1oKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWZoKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG5pKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7XG5lPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtzZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9b2YoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj1vaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9QmcoYyxudWxsKSxsLnRhZz0yLERnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9XG5jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3VnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix2ZyhiLGMpLGU9eGcoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtcbmNhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bWcoZSxiLnBlbmRpbmdQcm9wcyksZj1tZyhlLnR5cGUsZikscGkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHJpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsSmYoYikpOmE9ITEsdmcoYixjKSxVZyhiLGQsZSxjKSxXZyhiLGQsZSxjKSx2aShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEJpKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIGtrPW51bGwsV2k9bnVsbDtcbmZ1bmN0aW9uIG9rKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO2trPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O1dpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gcGsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBnaShhLGIsYyxkKXtyZXR1cm4gbmV3IHBrKGEsYixjLGQpfVxuZnVuY3Rpb24gcWkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBuayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gcWkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PU9hKXJldHVybiAxMTtpZihhPT09UmEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gYWgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1naShhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGNoKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlxaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm4gZWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBOYTpnPTg7ZXw9NzticmVhaztjYXNlIEphOmc9ODtlfD0xO2JyZWFrO2Nhc2UgS2E6cmV0dXJuIGE9Z2koMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1LYSxhLnR5cGU9S2EsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBQYTpyZXR1cm4gYT1naSgxMyxjLGIsZSksYS50eXBlPVBhLGEuZWxlbWVudFR5cGU9UGEsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBRYTpyZXR1cm4gYT1naSgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1RYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgTGE6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBNYTpnPTk7YnJlYWsgYTtjYXNlIE9hOmc9MTE7YnJlYWsgYTtjYXNlIFJhOmc9MTQ7YnJlYWsgYTtjYXNlIFNhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1naShnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGVoKGEsYixjLGQpe2E9Z2koNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGJoKGEsYixjKXthPWdpKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGRoKGEsYixjKXtiPWdpKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gcWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIFBqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24gTmooYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBSaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIHJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPVBnKCksZz1NZy5zdXNwZW5zZTtmPVFnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGVjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1CZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO0RnKGUsYik7UmcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBzayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIHRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiB1ayhhLGIpe3RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZ0ayhhLGIpfVxuZnVuY3Rpb24gdmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IHFrKGEsYixjKSxlPWdpKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO2Fbd2VdPWQuY3VycmVudDtjJiYwIT09YiYmd2MoOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfXZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXtyayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLHZvaWQgMD09PWI/bnVsbDpiKX07dmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9dm9pZCAwPT09YT9udWxsOmEsZD1iLmNvbnRhaW5lckluZm87cmsobnVsbCxiLG51bGwsZnVuY3Rpb24oKXtkW3dlXT1udWxsO251bGwhPT1jJiZjKCl9KX07XG5mdW5jdGlvbiB3ayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24geWsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyB2ayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHprKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9c2soZyk7aC5jYWxsKGEpfX1yayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXlrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPXNrKGcpO2suY2FsbChhKX19Y2soZnVuY3Rpb24oKXtyayhiLGcsYSxlKX0pfXJldHVybiBzayhnKX1mdW5jdGlvbiBBayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOkhhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuamM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9bGcoUGcoKSwxNTAsMTAwKTtSZyhhLGIpO3VrKGEsYil9fTtrYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXtQZygpO3ZhciBiPWtnKys7UmcoYSxiKTt1ayhhLGIpfX07bGM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9UGcoKTtiPVFnKGIsYSxudWxsKTtSZyhhLGIpO3VrKGEsYil9fTtcblphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6RWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPXllKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt6YihkKTtFYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkpiKGEsISFjLm11bHRpcGxlLGIsITEpfX07ZWI9Yms7XG5mYj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1UO1R8PTQ7dHJ5e3JldHVybiBmZyg5OCxhLmJpbmQobnVsbCxiLGMsZCkpfWZpbmFsbHl7VD1lLFQ9PT1TJiZqZygpfX07Z2I9ZnVuY3Rpb24oKXsoVCYoMXxvanxwaikpPT09UyYmKGFrKCksU2ooKSl9O2hiPWZ1bmN0aW9uKGEsYil7dmFyIGM9VDtUfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1Q9YyxUPT09UyYmamcoKX19O2Z1bmN0aW9uIEJrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIEFrKGEsYixudWxsLGMpfVxudmFyIENrPXtjcmVhdGVQb3J0YWw6QmssZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1pYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe2lmKCF3ayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiB6ayhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtpZighd2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gemsobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe2lmKCF3ayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO1xuaWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gemsoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7aWYoIXdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhjayhmdW5jdGlvbigpe3prKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt3ZV09bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gQmsuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOmJrLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVQ7VHw9MTt0cnl7cmV0dXJuIGZnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1Q9YyxqZygpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbQ2MsXG54ZSx5ZSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUsZmEsU2MsZnVuY3Rpb24oYSl7eWEoYSxSYyl9LGNiLGRiLFBkLEJhLFNqLHtjdXJyZW50OiExfV19fTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBvayhuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWljKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6RmMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMi4wXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgRGs9e2RlZmF1bHQ6Q2t9LEVrPURrJiZDa3x8RGs7bW9kdWxlLmV4cG9ydHM9RWsuZGVmYXVsdHx8RWs7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE4LjBcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9TWF0aC5mbG9vcigoYy0xKS8yKSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtcbiIsIlxyXG4vKipcclxuICogRXhwb3NlIGBFbWl0dGVyYC5cclxuICovXHJcblxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IEVtaXR0ZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbml0aWFsaXplIGEgbmV3IGBFbWl0dGVyYC5cclxuICpcclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBFbWl0dGVyKG9iaikge1xyXG4gIGlmIChvYmopIHJldHVybiBtaXhpbihvYmopO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIE1peGluIHRoZSBlbWl0dGVyIHByb3BlcnRpZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcclxuICogQHJldHVybiB7T2JqZWN0fVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcclxuICBmb3IgKHZhciBrZXkgaW4gRW1pdHRlci5wcm90b3R5cGUpIHtcclxuICAgIG9ialtrZXldID0gRW1pdHRlci5wcm90b3R5cGVba2V5XTtcclxuICB9XHJcbiAgcmV0dXJuIG9iajtcclxufVxyXG5cclxuLyoqXHJcbiAqIExpc3RlbiBvbiB0aGUgZ2l2ZW4gYGV2ZW50YCB3aXRoIGBmbmAuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxyXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLm9uID1cclxuRW1pdHRlci5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50LCBmbil7XHJcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xyXG4gICh0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdID0gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSB8fCBbXSlcclxuICAgIC5wdXNoKGZuKTtcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBBZGRzIGFuIGBldmVudGAgbGlzdGVuZXIgdGhhdCB3aWxsIGJlIGludm9rZWQgYSBzaW5nbGVcclxuICogdGltZSB0aGVuIGF1dG9tYXRpY2FsbHkgcmVtb3ZlZC5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXHJcbiAqIEByZXR1cm4ge0VtaXR0ZXJ9XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuRW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKGV2ZW50LCBmbil7XHJcbiAgZnVuY3Rpb24gb24oKSB7XHJcbiAgICB0aGlzLm9mZihldmVudCwgb24pO1xyXG4gICAgZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxuICB9XHJcblxyXG4gIG9uLmZuID0gZm47XHJcbiAgdGhpcy5vbihldmVudCwgb24pO1xyXG4gIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZ2l2ZW4gY2FsbGJhY2sgZm9yIGBldmVudGAgb3IgYWxsXHJcbiAqIHJlZ2lzdGVyZWQgY2FsbGJhY2tzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cclxuICogQHJldHVybiB7RW1pdHRlcn1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5FbWl0dGVyLnByb3RvdHlwZS5vZmYgPVxyXG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9XHJcbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9XHJcbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCwgZm4pe1xyXG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcclxuXHJcbiAgLy8gYWxsXHJcbiAgaWYgKDAgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xyXG4gICAgdGhpcy5fY2FsbGJhY2tzID0ge307XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8vIHNwZWNpZmljIGV2ZW50XHJcbiAgdmFyIGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XHJcbiAgaWYgKCFjYWxsYmFja3MpIHJldHVybiB0aGlzO1xyXG5cclxuICAvLyByZW1vdmUgYWxsIGhhbmRsZXJzXHJcbiAgaWYgKDEgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xyXG4gICAgZGVsZXRlIHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8vIHJlbW92ZSBzcGVjaWZpYyBoYW5kbGVyXHJcbiAgdmFyIGNiO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjYiA9IGNhbGxiYWNrc1tpXTtcclxuICAgIGlmIChjYiA9PT0gZm4gfHwgY2IuZm4gPT09IGZuKSB7XHJcbiAgICAgIGNhbGxiYWNrcy5zcGxpY2UoaSwgMSk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gUmVtb3ZlIGV2ZW50IHNwZWNpZmljIGFycmF5cyBmb3IgZXZlbnQgdHlwZXMgdGhhdCBub1xyXG4gIC8vIG9uZSBpcyBzdWJzY3JpYmVkIGZvciB0byBhdm9pZCBtZW1vcnkgbGVhay5cclxuICBpZiAoY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgZGVsZXRlIHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBFbWl0IGBldmVudGAgd2l0aCB0aGUgZ2l2ZW4gYXJncy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEBwYXJhbSB7TWl4ZWR9IC4uLlxyXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbihldmVudCl7XHJcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xyXG5cclxuICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSlcclxuICAgICwgY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XTtcclxuXHJcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xyXG4gIH1cclxuXHJcbiAgaWYgKGNhbGxiYWNrcykge1xyXG4gICAgY2FsbGJhY2tzID0gY2FsbGJhY2tzLnNsaWNlKDApO1xyXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNhbGxiYWNrcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xyXG4gICAgICBjYWxsYmFja3NbaV0uYXBwbHkodGhpcywgYXJncyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBSZXR1cm4gYXJyYXkgb2YgY2FsbGJhY2tzIGZvciBgZXZlbnRgLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcclxuICogQHJldHVybiB7QXJyYXl9XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuRW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzID0gZnVuY3Rpb24oZXZlbnQpe1xyXG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcclxuICByZXR1cm4gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSB8fCBbXTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBDaGVjayBpZiB0aGlzIGVtaXR0ZXIgaGFzIGBldmVudGAgaGFuZGxlcnMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxyXG4gKiBAcmV0dXJuIHtCb29sZWFufVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLmhhc0xpc3RlbmVycyA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuICByZXR1cm4gISEgdGhpcy5saXN0ZW5lcnMoZXZlbnQpLmxlbmd0aDtcclxufTtcclxuIiwibW9kdWxlLmV4cG9ydHMgPSBzdHJpbmdpZnlcbnN0cmluZ2lmeS5kZWZhdWx0ID0gc3RyaW5naWZ5XG5zdHJpbmdpZnkuc3RhYmxlID0gZGV0ZXJtaW5pc3RpY1N0cmluZ2lmeVxuc3RyaW5naWZ5LnN0YWJsZVN0cmluZ2lmeSA9IGRldGVybWluaXN0aWNTdHJpbmdpZnlcblxudmFyIGFyciA9IFtdXG52YXIgcmVwbGFjZXJTdGFjayA9IFtdXG5cbi8vIFJlZ3VsYXIgc3RyaW5naWZ5XG5mdW5jdGlvbiBzdHJpbmdpZnkgKG9iaiwgcmVwbGFjZXIsIHNwYWNlcikge1xuICBkZWNpcmMob2JqLCAnJywgW10sIHVuZGVmaW5lZClcbiAgdmFyIHJlc1xuICBpZiAocmVwbGFjZXJTdGFjay5sZW5ndGggPT09IDApIHtcbiAgICByZXMgPSBKU09OLnN0cmluZ2lmeShvYmosIHJlcGxhY2VyLCBzcGFjZXIpXG4gIH0gZWxzZSB7XG4gICAgcmVzID0gSlNPTi5zdHJpbmdpZnkob2JqLCByZXBsYWNlR2V0dGVyVmFsdWVzKHJlcGxhY2VyKSwgc3BhY2VyKVxuICB9XG4gIHdoaWxlIChhcnIubGVuZ3RoICE9PSAwKSB7XG4gICAgdmFyIHBhcnQgPSBhcnIucG9wKClcbiAgICBpZiAocGFydC5sZW5ndGggPT09IDQpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwYXJ0WzBdLCBwYXJ0WzFdLCBwYXJ0WzNdKVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJ0WzBdW3BhcnRbMV1dID0gcGFydFsyXVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5mdW5jdGlvbiBkZWNpcmMgKHZhbCwgaywgc3RhY2ssIHBhcmVudCkge1xuICB2YXIgaVxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgdmFsICE9PSBudWxsKSB7XG4gICAgZm9yIChpID0gMDsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoc3RhY2tbaV0gPT09IHZhbCkge1xuICAgICAgICB2YXIgcHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwYXJlbnQsIGspXG4gICAgICAgIGlmIChwcm9wZXJ0eURlc2NyaXB0b3IuZ2V0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAocHJvcGVydHlEZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSkge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHBhcmVudCwgaywgeyB2YWx1ZTogJ1tDaXJjdWxhcl0nIH0pXG4gICAgICAgICAgICBhcnIucHVzaChbcGFyZW50LCBrLCB2YWwsIHByb3BlcnR5RGVzY3JpcHRvcl0pXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcGxhY2VyU3RhY2sucHVzaChbdmFsLCBrXSlcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFyZW50W2tdID0gJ1tDaXJjdWxhcl0nXG4gICAgICAgICAgYXJyLnB1c2goW3BhcmVudCwgaywgdmFsXSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICB9XG4gICAgc3RhY2sucHVzaCh2YWwpXG4gICAgLy8gT3B0aW1pemUgZm9yIEFycmF5cy4gQmlnIGFycmF5cyBjb3VsZCBraWxsIHRoZSBwZXJmb3JtYW5jZSBvdGhlcndpc2UhXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IHZhbC5sZW5ndGg7IGkrKykge1xuICAgICAgICBkZWNpcmModmFsW2ldLCBpLCBzdGFjaywgdmFsKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbClcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzW2ldXG4gICAgICAgIGRlY2lyYyh2YWxba2V5XSwga2V5LCBzdGFjaywgdmFsKVxuICAgICAgfVxuICAgIH1cbiAgICBzdGFjay5wb3AoKVxuICB9XG59XG5cbi8vIFN0YWJsZS1zdHJpbmdpZnlcbmZ1bmN0aW9uIGNvbXBhcmVGdW5jdGlvbiAoYSwgYikge1xuICBpZiAoYSA8IGIpIHtcbiAgICByZXR1cm4gLTFcbiAgfVxuICBpZiAoYSA+IGIpIHtcbiAgICByZXR1cm4gMVxuICB9XG4gIHJldHVybiAwXG59XG5cbmZ1bmN0aW9uIGRldGVybWluaXN0aWNTdHJpbmdpZnkgKG9iaiwgcmVwbGFjZXIsIHNwYWNlcikge1xuICB2YXIgdG1wID0gZGV0ZXJtaW5pc3RpY0RlY2lyYyhvYmosICcnLCBbXSwgdW5kZWZpbmVkKSB8fCBvYmpcbiAgdmFyIHJlc1xuICBpZiAocmVwbGFjZXJTdGFjay5sZW5ndGggPT09IDApIHtcbiAgICByZXMgPSBKU09OLnN0cmluZ2lmeSh0bXAsIHJlcGxhY2VyLCBzcGFjZXIpXG4gIH0gZWxzZSB7XG4gICAgcmVzID0gSlNPTi5zdHJpbmdpZnkodG1wLCByZXBsYWNlR2V0dGVyVmFsdWVzKHJlcGxhY2VyKSwgc3BhY2VyKVxuICB9XG4gIHdoaWxlIChhcnIubGVuZ3RoICE9PSAwKSB7XG4gICAgdmFyIHBhcnQgPSBhcnIucG9wKClcbiAgICBpZiAocGFydC5sZW5ndGggPT09IDQpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwYXJ0WzBdLCBwYXJ0WzFdLCBwYXJ0WzNdKVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJ0WzBdW3BhcnRbMV1dID0gcGFydFsyXVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGRldGVybWluaXN0aWNEZWNpcmMgKHZhbCwgaywgc3RhY2ssIHBhcmVudCkge1xuICB2YXIgaVxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgdmFsICE9PSBudWxsKSB7XG4gICAgZm9yIChpID0gMDsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoc3RhY2tbaV0gPT09IHZhbCkge1xuICAgICAgICB2YXIgcHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwYXJlbnQsIGspXG4gICAgICAgIGlmIChwcm9wZXJ0eURlc2NyaXB0b3IuZ2V0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAocHJvcGVydHlEZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSkge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHBhcmVudCwgaywgeyB2YWx1ZTogJ1tDaXJjdWxhcl0nIH0pXG4gICAgICAgICAgICBhcnIucHVzaChbcGFyZW50LCBrLCB2YWwsIHByb3BlcnR5RGVzY3JpcHRvcl0pXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcGxhY2VyU3RhY2sucHVzaChbdmFsLCBrXSlcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFyZW50W2tdID0gJ1tDaXJjdWxhcl0nXG4gICAgICAgICAgYXJyLnB1c2goW3BhcmVudCwgaywgdmFsXSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWwudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgc3RhY2sucHVzaCh2YWwpXG4gICAgLy8gT3B0aW1pemUgZm9yIEFycmF5cy4gQmlnIGFycmF5cyBjb3VsZCBraWxsIHRoZSBwZXJmb3JtYW5jZSBvdGhlcndpc2UhXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IHZhbC5sZW5ndGg7IGkrKykge1xuICAgICAgICBkZXRlcm1pbmlzdGljRGVjaXJjKHZhbFtpXSwgaSwgc3RhY2ssIHZhbClcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ3JlYXRlIGEgdGVtcG9yYXJ5IG9iamVjdCBpbiB0aGUgcmVxdWlyZWQgd2F5XG4gICAgICB2YXIgdG1wID0ge31cbiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXModmFsKS5zb3J0KGNvbXBhcmVGdW5jdGlvbilcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzW2ldXG4gICAgICAgIGRldGVybWluaXN0aWNEZWNpcmModmFsW2tleV0sIGtleSwgc3RhY2ssIHZhbClcbiAgICAgICAgdG1wW2tleV0gPSB2YWxba2V5XVxuICAgICAgfVxuICAgICAgaWYgKHBhcmVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGFyci5wdXNoKFtwYXJlbnQsIGssIHZhbF0pXG4gICAgICAgIHBhcmVudFtrXSA9IHRtcFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRtcFxuICAgICAgfVxuICAgIH1cbiAgICBzdGFjay5wb3AoKVxuICB9XG59XG5cbi8vIHdyYXBzIHJlcGxhY2VyIGZ1bmN0aW9uIHRvIGhhbmRsZSB2YWx1ZXMgd2UgY291bGRuJ3QgcmVwbGFjZVxuLy8gYW5kIG1hcmsgdGhlbSBhcyBbQ2lyY3VsYXJdXG5mdW5jdGlvbiByZXBsYWNlR2V0dGVyVmFsdWVzIChyZXBsYWNlcikge1xuICByZXBsYWNlciA9IHJlcGxhY2VyICE9PSB1bmRlZmluZWQgPyByZXBsYWNlciA6IGZ1bmN0aW9uIChrLCB2KSB7IHJldHVybiB2IH1cbiAgcmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbCkge1xuICAgIGlmIChyZXBsYWNlclN0YWNrLmxlbmd0aCA+IDApIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVwbGFjZXJTdGFjay5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGFydCA9IHJlcGxhY2VyU3RhY2tbaV1cbiAgICAgICAgaWYgKHBhcnRbMV0gPT09IGtleSAmJiBwYXJ0WzBdID09PSB2YWwpIHtcbiAgICAgICAgICB2YWwgPSAnW0NpcmN1bGFyXSdcbiAgICAgICAgICByZXBsYWNlclN0YWNrLnNwbGljZShpLCAxKVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWwpXG4gIH1cbn1cbiIsIi8qKlxuICogTW9kdWxlIG9mIG1peGVkLWluIGZ1bmN0aW9ucyBzaGFyZWQgYmV0d2VlbiBub2RlIGFuZCBjbGllbnQgY29kZVxuICovXG5jb25zdCBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXMtb2JqZWN0Jyk7XG5cbi8qKlxuICogRXhwb3NlIGBSZXF1ZXN0QmFzZWAuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBSZXF1ZXN0QmFzZTtcblxuLyoqXG4gKiBJbml0aWFsaXplIGEgbmV3IGBSZXF1ZXN0QmFzZWAuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBSZXF1ZXN0QmFzZShvYmopIHtcbiAgaWYgKG9iaikgcmV0dXJuIG1peGluKG9iaik7XG59XG5cbi8qKlxuICogTWl4aW4gdGhlIHByb3RvdHlwZSBwcm9wZXJ0aWVzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIG1peGluKG9iaikge1xuICBmb3IgKGNvbnN0IGtleSBpbiBSZXF1ZXN0QmFzZS5wcm90b3R5cGUpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKFJlcXVlc3RCYXNlLnByb3RvdHlwZSwga2V5KSlcbiAgICAgIG9ialtrZXldID0gUmVxdWVzdEJhc2UucHJvdG90eXBlW2tleV07XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG4vKipcbiAqIENsZWFyIHByZXZpb3VzIHRpbWVvdXQuXG4gKlxuICogQHJldHVybiB7UmVxdWVzdH0gZm9yIGNoYWluaW5nXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5jbGVhclRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKTtcbiAgY2xlYXJUaW1lb3V0KHRoaXMuX3Jlc3BvbnNlVGltZW91dFRpbWVyKTtcbiAgY2xlYXJUaW1lb3V0KHRoaXMuX3VwbG9hZFRpbWVvdXRUaW1lcik7XG4gIGRlbGV0ZSB0aGlzLl90aW1lcjtcbiAgZGVsZXRlIHRoaXMuX3Jlc3BvbnNlVGltZW91dFRpbWVyO1xuICBkZWxldGUgdGhpcy5fdXBsb2FkVGltZW91dFRpbWVyO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogT3ZlcnJpZGUgZGVmYXVsdCByZXNwb25zZSBib2R5IHBhcnNlclxuICpcbiAqIFRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgdG8gY29udmVydCBpbmNvbWluZyBkYXRhIGludG8gcmVxdWVzdC5ib2R5XG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24oZm4pIHtcbiAgdGhpcy5fcGFyc2VyID0gZm47XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgZm9ybWF0IG9mIGJpbmFyeSByZXNwb25zZSBib2R5LlxuICogSW4gYnJvd3NlciB2YWxpZCBmb3JtYXRzIGFyZSAnYmxvYicgYW5kICdhcnJheWJ1ZmZlcicsXG4gKiB3aGljaCByZXR1cm4gQmxvYiBhbmQgQXJyYXlCdWZmZXIsIHJlc3BlY3RpdmVseS5cbiAqXG4gKiBJbiBOb2RlIGFsbCB2YWx1ZXMgcmVzdWx0IGluIEJ1ZmZlci5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgIHJlcS5nZXQoJy8nKVxuICogICAgICAgIC5yZXNwb25zZVR5cGUoJ2Jsb2InKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWxcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUucmVzcG9uc2VUeXBlID0gZnVuY3Rpb24odmFsKSB7XG4gIHRoaXMuX3Jlc3BvbnNlVHlwZSA9IHZhbDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIE92ZXJyaWRlIGRlZmF1bHQgcmVxdWVzdCBib2R5IHNlcmlhbGl6ZXJcbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIHRvIGNvbnZlcnQgZGF0YSBzZXQgdmlhIC5zZW5kIG9yIC5hdHRhY2ggaW50byBwYXlsb2FkIHRvIHNlbmRcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuc2VyaWFsaXplID0gZnVuY3Rpb24oZm4pIHtcbiAgdGhpcy5fc2VyaWFsaXplciA9IGZuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0IHRpbWVvdXRzLlxuICpcbiAqIC0gcmVzcG9uc2UgdGltZW91dCBpcyB0aW1lIGJldHdlZW4gc2VuZGluZyByZXF1ZXN0IGFuZCByZWNlaXZpbmcgdGhlIGZpcnN0IGJ5dGUgb2YgdGhlIHJlc3BvbnNlLiBJbmNsdWRlcyBETlMgYW5kIGNvbm5lY3Rpb24gdGltZS5cbiAqIC0gZGVhZGxpbmUgaXMgdGhlIHRpbWUgZnJvbSBzdGFydCBvZiB0aGUgcmVxdWVzdCB0byByZWNlaXZpbmcgcmVzcG9uc2UgYm9keSBpbiBmdWxsLiBJZiB0aGUgZGVhZGxpbmUgaXMgdG9vIHNob3J0IGxhcmdlIGZpbGVzIG1heSBub3QgbG9hZCBhdCBhbGwgb24gc2xvdyBjb25uZWN0aW9ucy5cbiAqIC0gdXBsb2FkIGlzIHRoZSB0aW1lICBzaW5jZSBsYXN0IGJpdCBvZiBkYXRhIHdhcyBzZW50IG9yIHJlY2VpdmVkLiBUaGlzIHRpbWVvdXQgd29ya3Mgb25seSBpZiBkZWFkbGluZSB0aW1lb3V0IGlzIG9mZlxuICpcbiAqIFZhbHVlIG9mIDAgb3IgZmFsc2UgbWVhbnMgbm8gdGltZW91dC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcnxPYmplY3R9IG1zIG9yIHtyZXNwb25zZSwgZGVhZGxpbmV9XG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnRpbWVvdXQgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucyB8fCB0eXBlb2Ygb3B0aW9ucyAhPT0gJ29iamVjdCcpIHtcbiAgICB0aGlzLl90aW1lb3V0ID0gb3B0aW9ucztcbiAgICB0aGlzLl9yZXNwb25zZVRpbWVvdXQgPSAwO1xuICAgIHRoaXMuX3VwbG9hZFRpbWVvdXQgPSAwO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZm9yIChjb25zdCBvcHRpb24gaW4gb3B0aW9ucykge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3B0aW9ucywgb3B0aW9uKSkge1xuICAgICAgc3dpdGNoIChvcHRpb24pIHtcbiAgICAgICAgY2FzZSAnZGVhZGxpbmUnOlxuICAgICAgICAgIHRoaXMuX3RpbWVvdXQgPSBvcHRpb25zLmRlYWRsaW5lO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyZXNwb25zZSc6XG4gICAgICAgICAgdGhpcy5fcmVzcG9uc2VUaW1lb3V0ID0gb3B0aW9ucy5yZXNwb25zZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAndXBsb2FkJzpcbiAgICAgICAgICB0aGlzLl91cGxvYWRUaW1lb3V0ID0gb3B0aW9ucy51cGxvYWQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgY29uc29sZS53YXJuKCdVbmtub3duIHRpbWVvdXQgb3B0aW9uJywgb3B0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0IG51bWJlciBvZiByZXRyeSBhdHRlbXB0cyBvbiBlcnJvci5cbiAqXG4gKiBGYWlsZWQgcmVxdWVzdHMgd2lsbCBiZSByZXRyaWVkICdjb3VudCcgdGltZXMgaWYgdGltZW91dCBvciBlcnIuY29kZSA+PSA1MDAuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGNvdW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnJldHJ5ID0gZnVuY3Rpb24oY291bnQsIGZuKSB7XG4gIC8vIERlZmF1bHQgdG8gMSBpZiBubyBjb3VudCBwYXNzZWQgb3IgdHJ1ZVxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCB8fCBjb3VudCA9PT0gdHJ1ZSkgY291bnQgPSAxO1xuICBpZiAoY291bnQgPD0gMCkgY291bnQgPSAwO1xuICB0aGlzLl9tYXhSZXRyaWVzID0gY291bnQ7XG4gIHRoaXMuX3JldHJpZXMgPSAwO1xuICB0aGlzLl9yZXRyeUNhbGxiYWNrID0gZm47XG4gIHJldHVybiB0aGlzO1xufTtcblxuY29uc3QgRVJST1JfQ09ERVMgPSBbJ0VDT05OUkVTRVQnLCAnRVRJTUVET1VUJywgJ0VBRERSSU5GTycsICdFU09DS0VUVElNRURPVVQnXTtcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSByZXF1ZXN0IHNob3VsZCBiZSByZXRyaWVkLlxuICogKEJvcnJvd2VkIGZyb20gc2VnbWVudGlvL3N1cGVyYWdlbnQtcmV0cnkpXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyIGFuIGVycm9yXG4gKiBAcGFyYW0ge1Jlc3BvbnNlfSBbcmVzXSByZXNwb25zZVxuICogQHJldHVybnMge0Jvb2xlYW59IGlmIHNlZ21lbnQgc2hvdWxkIGJlIHJldHJpZWRcbiAqL1xuUmVxdWVzdEJhc2UucHJvdG90eXBlLl9zaG91bGRSZXRyeSA9IGZ1bmN0aW9uKGVyciwgcmVzKSB7XG4gIGlmICghdGhpcy5fbWF4UmV0cmllcyB8fCB0aGlzLl9yZXRyaWVzKysgPj0gdGhpcy5fbWF4UmV0cmllcykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICh0aGlzLl9yZXRyeUNhbGxiYWNrKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG92ZXJyaWRlID0gdGhpcy5fcmV0cnlDYWxsYmFjayhlcnIsIHJlcyk7XG4gICAgICBpZiAob3ZlcnJpZGUgPT09IHRydWUpIHJldHVybiB0cnVlO1xuICAgICAgaWYgKG92ZXJyaWRlID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgLy8gdW5kZWZpbmVkIGZhbGxzIGJhY2sgdG8gZGVmYXVsdHNcbiAgICB9IGNhdGNoIChlcnJfKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycl8pO1xuICAgIH1cbiAgfVxuXG4gIGlmIChyZXMgJiYgcmVzLnN0YXR1cyAmJiByZXMuc3RhdHVzID49IDUwMCAmJiByZXMuc3RhdHVzICE9PSA1MDEpIHJldHVybiB0cnVlO1xuICBpZiAoZXJyKSB7XG4gICAgaWYgKGVyci5jb2RlICYmIEVSUk9SX0NPREVTLmluY2x1ZGVzKGVyci5jb2RlKSkgcmV0dXJuIHRydWU7XG4gICAgLy8gU3VwZXJhZ2VudCB0aW1lb3V0XG4gICAgaWYgKGVyci50aW1lb3V0ICYmIGVyci5jb2RlID09PSAnRUNPTk5BQk9SVEVEJykgcmV0dXJuIHRydWU7XG4gICAgaWYgKGVyci5jcm9zc0RvbWFpbikgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59O1xuXG4vKipcbiAqIFJldHJ5IHJlcXVlc3RcbiAqXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5fcmV0cnkgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5jbGVhclRpbWVvdXQoKTtcblxuICAvLyBub2RlXG4gIGlmICh0aGlzLnJlcSkge1xuICAgIHRoaXMucmVxID0gbnVsbDtcbiAgICB0aGlzLnJlcSA9IHRoaXMucmVxdWVzdCgpO1xuICB9XG5cbiAgdGhpcy5fYWJvcnRlZCA9IGZhbHNlO1xuICB0aGlzLnRpbWVkb3V0ID0gZmFsc2U7XG4gIHRoaXMudGltZWRvdXRFcnJvciA9IG51bGw7XG5cbiAgcmV0dXJuIHRoaXMuX2VuZCgpO1xufTtcblxuLyoqXG4gKiBQcm9taXNlIHN1cHBvcnRcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVqZWN0XVxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUudGhlbiA9IGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICBpZiAoIXRoaXMuX2Z1bGxmaWxsZWRQcm9taXNlKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgaWYgKHRoaXMuX2VuZENhbGxlZCkge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAnV2FybmluZzogc3VwZXJhZ2VudCByZXF1ZXN0IHdhcyBzZW50IHR3aWNlLCBiZWNhdXNlIGJvdGggLmVuZCgpIGFuZCAudGhlbigpIHdlcmUgY2FsbGVkLiBOZXZlciBjYWxsIC5lbmQoKSBpZiB5b3UgdXNlIHByb21pc2VzJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLl9mdWxsZmlsbGVkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHNlbGYub24oJ2Fib3J0JywgKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy50aW1lZG91dCAmJiB0aGlzLnRpbWVkb3V0RXJyb3IpIHtcbiAgICAgICAgICByZWplY3QodGhpcy50aW1lZG91dEVycm9yKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0Fib3J0ZWQnKTtcbiAgICAgICAgZXJyLmNvZGUgPSAnQUJPUlRFRCc7XG4gICAgICAgIGVyci5zdGF0dXMgPSB0aGlzLnN0YXR1cztcbiAgICAgICAgZXJyLm1ldGhvZCA9IHRoaXMubWV0aG9kO1xuICAgICAgICBlcnIudXJsID0gdGhpcy51cmw7XG4gICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgfSk7XG4gICAgICBzZWxmLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgaWYgKGVycikgcmVqZWN0KGVycik7XG4gICAgICAgIGVsc2UgcmVzb2x2ZShyZXMpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5fZnVsbGZpbGxlZFByb21pc2UudGhlbihyZXNvbHZlLCByZWplY3QpO1xufTtcblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLmNhdGNoID0gZnVuY3Rpb24oY2IpIHtcbiAgcmV0dXJuIHRoaXMudGhlbih1bmRlZmluZWQsIGNiKTtcbn07XG5cbi8qKlxuICogQWxsb3cgZm9yIGV4dGVuc2lvblxuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbihmbikge1xuICBmbih0aGlzKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUub2sgPSBmdW5jdGlvbihjYikge1xuICBpZiAodHlwZW9mIGNiICE9PSAnZnVuY3Rpb24nKSB0aHJvdyBuZXcgRXJyb3IoJ0NhbGxiYWNrIHJlcXVpcmVkJyk7XG4gIHRoaXMuX29rQ2FsbGJhY2sgPSBjYjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuX2lzUmVzcG9uc2VPSyA9IGZ1bmN0aW9uKHJlcykge1xuICBpZiAoIXJlcykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICh0aGlzLl9va0NhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMuX29rQ2FsbGJhY2socmVzKTtcbiAgfVxuXG4gIHJldHVybiByZXMuc3RhdHVzID49IDIwMCAmJiByZXMuc3RhdHVzIDwgMzAwO1xufTtcblxuLyoqXG4gKiBHZXQgcmVxdWVzdCBoZWFkZXIgYGZpZWxkYC5cbiAqIENhc2UtaW5zZW5zaXRpdmUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGZpZWxkXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbihmaWVsZCkge1xuICByZXR1cm4gdGhpcy5faGVhZGVyW2ZpZWxkLnRvTG93ZXJDYXNlKCldO1xufTtcblxuLyoqXG4gKiBHZXQgY2FzZS1pbnNlbnNpdGl2ZSBoZWFkZXIgYGZpZWxkYCB2YWx1ZS5cbiAqIFRoaXMgaXMgYSBkZXByZWNhdGVkIGludGVybmFsIEFQSS4gVXNlIGAuZ2V0KGZpZWxkKWAgaW5zdGVhZC5cbiAqXG4gKiAoZ2V0SGVhZGVyIGlzIG5vIGxvbmdlciB1c2VkIGludGVybmFsbHkgYnkgdGhlIHN1cGVyYWdlbnQgY29kZSBiYXNlKVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZFxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5nZXRIZWFkZXIgPSBSZXF1ZXN0QmFzZS5wcm90b3R5cGUuZ2V0O1xuXG4vKipcbiAqIFNldCBoZWFkZXIgYGZpZWxkYCB0byBgdmFsYCwgb3IgbXVsdGlwbGUgZmllbGRzIHdpdGggb25lIG9iamVjdC5cbiAqIENhc2UtaW5zZW5zaXRpdmUuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgICByZXEuZ2V0KCcvJylcbiAqICAgICAgICAuc2V0KCdBY2NlcHQnLCAnYXBwbGljYXRpb24vanNvbicpXG4gKiAgICAgICAgLnNldCgnWC1BUEktS2V5JywgJ2Zvb2JhcicpXG4gKiAgICAgICAgLmVuZChjYWxsYmFjayk7XG4gKlxuICogICAgICByZXEuZ2V0KCcvJylcbiAqICAgICAgICAuc2V0KHsgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsICdYLUFQSS1LZXknOiAnZm9vYmFyJyB9KVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE9iamVjdH0gZmllbGRcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWxcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24oZmllbGQsIHZhbCkge1xuICBpZiAoaXNPYmplY3QoZmllbGQpKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gZmllbGQpIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmllbGQsIGtleSkpXG4gICAgICAgIHRoaXMuc2V0KGtleSwgZmllbGRba2V5XSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICB0aGlzLl9oZWFkZXJbZmllbGQudG9Mb3dlckNhc2UoKV0gPSB2YWw7XG4gIHRoaXMuaGVhZGVyW2ZpZWxkXSA9IHZhbDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBoZWFkZXIgYGZpZWxkYC5cbiAqIENhc2UtaW5zZW5zaXRpdmUuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiAgICAgIHJlcS5nZXQoJy8nKVxuICogICAgICAgIC51bnNldCgnVXNlci1BZ2VudCcpXG4gKiAgICAgICAgLmVuZChjYWxsYmFjayk7XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGZpZWxkIGZpZWxkIG5hbWVcbiAqL1xuUmVxdWVzdEJhc2UucHJvdG90eXBlLnVuc2V0ID0gZnVuY3Rpb24oZmllbGQpIHtcbiAgZGVsZXRlIHRoaXMuX2hlYWRlcltmaWVsZC50b0xvd2VyQ2FzZSgpXTtcbiAgZGVsZXRlIHRoaXMuaGVhZGVyW2ZpZWxkXTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFdyaXRlIHRoZSBmaWVsZCBgbmFtZWAgYW5kIGB2YWxgLCBvciBtdWx0aXBsZSBmaWVsZHMgd2l0aCBvbmUgb2JqZWN0XG4gKiBmb3IgXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIgcmVxdWVzdCBib2RpZXMuXG4gKlxuICogYGBgIGpzXG4gKiByZXF1ZXN0LnBvc3QoJy91cGxvYWQnKVxuICogICAuZmllbGQoJ2ZvbycsICdiYXInKVxuICogICAuZW5kKGNhbGxiYWNrKTtcbiAqXG4gKiByZXF1ZXN0LnBvc3QoJy91cGxvYWQnKVxuICogICAuZmllbGQoeyBmb286ICdiYXInLCBiYXo6ICdxdXgnIH0pXG4gKiAgIC5lbmQoY2FsbGJhY2spO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8T2JqZWN0fSBuYW1lIG5hbWUgb2YgZmllbGRcbiAqIEBwYXJhbSB7U3RyaW5nfEJsb2J8RmlsZXxCdWZmZXJ8ZnMuUmVhZFN0cmVhbX0gdmFsIHZhbHVlIG9mIGZpZWxkXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5maWVsZCA9IGZ1bmN0aW9uKG5hbWUsIHZhbCkge1xuICAvLyBuYW1lIHNob3VsZCBiZSBlaXRoZXIgYSBzdHJpbmcgb3IgYW4gb2JqZWN0LlxuICBpZiAobmFtZSA9PT0gbnVsbCB8fCB1bmRlZmluZWQgPT09IG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJy5maWVsZChuYW1lLCB2YWwpIG5hbWUgY2FuIG5vdCBiZSBlbXB0eScpO1xuICB9XG5cbiAgaWYgKHRoaXMuX2RhdGEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIi5maWVsZCgpIGNhbid0IGJlIHVzZWQgaWYgLnNlbmQoKSBpcyB1c2VkLiBQbGVhc2UgdXNlIG9ubHkgLnNlbmQoKSBvciBvbmx5IC5maWVsZCgpICYgLmF0dGFjaCgpXCJcbiAgICApO1xuICB9XG5cbiAgaWYgKGlzT2JqZWN0KG5hbWUpKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gbmFtZSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuYW1lLCBrZXkpKVxuICAgICAgICB0aGlzLmZpZWxkKGtleSwgbmFtZVtrZXldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICBmb3IgKGNvbnN0IGkgaW4gdmFsKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbCwgaSkpXG4gICAgICAgIHRoaXMuZmllbGQobmFtZSwgdmFsW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHZhbCBzaG91bGQgYmUgZGVmaW5lZCBub3dcbiAgaWYgKHZhbCA9PT0gbnVsbCB8fCB1bmRlZmluZWQgPT09IHZhbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignLmZpZWxkKG5hbWUsIHZhbCkgdmFsIGNhbiBub3QgYmUgZW1wdHknKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsID09PSAnYm9vbGVhbicpIHtcbiAgICB2YWwgPSBTdHJpbmcodmFsKTtcbiAgfVxuXG4gIHRoaXMuX2dldEZvcm1EYXRhKCkuYXBwZW5kKG5hbWUsIHZhbCk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBBYm9ydCB0aGUgcmVxdWVzdCwgYW5kIGNsZWFyIHBvdGVudGlhbCB0aW1lb3V0LlxuICpcbiAqIEByZXR1cm4ge1JlcXVlc3R9IHJlcXVlc3RcbiAqIEBhcGkgcHVibGljXG4gKi9cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5fYWJvcnRlZCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgdGhpcy5fYWJvcnRlZCA9IHRydWU7XG4gIGlmICh0aGlzLnhocikgdGhpcy54aHIuYWJvcnQoKTsgLy8gYnJvd3NlclxuICBpZiAodGhpcy5yZXEpIHRoaXMucmVxLmFib3J0KCk7IC8vIG5vZGVcbiAgdGhpcy5jbGVhclRpbWVvdXQoKTtcbiAgdGhpcy5lbWl0KCdhYm9ydCcpO1xuICByZXR1cm4gdGhpcztcbn07XG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5fYXV0aCA9IGZ1bmN0aW9uKHVzZXIsIHBhc3MsIG9wdGlvbnMsIGJhc2U2NEVuY29kZXIpIHtcbiAgc3dpdGNoIChvcHRpb25zLnR5cGUpIHtcbiAgICBjYXNlICdiYXNpYyc6XG4gICAgICB0aGlzLnNldCgnQXV0aG9yaXphdGlvbicsIGBCYXNpYyAke2Jhc2U2NEVuY29kZXIoYCR7dXNlcn06JHtwYXNzfWApfWApO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdhdXRvJzpcbiAgICAgIHRoaXMudXNlcm5hbWUgPSB1c2VyO1xuICAgICAgdGhpcy5wYXNzd29yZCA9IHBhc3M7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2JlYXJlcic6IC8vIHVzYWdlIHdvdWxkIGJlIC5hdXRoKGFjY2Vzc1Rva2VuLCB7IHR5cGU6ICdiZWFyZXInIH0pXG4gICAgICB0aGlzLnNldCgnQXV0aG9yaXphdGlvbicsIGBCZWFyZXIgJHt1c2VyfWApO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEVuYWJsZSB0cmFuc21pc3Npb24gb2YgY29va2llcyB3aXRoIHgtZG9tYWluIHJlcXVlc3RzLlxuICpcbiAqIE5vdGUgdGhhdCBmb3IgdGhpcyB0byB3b3JrIHRoZSBvcmlnaW4gbXVzdCBub3QgYmVcbiAqIHVzaW5nIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCIgd2l0aCBhIHdpbGRjYXJkLFxuICogYW5kIGFsc28gbXVzdCBzZXQgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsc1wiXG4gKiB0byBcInRydWVcIi5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS53aXRoQ3JlZGVudGlhbHMgPSBmdW5jdGlvbihvbikge1xuICAvLyBUaGlzIGlzIGJyb3dzZXItb25seSBmdW5jdGlvbmFsaXR5LiBOb2RlIHNpZGUgaXMgbm8tb3AuXG4gIGlmIChvbiA9PT0gdW5kZWZpbmVkKSBvbiA9IHRydWU7XG4gIHRoaXMuX3dpdGhDcmVkZW50aWFscyA9IG9uO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0IHRoZSBtYXggcmVkaXJlY3RzIHRvIGBuYC4gRG9lcyBub3RoaW5nIGluIGJyb3dzZXIgWEhSIGltcGxlbWVudGF0aW9uLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBuXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnJlZGlyZWN0cyA9IGZ1bmN0aW9uKG4pIHtcbiAgdGhpcy5fbWF4UmVkaXJlY3RzID0gbjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIE1heGltdW0gc2l6ZSBvZiBidWZmZXJlZCByZXNwb25zZSBib2R5LCBpbiBieXRlcy4gQ291bnRzIHVuY29tcHJlc3NlZCBzaXplLlxuICogRGVmYXVsdCAyMDBNQi5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbiBudW1iZXIgb2YgYnl0ZXNcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICovXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUubWF4UmVzcG9uc2VTaXplID0gZnVuY3Rpb24obikge1xuICBpZiAodHlwZW9mIG4gIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBhcmd1bWVudCcpO1xuICB9XG5cbiAgdGhpcy5fbWF4UmVzcG9uc2VTaXplID0gbjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIENvbnZlcnQgdG8gYSBwbGFpbiBqYXZhc2NyaXB0IG9iamVjdCAobm90IEpTT04gc3RyaW5nKSBvZiBzY2FsYXIgcHJvcGVydGllcy5cbiAqIE5vdGUgYXMgdGhpcyBtZXRob2QgaXMgZGVzaWduZWQgdG8gcmV0dXJuIGEgdXNlZnVsIG5vbi10aGlzIHZhbHVlLFxuICogaXQgY2Fubm90IGJlIGNoYWluZWQuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSBkZXNjcmliaW5nIG1ldGhvZCwgdXJsLCBhbmQgZGF0YSBvZiB0aGlzIHJlcXVlc3RcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIG1ldGhvZDogdGhpcy5tZXRob2QsXG4gICAgdXJsOiB0aGlzLnVybCxcbiAgICBkYXRhOiB0aGlzLl9kYXRhLFxuICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlclxuICB9O1xufTtcblxuLyoqXG4gKiBTZW5kIGBkYXRhYCBhcyB0aGUgcmVxdWVzdCBib2R5LCBkZWZhdWx0aW5nIHRoZSBgLnR5cGUoKWAgdG8gXCJqc29uXCIgd2hlblxuICogYW4gb2JqZWN0IGlzIGdpdmVuLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICAgIC8vIG1hbnVhbCBqc29uXG4gKiAgICAgICByZXF1ZXN0LnBvc3QoJy91c2VyJylcbiAqICAgICAgICAgLnR5cGUoJ2pzb24nKVxuICogICAgICAgICAuc2VuZCgne1wibmFtZVwiOlwidGpcIn0nKVxuICogICAgICAgICAuZW5kKGNhbGxiYWNrKVxuICpcbiAqICAgICAgIC8vIGF1dG8ganNvblxuICogICAgICAgcmVxdWVzdC5wb3N0KCcvdXNlcicpXG4gKiAgICAgICAgIC5zZW5kKHsgbmFtZTogJ3RqJyB9KVxuICogICAgICAgICAuZW5kKGNhbGxiYWNrKVxuICpcbiAqICAgICAgIC8vIG1hbnVhbCB4LXd3dy1mb3JtLXVybGVuY29kZWRcbiAqICAgICAgIHJlcXVlc3QucG9zdCgnL3VzZXInKVxuICogICAgICAgICAudHlwZSgnZm9ybScpXG4gKiAgICAgICAgIC5zZW5kKCduYW1lPXRqJylcbiAqICAgICAgICAgLmVuZChjYWxsYmFjaylcbiAqXG4gKiAgICAgICAvLyBhdXRvIHgtd3d3LWZvcm0tdXJsZW5jb2RlZFxuICogICAgICAgcmVxdWVzdC5wb3N0KCcvdXNlcicpXG4gKiAgICAgICAgIC50eXBlKCdmb3JtJylcbiAqICAgICAgICAgLnNlbmQoeyBuYW1lOiAndGonIH0pXG4gKiAgICAgICAgIC5lbmQoY2FsbGJhY2spXG4gKlxuICogICAgICAgLy8gZGVmYXVsdHMgdG8geC13d3ctZm9ybS11cmxlbmNvZGVkXG4gKiAgICAgIHJlcXVlc3QucG9zdCgnL3VzZXInKVxuICogICAgICAgIC5zZW5kKCduYW1lPXRvYmknKVxuICogICAgICAgIC5zZW5kKCdzcGVjaWVzPWZlcnJldCcpXG4gKiAgICAgICAgLmVuZChjYWxsYmFjaylcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IGRhdGFcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbihkYXRhKSB7XG4gIGNvbnN0IGlzT2JqID0gaXNPYmplY3QoZGF0YSk7XG4gIGxldCB0eXBlID0gdGhpcy5faGVhZGVyWydjb250ZW50LXR5cGUnXTtcblxuICBpZiAodGhpcy5fZm9ybURhdGEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIi5zZW5kKCkgY2FuJ3QgYmUgdXNlZCBpZiAuYXR0YWNoKCkgb3IgLmZpZWxkKCkgaXMgdXNlZC4gUGxlYXNlIHVzZSBvbmx5IC5zZW5kKCkgb3Igb25seSAuZmllbGQoKSAmIC5hdHRhY2goKVwiXG4gICAgKTtcbiAgfVxuXG4gIGlmIChpc09iaiAmJiAhdGhpcy5fZGF0YSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICB0aGlzLl9kYXRhID0gW107XG4gICAgfSBlbHNlIGlmICghdGhpcy5faXNIb3N0KGRhdGEpKSB7XG4gICAgICB0aGlzLl9kYXRhID0ge307XG4gICAgfVxuICB9IGVsc2UgaWYgKGRhdGEgJiYgdGhpcy5fZGF0YSAmJiB0aGlzLl9pc0hvc3QodGhpcy5fZGF0YSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBtZXJnZSB0aGVzZSBzZW5kIGNhbGxzXCIpO1xuICB9XG5cbiAgLy8gbWVyZ2VcbiAgaWYgKGlzT2JqICYmIGlzT2JqZWN0KHRoaXMuX2RhdGEpKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpKVxuICAgICAgICB0aGlzLl9kYXRhW2tleV0gPSBkYXRhW2tleV07XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgIC8vIGRlZmF1bHQgdG8geC13d3ctZm9ybS11cmxlbmNvZGVkXG4gICAgaWYgKCF0eXBlKSB0aGlzLnR5cGUoJ2Zvcm0nKTtcbiAgICB0eXBlID0gdGhpcy5faGVhZGVyWydjb250ZW50LXR5cGUnXTtcbiAgICBpZiAodHlwZSA9PT0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcpIHtcbiAgICAgIHRoaXMuX2RhdGEgPSB0aGlzLl9kYXRhID8gYCR7dGhpcy5fZGF0YX0mJHtkYXRhfWAgOiBkYXRhO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9kYXRhID0gKHRoaXMuX2RhdGEgfHwgJycpICsgZGF0YTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gIH1cblxuICBpZiAoIWlzT2JqIHx8IHRoaXMuX2lzSG9zdChkYXRhKSkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gZGVmYXVsdCB0byBqc29uXG4gIGlmICghdHlwZSkgdGhpcy50eXBlKCdqc29uJyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTb3J0IGBxdWVyeXN0cmluZ2AgYnkgdGhlIHNvcnQgZnVuY3Rpb25cbiAqXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgICAgLy8gZGVmYXVsdCBvcmRlclxuICogICAgICAgcmVxdWVzdC5nZXQoJy91c2VyJylcbiAqICAgICAgICAgLnF1ZXJ5KCduYW1lPU5pY2snKVxuICogICAgICAgICAucXVlcnkoJ3NlYXJjaD1NYW5ueScpXG4gKiAgICAgICAgIC5zb3J0UXVlcnkoKVxuICogICAgICAgICAuZW5kKGNhbGxiYWNrKVxuICpcbiAqICAgICAgIC8vIGN1c3RvbWl6ZWQgc29ydCBmdW5jdGlvblxuICogICAgICAgcmVxdWVzdC5nZXQoJy91c2VyJylcbiAqICAgICAgICAgLnF1ZXJ5KCduYW1lPU5pY2snKVxuICogICAgICAgICAucXVlcnkoJ3NlYXJjaD1NYW5ueScpXG4gKiAgICAgICAgIC5zb3J0UXVlcnkoZnVuY3Rpb24oYSwgYil7XG4gKiAgICAgICAgICAgcmV0dXJuIGEubGVuZ3RoIC0gYi5sZW5ndGg7XG4gKiAgICAgICAgIH0pXG4gKiAgICAgICAgIC5lbmQoY2FsbGJhY2spXG4gKlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHNvcnRcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuc29ydFF1ZXJ5ID0gZnVuY3Rpb24oc29ydCkge1xuICAvLyBfc29ydCBkZWZhdWx0IHRvIHRydWUgYnV0IG90aGVyd2lzZSBjYW4gYmUgYSBmdW5jdGlvbiBvciBib29sZWFuXG4gIHRoaXMuX3NvcnQgPSB0eXBlb2Ygc29ydCA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogc29ydDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIENvbXBvc2UgcXVlcnlzdHJpbmcgdG8gYXBwZW5kIHRvIHJlcS51cmxcbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuUmVxdWVzdEJhc2UucHJvdG90eXBlLl9maW5hbGl6ZVF1ZXJ5U3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gdGhpcy5fcXVlcnkuam9pbignJicpO1xuICBpZiAocXVlcnkpIHtcbiAgICB0aGlzLnVybCArPSAodGhpcy51cmwuaW5jbHVkZXMoJz8nKSA/ICcmJyA6ICc/JykgKyBxdWVyeTtcbiAgfVxuXG4gIHRoaXMuX3F1ZXJ5Lmxlbmd0aCA9IDA7IC8vIE1ha2VzIHRoZSBjYWxsIGlkZW1wb3RlbnRcblxuICBpZiAodGhpcy5fc29ydCkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy51cmwuaW5kZXhPZignPycpO1xuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICBjb25zdCBxdWVyeUFyciA9IHRoaXMudXJsLnNsaWNlKGluZGV4ICsgMSkuc3BsaXQoJyYnKTtcbiAgICAgIGlmICh0eXBlb2YgdGhpcy5fc29ydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBxdWVyeUFyci5zb3J0KHRoaXMuX3NvcnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcXVlcnlBcnIuc29ydCgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnVybCA9IHRoaXMudXJsLnNsaWNlKDAsIGluZGV4KSArICc/JyArIHF1ZXJ5QXJyLmpvaW4oJyYnKTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIEZvciBiYWNrd2FyZHMgY29tcGF0IG9ubHlcblJlcXVlc3RCYXNlLnByb3RvdHlwZS5fYXBwZW5kUXVlcnlTdHJpbmcgPSAoKSA9PiB7XG4gIGNvbnNvbGUud2FybignVW5zdXBwb3J0ZWQnKTtcbn07XG5cbi8qKlxuICogSW52b2tlIGNhbGxiYWNrIHdpdGggdGltZW91dCBlcnJvci5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuX3RpbWVvdXRFcnJvciA9IGZ1bmN0aW9uKHJlYXNvbiwgdGltZW91dCwgZXJybm8pIHtcbiAgaWYgKHRoaXMuX2Fib3J0ZWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoYCR7cmVhc29uICsgdGltZW91dH1tcyBleGNlZWRlZGApO1xuICBlcnIudGltZW91dCA9IHRpbWVvdXQ7XG4gIGVyci5jb2RlID0gJ0VDT05OQUJPUlRFRCc7XG4gIGVyci5lcnJubyA9IGVycm5vO1xuICB0aGlzLnRpbWVkb3V0ID0gdHJ1ZTtcbiAgdGhpcy50aW1lZG91dEVycm9yID0gZXJyO1xuICB0aGlzLmFib3J0KCk7XG4gIHRoaXMuY2FsbGJhY2soZXJyKTtcbn07XG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5fc2V0VGltZW91dHMgPSBmdW5jdGlvbigpIHtcbiAgY29uc3Qgc2VsZiA9IHRoaXM7XG5cbiAgLy8gZGVhZGxpbmVcbiAgaWYgKHRoaXMuX3RpbWVvdXQgJiYgIXRoaXMuX3RpbWVyKSB7XG4gICAgdGhpcy5fdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHNlbGYuX3RpbWVvdXRFcnJvcignVGltZW91dCBvZiAnLCBzZWxmLl90aW1lb3V0LCAnRVRJTUUnKTtcbiAgICB9LCB0aGlzLl90aW1lb3V0KTtcbiAgfVxuXG4gIC8vIHJlc3BvbnNlIHRpbWVvdXRcbiAgaWYgKHRoaXMuX3Jlc3BvbnNlVGltZW91dCAmJiAhdGhpcy5fcmVzcG9uc2VUaW1lb3V0VGltZXIpIHtcbiAgICB0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2VsZi5fdGltZW91dEVycm9yKFxuICAgICAgICAnUmVzcG9uc2UgdGltZW91dCBvZiAnLFxuICAgICAgICBzZWxmLl9yZXNwb25zZVRpbWVvdXQsXG4gICAgICAgICdFVElNRURPVVQnXG4gICAgICApO1xuICAgIH0sIHRoaXMuX3Jlc3BvbnNlVGltZW91dCk7XG4gIH1cbn07XG4iLCIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbi8qKlxuICogRXhwb3NlIGBSZXNwb25zZUJhc2VgLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVzcG9uc2VCYXNlO1xuXG4vKipcbiAqIEluaXRpYWxpemUgYSBuZXcgYFJlc3BvbnNlQmFzZWAuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBSZXNwb25zZUJhc2Uob2JqKSB7XG4gIGlmIChvYmopIHJldHVybiBtaXhpbihvYmopO1xufVxuXG4vKipcbiAqIE1peGluIHRoZSBwcm90b3R5cGUgcHJvcGVydGllcy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gUmVzcG9uc2VCYXNlLnByb3RvdHlwZSkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoUmVzcG9uc2VCYXNlLnByb3RvdHlwZSwga2V5KSlcbiAgICAgIG9ialtrZXldID0gUmVzcG9uc2VCYXNlLnByb3RvdHlwZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBHZXQgY2FzZS1pbnNlbnNpdGl2ZSBgZmllbGRgIHZhbHVlLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZFxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXNwb25zZUJhc2UucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKGZpZWxkKSB7XG4gIHJldHVybiB0aGlzLmhlYWRlcltmaWVsZC50b0xvd2VyQ2FzZSgpXTtcbn07XG5cbi8qKlxuICogU2V0IGhlYWRlciByZWxhdGVkIHByb3BlcnRpZXM6XG4gKlxuICogICAtIGAudHlwZWAgdGhlIGNvbnRlbnQgdHlwZSB3aXRob3V0IHBhcmFtc1xuICpcbiAqIEEgcmVzcG9uc2Ugb2YgXCJDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLThcIlxuICogd2lsbCBwcm92aWRlIHlvdSB3aXRoIGEgYC50eXBlYCBvZiBcInRleHQvcGxhaW5cIi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaGVhZGVyXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXNwb25zZUJhc2UucHJvdG90eXBlLl9zZXRIZWFkZXJQcm9wZXJ0aWVzID0gZnVuY3Rpb24oaGVhZGVyKSB7XG4gIC8vIFRPRE86IG1vYXIhXG4gIC8vIFRPRE86IG1ha2UgdGhpcyBhIHV0aWxcblxuICAvLyBjb250ZW50LXR5cGVcbiAgY29uc3QgY3QgPSBoZWFkZXJbJ2NvbnRlbnQtdHlwZSddIHx8ICcnO1xuICB0aGlzLnR5cGUgPSB1dGlscy50eXBlKGN0KTtcblxuICAvLyBwYXJhbXNcbiAgY29uc3QgcGFyYW1zID0gdXRpbHMucGFyYW1zKGN0KTtcbiAgZm9yIChjb25zdCBrZXkgaW4gcGFyYW1zKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwYXJhbXMsIGtleSkpXG4gICAgICB0aGlzW2tleV0gPSBwYXJhbXNba2V5XTtcbiAgfVxuXG4gIHRoaXMubGlua3MgPSB7fTtcblxuICAvLyBsaW5rc1xuICB0cnkge1xuICAgIGlmIChoZWFkZXIubGluaykge1xuICAgICAgdGhpcy5saW5rcyA9IHV0aWxzLnBhcnNlTGlua3MoaGVhZGVyLmxpbmspO1xuICAgIH1cbiAgfSBjYXRjaCB7XG4gICAgLy8gaWdub3JlXG4gIH1cbn07XG5cbi8qKlxuICogU2V0IGZsYWdzIHN1Y2ggYXMgYC5va2AgYmFzZWQgb24gYHN0YXR1c2AuXG4gKlxuICogRm9yIGV4YW1wbGUgYSAyeHggcmVzcG9uc2Ugd2lsbCBnaXZlIHlvdSBhIGAub2tgIG9mIF9fdHJ1ZV9fXG4gKiB3aGVyZWFzIDV4eCB3aWxsIGJlIF9fZmFsc2VfXyBhbmQgYC5lcnJvcmAgd2lsbCBiZSBfX3RydWVfXy4gVGhlXG4gKiBgLmNsaWVudEVycm9yYCBhbmQgYC5zZXJ2ZXJFcnJvcmAgYXJlIGFsc28gYXZhaWxhYmxlIHRvIGJlIG1vcmVcbiAqIHNwZWNpZmljLCBhbmQgYC5zdGF0dXNUeXBlYCBpcyB0aGUgY2xhc3Mgb2YgZXJyb3IgcmFuZ2luZyBmcm9tIDEuLjVcbiAqIHNvbWV0aW1lcyB1c2VmdWwgZm9yIG1hcHBpbmcgcmVzcG9uZCBjb2xvcnMgZXRjLlxuICpcbiAqIFwic3VnYXJcIiBwcm9wZXJ0aWVzIGFyZSBhbHNvIGRlZmluZWQgZm9yIGNvbW1vbiBjYXNlcy4gQ3VycmVudGx5IHByb3ZpZGluZzpcbiAqXG4gKiAgIC0gLm5vQ29udGVudFxuICogICAtIC5iYWRSZXF1ZXN0XG4gKiAgIC0gLnVuYXV0aG9yaXplZFxuICogICAtIC5ub3RBY2NlcHRhYmxlXG4gKiAgIC0gLm5vdEZvdW5kXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHN0YXR1c1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVzcG9uc2VCYXNlLnByb3RvdHlwZS5fc2V0U3RhdHVzUHJvcGVydGllcyA9IGZ1bmN0aW9uKHN0YXR1cykge1xuICBjb25zdCB0eXBlID0gKHN0YXR1cyAvIDEwMCkgfCAwO1xuXG4gIC8vIHN0YXR1cyAvIGNsYXNzXG4gIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1cztcbiAgdGhpcy5zdGF0dXMgPSB0aGlzLnN0YXR1c0NvZGU7XG4gIHRoaXMuc3RhdHVzVHlwZSA9IHR5cGU7XG5cbiAgLy8gYmFzaWNzXG4gIHRoaXMuaW5mbyA9IHR5cGUgPT09IDE7XG4gIHRoaXMub2sgPSB0eXBlID09PSAyO1xuICB0aGlzLnJlZGlyZWN0ID0gdHlwZSA9PT0gMztcbiAgdGhpcy5jbGllbnRFcnJvciA9IHR5cGUgPT09IDQ7XG4gIHRoaXMuc2VydmVyRXJyb3IgPSB0eXBlID09PSA1O1xuICB0aGlzLmVycm9yID0gdHlwZSA9PT0gNCB8fCB0eXBlID09PSA1ID8gdGhpcy50b0Vycm9yKCkgOiBmYWxzZTtcblxuICAvLyBzdWdhclxuICB0aGlzLmNyZWF0ZWQgPSBzdGF0dXMgPT09IDIwMTtcbiAgdGhpcy5hY2NlcHRlZCA9IHN0YXR1cyA9PT0gMjAyO1xuICB0aGlzLm5vQ29udGVudCA9IHN0YXR1cyA9PT0gMjA0O1xuICB0aGlzLmJhZFJlcXVlc3QgPSBzdGF0dXMgPT09IDQwMDtcbiAgdGhpcy51bmF1dGhvcml6ZWQgPSBzdGF0dXMgPT09IDQwMTtcbiAgdGhpcy5ub3RBY2NlcHRhYmxlID0gc3RhdHVzID09PSA0MDY7XG4gIHRoaXMuZm9yYmlkZGVuID0gc3RhdHVzID09PSA0MDM7XG4gIHRoaXMubm90Rm91bmQgPSBzdGF0dXMgPT09IDQwNDtcbiAgdGhpcy51bnByb2Nlc3NhYmxlRW50aXR5ID0gc3RhdHVzID09PSA0MjI7XG59O1xuIiwiLyoqXG4gKiBSZXR1cm4gdGhlIG1pbWUgdHlwZSBmb3IgdGhlIGdpdmVuIGBzdHJgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMudHlwZSA9IHN0ciA9PiBzdHIuc3BsaXQoLyAqOyAqLykuc2hpZnQoKTtcblxuLyoqXG4gKiBSZXR1cm4gaGVhZGVyIGZpZWxkIHBhcmFtZXRlcnMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7T2JqZWN0fVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5wYXJhbXMgPSBzdHIgPT5cbiAgc3RyLnNwbGl0KC8gKjsgKi8pLnJlZHVjZSgob2JqLCBzdHIpID0+IHtcbiAgICBjb25zdCBwYXJ0cyA9IHN0ci5zcGxpdCgvICo9ICovKTtcbiAgICBjb25zdCBrZXkgPSBwYXJ0cy5zaGlmdCgpO1xuICAgIGNvbnN0IHZhbCA9IHBhcnRzLnNoaWZ0KCk7XG5cbiAgICBpZiAoa2V5ICYmIHZhbCkgb2JqW2tleV0gPSB2YWw7XG4gICAgcmV0dXJuIG9iajtcbiAgfSwge30pO1xuXG4vKipcbiAqIFBhcnNlIExpbmsgaGVhZGVyIGZpZWxkcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnBhcnNlTGlua3MgPSBzdHIgPT5cbiAgc3RyLnNwbGl0KC8gKiwgKi8pLnJlZHVjZSgob2JqLCBzdHIpID0+IHtcbiAgICBjb25zdCBwYXJ0cyA9IHN0ci5zcGxpdCgvICo7ICovKTtcbiAgICBjb25zdCB1cmwgPSBwYXJ0c1swXS5zbGljZSgxLCAtMSk7XG4gICAgY29uc3QgcmVsID0gcGFydHNbMV0uc3BsaXQoLyAqPSAqLylbMV0uc2xpY2UoMSwgLTEpO1xuICAgIG9ialtyZWxdID0gdXJsO1xuICAgIHJldHVybiBvYmo7XG4gIH0sIHt9KTtcblxuLyoqXG4gKiBTdHJpcCBjb250ZW50IHJlbGF0ZWQgZmllbGRzIGZyb20gYGhlYWRlcmAuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGhlYWRlclxuICogQHJldHVybiB7T2JqZWN0fSBoZWFkZXJcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMuY2xlYW5IZWFkZXIgPSAoaGVhZGVyLCBjaGFuZ2VzT3JpZ2luKSA9PiB7XG4gIGRlbGV0ZSBoZWFkZXJbJ2NvbnRlbnQtdHlwZSddO1xuICBkZWxldGUgaGVhZGVyWydjb250ZW50LWxlbmd0aCddO1xuICBkZWxldGUgaGVhZGVyWyd0cmFuc2Zlci1lbmNvZGluZyddO1xuICBkZWxldGUgaGVhZGVyLmhvc3Q7XG4gIC8vIHNlY3VpcnR5XG4gIGlmIChjaGFuZ2VzT3JpZ2luKSB7XG4gICAgZGVsZXRlIGhlYWRlci5hdXRob3JpemF0aW9uO1xuICAgIGRlbGV0ZSBoZWFkZXIuY29va2llO1xuICB9XG5cbiAgcmV0dXJuIGhlYWRlcjtcbn07XG4iLCJmdW5jdGlvbiBBZ2VudCgpIHtcbiAgdGhpcy5fZGVmYXVsdHMgPSBbXTtcbn1cblxuW1xuICAndXNlJyxcbiAgJ29uJyxcbiAgJ29uY2UnLFxuICAnc2V0JyxcbiAgJ3F1ZXJ5JyxcbiAgJ3R5cGUnLFxuICAnYWNjZXB0JyxcbiAgJ2F1dGgnLFxuICAnd2l0aENyZWRlbnRpYWxzJyxcbiAgJ3NvcnRRdWVyeScsXG4gICdyZXRyeScsXG4gICdvaycsXG4gICdyZWRpcmVjdHMnLFxuICAndGltZW91dCcsXG4gICdidWZmZXInLFxuICAnc2VyaWFsaXplJyxcbiAgJ3BhcnNlJyxcbiAgJ2NhJyxcbiAgJ2tleScsXG4gICdwZngnLFxuICAnY2VydCcsXG4gICdkaXNhYmxlVExTQ2VydHMnXG5dLmZvckVhY2goZm4gPT4ge1xuICAvLyBEZWZhdWx0IHNldHRpbmcgZm9yIGFsbCByZXF1ZXN0cyBmcm9tIHRoaXMgYWdlbnRcbiAgQWdlbnQucHJvdG90eXBlW2ZuXSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICB0aGlzLl9kZWZhdWx0cy5wdXNoKHsgZm4sIGFyZ3MgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG59KTtcblxuQWdlbnQucHJvdG90eXBlLl9zZXREZWZhdWx0cyA9IGZ1bmN0aW9uKHJlcSkge1xuICB0aGlzLl9kZWZhdWx0cy5mb3JFYWNoKGRlZiA9PiB7XG4gICAgcmVxW2RlZi5mbl0oLi4uZGVmLmFyZ3MpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQWdlbnQ7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMi4wXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTtcbnZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7ZnVuY3Rpb24geShhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIHooYSl7cmV0dXJuIHkoYSk9PT1tfVxuZXhwb3J0cy50eXBlT2Y9eTtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7ZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT12fHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXgpfTtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpfHx5KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPXo7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1ofTtcbmV4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09dH07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1wfTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8sIGZyb20pIHtcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gKHRvICYmIHRvLnNwbGl0KCcvJykpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuXG4gIGlmIChcbiAgICBtdXN0RW5kQWJzICYmXG4gICAgZnJvbVBhcnRzWzBdICE9PSAnJyAmJlxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXG4gIClcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7XG4iLCJmdW5jdGlvbiB2YWx1ZU9mKG9iaikge1xuICByZXR1cm4gb2JqLnZhbHVlT2YgPyBvYmoudmFsdWVPZigpIDogT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mLmNhbGwob2JqKTtcbn1cblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIC8vIFRlc3QgZm9yIHN0cmljdCBlcXVhbGl0eSBmaXJzdC5cbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIC8vIE90aGVyd2lzZSwgaWYgZWl0aGVyIG9mIHRoZW0gPT0gbnVsbCB0aGV5IGFyZSBub3QgZXF1YWwuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gKFxuICAgICAgQXJyYXkuaXNBcnJheShiKSAmJlxuICAgICAgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmXG4gICAgICBhLmV2ZXJ5KGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG4gICAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IHZhbHVlT2YoYSk7XG4gICAgdmFyIGJWYWx1ZSA9IHZhbHVlT2YoYik7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIGEsIGIpKS5ldmVyeShmdW5jdGlvbihrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDtcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKGNvbmRpdGlvbikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwkJDEoYSwgYikge1xuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgZ3VkIGZyb20gJ2d1ZCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ3VkKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8gPSBQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsIi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gXCJtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0XCI7XG5cbmNvbnN0IGNyZWF0ZU5hbWVkQ29udGV4dCA9IG5hbWUgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcblxuICByZXR1cm4gY29udGV4dDtcbn07XG5cbmNvbnN0IGNvbnRleHQgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlclwiKTtcbmV4cG9ydCBkZWZhdWx0IGNvbnRleHQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXJDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHRcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cbmNsYXNzIFJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHsgcGF0aDogXCIvXCIsIHVybDogXCIvXCIsIHBhcmFtczoge30sIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIiB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9O1xuXG4gICAgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cbiAgICB0aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICB0aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4obG9jYXRpb24gPT4ge1xuICAgICAgICBpZiAodGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb24gfSk7XG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgY2hpbGRyZW49e3RoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbH1cbiAgICAgICAgdmFsdWU9e3tcbiAgICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICApO1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbihwcmV2UHJvcHMpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgcHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cbmNsYXNzIE1lbW9yeVJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KHRoaXMucHJvcHMpO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gPFJvdXRlciBoaXN0b3J5PXt0aGlzLmhpc3Rvcnl9IGNoaWxkcmVuPXt0aGlzLnByb3BzLmNoaWxkcmVufSAvPjtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgd2FybmluZyhcbiAgICAgICF0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICtcbiAgICAgICAgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTWVtb3J5Um91dGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5jbGFzcyBMaWZlY3ljbGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTGlmZWN5Y2xlO1xuIiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxuY29uc3QgY2FjaGUgPSB7fTtcbmNvbnN0IGNhY2hlTGltaXQgPSAxMDAwMDtcbmxldCBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcblxuICBjb25zdCBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoID0gXCIvXCIsIHBhcmFtcyA9IHt9KSB7XG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHsgcHJldHR5OiB0cnVlIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVBhdGg7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcblxuaW1wb3J0IExpZmVjeWNsZSBmcm9tIFwiLi9MaWZlY3ljbGVcIjtcbmltcG9ydCBSb3V0ZXJDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHRcIjtcbmltcG9ydCBnZW5lcmF0ZVBhdGggZnJvbSBcIi4vZ2VuZXJhdGVQYXRoXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5mdW5jdGlvbiBSZWRpcmVjdCh7IGNvbXB1dGVkTWF0Y2gsIHRvLCBwdXNoID0gZmFsc2UgfSkge1xuICByZXR1cm4gKFxuICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAge2NvbnRleHQgPT4ge1xuICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICAgICAgY29uc3QgeyBoaXN0b3J5LCBzdGF0aWNDb250ZXh0IH0gPSBjb250ZXh0O1xuXG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XG4gICAgICAgIGNvbnN0IGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oXG4gICAgICAgICAgY29tcHV0ZWRNYXRjaFxuICAgICAgICAgICAgPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgIC4uLnRvLFxuICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiB0b1xuICAgICAgICApO1xuXG4gICAgICAgIC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuICAgICAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxMaWZlY3ljbGVcbiAgICAgICAgICAgIG9uTW91bnQ9eygpID0+IHtcbiAgICAgICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBvblVwZGF0ZT17KHNlbGYsIHByZXZQcm9wcykgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgLi4ubG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdG89e3RvfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICB9fVxuICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgKTtcbn1cblxuaWYgKF9fREVWX18pIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlZGlyZWN0O1xuIiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxuY29uc3QgY2FjaGUgPSB7fTtcbmNvbnN0IGNhY2hlTGltaXQgPSAxMDAwMDtcbmxldCBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCwgb3B0aW9ucykge1xuICBjb25zdCBjYWNoZUtleSA9IGAke29wdGlvbnMuZW5kfSR7b3B0aW9ucy5zdHJpY3R9JHtvcHRpb25zLnNlbnNpdGl2ZX1gO1xuICBjb25zdCBwYXRoQ2FjaGUgPSBjYWNoZVtjYWNoZUtleV0gfHwgKGNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuXG4gIGNvbnN0IGtleXMgPSBbXTtcbiAgY29uc3QgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICBjb25zdCByZXN1bHQgPSB7IHJlZ2V4cCwga2V5cyB9O1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zID0ge30pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0geyBwYXRoOiBvcHRpb25zIH07XG4gIH1cblxuICBjb25zdCB7IHBhdGgsIGV4YWN0ID0gZmFsc2UsIHN0cmljdCA9IGZhbHNlLCBzZW5zaXRpdmUgPSBmYWxzZSB9ID0gb3B0aW9ucztcblxuICBjb25zdCBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcblxuICByZXR1cm4gcGF0aHMucmVkdWNlKChtYXRjaGVkLCBwYXRoKSA9PiB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIGNvbnN0IHsgcmVnZXhwLCBrZXlzIH0gPSBjb21waWxlUGF0aChwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlXG4gICAgfSk7XG4gICAgY29uc3QgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG5cbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcblxuICAgIGNvbnN0IFt1cmwsIC4uLnZhbHVlc10gPSBtYXRjaDtcbiAgICBjb25zdCBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcblxuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG5cbiAgICByZXR1cm4ge1xuICAgICAgcGF0aCwgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCwgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0LCAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoKG1lbW8sIGtleSwgaW5kZXgpID0+IHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tIFwicmVhY3QtaXNcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXJDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHRcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIGNvbnN0IHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuXG4gIHdhcm5pbmcoXG4gICAgdmFsdWUgIT09IHVuZGVmaW5lZCxcbiAgICBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICtcbiAgICAgIGA8Um91dGUke3BhdGggPyBgIHBhdGg9XCIke3BhdGh9XCJgIDogXCJcIn0+LCBidXQgeW91IGAgK1xuICAgICAgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCJcbiAgKTtcblxuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5jbGFzcyBSb3V0ZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICAgICAgICBjb25zdCBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgICAgICBjb25zdCBtYXRjaCA9IHRoaXMucHJvcHMuY29tcHV0ZWRNYXRjaFxuICAgICAgICAgICAgPyB0aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gICAgICAgICAgICA6IHRoaXMucHJvcHMucGF0aFxuICAgICAgICAgICAgPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHRoaXMucHJvcHMpXG4gICAgICAgICAgICA6IGNvbnRleHQubWF0Y2g7XG5cbiAgICAgICAgICBjb25zdCBwcm9wcyA9IHsgLi4uY29udGV4dCwgbG9jYXRpb24sIG1hdGNoIH07XG5cbiAgICAgICAgICBsZXQgeyBjaGlsZHJlbiwgY29tcG9uZW50LCByZW5kZXIgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgICAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxSb3V0ZXJDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtwcm9wc30+XG4gICAgICAgICAgICAgIHtwcm9wcy5tYXRjaFxuICAgICAgICAgICAgICAgID8gY2hpbGRyZW5cbiAgICAgICAgICAgICAgICAgID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgPyBfX0RFVl9fXG4gICAgICAgICAgICAgICAgICAgICAgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCB0aGlzLnByb3BzLnBhdGgpXG4gICAgICAgICAgICAgICAgICAgICAgOiBjaGlsZHJlbihwcm9wcylcbiAgICAgICAgICAgICAgICAgICAgOiBjaGlsZHJlblxuICAgICAgICAgICAgICAgICAgOiBjb21wb25lbnRcbiAgICAgICAgICAgICAgICAgID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKVxuICAgICAgICAgICAgICAgICAgOiByZW5kZXJcbiAgICAgICAgICAgICAgICAgID8gcmVuZGVyKHByb3BzKVxuICAgICAgICAgICAgICAgICAgOiBudWxsXG4gICAgICAgICAgICAgICAgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgICAgICAgID8gX19ERVZfX1xuICAgICAgICAgICAgICAgICAgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCB0aGlzLnByb3BzLnBhdGgpXG4gICAgICAgICAgICAgICAgICA6IGNoaWxkcmVuKHByb3BzKVxuICAgICAgICAgICAgICAgIDogbnVsbH1cbiAgICAgICAgICAgIDwvUm91dGVyQ29udGV4dC5Qcm92aWRlcj5cbiAgICAgICAgICApO1xuICAgICAgICB9fVxuICAgICAgPC9Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICk7XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IChwcm9wcywgcHJvcE5hbWUpID0+IHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAgICAgICAgYEludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRgXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGF0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZylcbiAgICBdKSxcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbFxuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhKFxuICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuICYmXG4gICAgICAgICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiZcbiAgICAgICAgdGhpcy5wcm9wcy5jb21wb25lbnRcbiAgICAgICksXG4gICAgICBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCJcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEoXG4gICAgICAgIHRoaXMucHJvcHMuY2hpbGRyZW4gJiZcbiAgICAgICAgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJlxuICAgICAgICB0aGlzLnByb3BzLnJlbmRlclxuICAgICAgKSxcbiAgICAgIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIlxuICAgICk7XG5cbiAgICB3YXJuaW5nKFxuICAgICAgISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksXG4gICAgICBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiXG4gICAgKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24ocHJldlByb3BzKSB7XG4gICAgd2FybmluZyhcbiAgICAgICEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJ1xuICAgICk7XG5cbiAgICB3YXJuaW5nKFxuICAgICAgISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLFxuICAgICAgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLidcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBjcmVhdGVQYXRoIH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHJldHVybiB7XG4gICAgLi4ubG9jYXRpb24sXG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9O1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG5cbiAgY29uc3QgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG5cbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcblxuICByZXR1cm4ge1xuICAgIC4uLmxvY2F0aW9uLFxuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuY2xhc3MgU3RhdGljUm91dGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgY29uc3QgeyBiYXNlbmFtZSA9IFwiXCIsIGNvbnRleHQgPSB7fSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH1cblxuICBoYW5kbGVQdXNoID0gbG9jYXRpb24gPT4gdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gIGhhbmRsZVJlcGxhY2UgPSBsb2NhdGlvbiA9PiB0aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgaGFuZGxlTGlzdGVuID0gKCkgPT4gbm9vcDtcbiAgaGFuZGxlQmxvY2sgPSAoKSA9PiBub29wO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGJhc2VuYW1lID0gXCJcIiwgY29udGV4dCA9IHt9LCBsb2NhdGlvbiA9IFwiL1wiLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IHBhdGggPT4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG5cbiAgICByZXR1cm4gPFJvdXRlciB7Li4ucmVzdH0gaGlzdG9yeT17aGlzdG9yeX0gc3RhdGljQ29udGV4dD17Y29udGV4dH0gLz47XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgd2FybmluZyhcbiAgICAgICF0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICtcbiAgICAgICAgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU3RhdGljUm91dGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuaW1wb3J0IFJvdXRlckNvbnRleHQgZnJvbSBcIi4vUm91dGVyQ29udGV4dFwiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuY2xhc3MgU3dpdGNoIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICAgICAge2NvbnRleHQgPT4ge1xuICAgICAgICAgIGludmFyaWFudChjb250ZXh0LCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICAgICAgICBjb25zdCBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcblxuICAgICAgICAgIGxldCBlbGVtZW50LCBtYXRjaDtcblxuICAgICAgICAgIC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cbiAgICAgICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKHRoaXMucHJvcHMuY2hpbGRyZW4sIGNoaWxkID0+IHtcbiAgICAgICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG5cbiAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcblxuICAgICAgICAgICAgICBtYXRjaCA9IHBhdGhcbiAgICAgICAgICAgICAgICA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgeyAuLi5jaGlsZC5wcm9wcywgcGF0aCB9KVxuICAgICAgICAgICAgICAgIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHJldHVybiBtYXRjaFxuICAgICAgICAgICAgPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwgeyBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSlcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbihwcmV2UHJvcHMpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLFxuICAgICAgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJ1xuICAgICk7XG5cbiAgICB3YXJuaW5nKFxuICAgICAgISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLFxuICAgICAgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcblxuaW1wb3J0IENvbnRleHQgZnJvbSBcIi4vUm91dGVyQ29udGV4dC5qc1wiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGguanNcIjtcblxuY29uc3QgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAoX19ERVZfXykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIsXG4gICAgICBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChDb250ZXh0KS5oaXN0b3J5O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChfX0RFVl9fKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgdHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIixcbiAgICAgIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChDb250ZXh0KS5sb2NhdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIlxuICAgICk7XG4gIH1cblxuICBjb25zdCBtYXRjaCA9IHVzZUNvbnRleHQoQ29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChfX0RFVl9fKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgdHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIixcbiAgICAgIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBwYXRoXG4gICAgPyBtYXRjaFBhdGgodXNlTG9jYXRpb24oKS5wYXRobmFtZSwgcGF0aClcbiAgICA6IHVzZUNvbnRleHQoQ29udGV4dCkubWF0Y2g7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuY2xhc3MgQnJvd3NlclJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KHRoaXMucHJvcHMpO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gPFJvdXRlciBoaXN0b3J5PXt0aGlzLmhpc3Rvcnl9IGNoaWxkcmVuPXt0aGlzLnByb3BzLmNoaWxkcmVufSAvPjtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgK1xuICAgICAgICBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQnJvd3NlclJvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmltcG9ydCB7IGNyZWF0ZUhhc2hIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuY2xhc3MgSGFzaFJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KHRoaXMucHJvcHMpO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gPFJvdXRlciBoaXN0b3J5PXt0aGlzLmhpc3Rvcnl9IGNoaWxkcmVuPXt0aGlzLnByb3BzLmNoaWxkcmVufSAvPjtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgK1xuICAgICAgICBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgSGFzaFJvdXRlcjtcbiIsImltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSBcImhpc3RvcnlcIjtcblxuZXhwb3J0IGNvbnN0IHJlc29sdmVUb0xvY2F0aW9uID0gKHRvLCBjdXJyZW50TG9jYXRpb24pID0+XG4gIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xuXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplVG9Mb2NhdGlvbiA9ICh0bywgY3VycmVudExvY2F0aW9uKSA9PiB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCJcbiAgICA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjdXJyZW50TG9jYXRpb24pXG4gICAgOiB0bztcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBfX1JvdXRlckNvbnRleHQgYXMgUm91dGVyQ29udGV4dCB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQgeyByZXNvbHZlVG9Mb2NhdGlvbiwgbm9ybWFsaXplVG9Mb2NhdGlvbiB9IGZyb20gXCIuL3V0aWxzL2xvY2F0aW9uVXRpbHNcIjtcblxuLy8gUmVhY3QgMTUgY29tcGF0XG5jb25zdCBmb3J3YXJkUmVmU2hpbSA9IEMgPT4gQztcbmxldCB7IGZvcndhcmRSZWYgfSA9IFJlYWN0O1xuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxuY29uc3QgTGlua0FuY2hvciA9IGZvcndhcmRSZWYoXG4gIChcbiAgICB7XG4gICAgICBpbm5lclJlZiwgLy8gVE9ETzogZGVwcmVjYXRlXG4gICAgICBuYXZpZ2F0ZSxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICAuLi5yZXN0XG4gICAgfSxcbiAgICBmb3J3YXJkZWRSZWZcbiAgKSA9PiB7XG4gICAgY29uc3QgeyB0YXJnZXQgfSA9IHJlc3Q7XG5cbiAgICBsZXQgcHJvcHMgPSB7XG4gICAgICAuLi5yZXN0LFxuICAgICAgb25DbGljazogZXZlbnQgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmIChvbkNsaWNrKSBvbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHRocm93IGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgICAgICBldmVudC5idXR0b24gPT09IDAgJiYgLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAgICAgKCF0YXJnZXQgfHwgdGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICAgKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBuYXZpZ2F0ZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIFJlYWN0IDE1IGNvbXBhdFxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gPGEgey4uLnByb3BzfSAvPjtcbiAgfVxuKTtcblxuaWYgKF9fREVWX18pIHtcbiAgTGlua0FuY2hvci5kaXNwbGF5TmFtZSA9IFwiTGlua0FuY2hvclwiO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuY29uc3QgTGluayA9IGZvcndhcmRSZWYoXG4gIChcbiAgICB7XG4gICAgICBjb21wb25lbnQgPSBMaW5rQW5jaG9yLFxuICAgICAgcmVwbGFjZSxcbiAgICAgIHRvLFxuICAgICAgaW5uZXJSZWYsIC8vIFRPRE86IGRlcHJlY2F0ZVxuICAgICAgLi4ucmVzdFxuICAgIH0sXG4gICAgZm9yd2FyZGVkUmVmXG4gICkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICAgICAge2NvbnRleHQgPT4ge1xuICAgICAgICAgIGludmFyaWFudChjb250ZXh0LCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgICAgY29uc3QgeyBoaXN0b3J5IH0gPSBjb250ZXh0O1xuXG4gICAgICAgICAgY29uc3QgbG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKFxuICAgICAgICAgICAgcmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pLFxuICAgICAgICAgICAgY29udGV4dC5sb2NhdGlvblxuICAgICAgICAgICk7XG5cbiAgICAgICAgICBjb25zdCBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcbiAgICAgICAgICBjb25zdCBwcm9wcyA9IHtcbiAgICAgICAgICAgIC4uLnJlc3QsXG4gICAgICAgICAgICBocmVmLFxuICAgICAgICAgICAgbmF2aWdhdGUoKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pO1xuICAgICAgICAgICAgICBjb25zdCBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuXG4gICAgICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vIFJlYWN0IDE1IGNvbXBhdFxuICAgICAgICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgICAgICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpO1xuICAgICAgICB9fVxuICAgICAgPC9Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICk7XG4gIH1cbik7XG5cbmlmIChfX0RFVl9fKSB7XG4gIGNvbnN0IHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLm9iamVjdCxcbiAgICBQcm9wVHlwZXMuZnVuY1xuICBdKTtcbiAgY29uc3QgcmVmVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLmZ1bmMsXG4gICAgUHJvcFR5cGVzLnNoYXBlKHsgY3VycmVudDogUHJvcFR5cGVzLmFueSB9KVxuICBdKTtcblxuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG5cbiAgTGluay5wcm9wVHlwZXMgPSB7XG4gICAgaW5uZXJSZWY6IHJlZlR5cGUsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMaW5rO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgX19Sb3V0ZXJDb250ZXh0IGFzIFJvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi9MaW5rXCI7XG5pbXBvcnQgeyByZXNvbHZlVG9Mb2NhdGlvbiwgbm9ybWFsaXplVG9Mb2NhdGlvbiB9IGZyb20gXCIuL3V0aWxzL2xvY2F0aW9uVXRpbHNcIjtcblxuLy8gUmVhY3QgMTUgY29tcGF0XG5jb25zdCBmb3J3YXJkUmVmU2hpbSA9IEMgPT4gQztcbmxldCB7IGZvcndhcmRSZWYgfSA9IFJlYWN0O1xuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gam9pbkNsYXNzbmFtZXMoLi4uY2xhc3NuYW1lcykge1xuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoaSA9PiBpKS5qb2luKFwiIFwiKTtcbn1cblxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuY29uc3QgTmF2TGluayA9IGZvcndhcmRSZWYoXG4gIChcbiAgICB7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudCA9IFwicGFnZVwiLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gXCJhY3RpdmVcIixcbiAgICAgIGFjdGl2ZVN0eWxlLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVQcm9wLFxuICAgICAgZXhhY3QsXG4gICAgICBpc0FjdGl2ZTogaXNBY3RpdmVQcm9wLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uUHJvcCxcbiAgICAgIHN0cmljdCxcbiAgICAgIHN0eWxlOiBzdHlsZVByb3AsXG4gICAgICB0byxcbiAgICAgIGlubmVyUmVmLCAvLyBUT0RPOiBkZXByZWNhdGVcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIGZvcndhcmRlZFJlZlxuICApID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgICAgICAgIGNvbnN0IGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgICAgIGNvbnN0IHRvTG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKFxuICAgICAgICAgICAgcmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksXG4gICAgICAgICAgICBjdXJyZW50TG9jYXRpb25cbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IHsgcGF0aG5hbWU6IHBhdGggfSA9IHRvTG9jYXRpb247XG4gICAgICAgICAgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcbiAgICAgICAgICBjb25zdCBlc2NhcGVkUGF0aCA9XG4gICAgICAgICAgICBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuXG4gICAgICAgICAgY29uc3QgbWF0Y2ggPSBlc2NhcGVkUGF0aFxuICAgICAgICAgICAgPyBtYXRjaFBhdGgoY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLCB7XG4gICAgICAgICAgICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICAgICAgICAgICAgZXhhY3QsXG4gICAgICAgICAgICAgICAgc3RyaWN0XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgICAgY29uc3QgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3BcbiAgICAgICAgICAgID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pXG4gICAgICAgICAgICA6IG1hdGNoKTtcblxuICAgICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGlzQWN0aXZlXG4gICAgICAgICAgICA/IGpvaW5DbGFzc25hbWVzKGNsYXNzTmFtZVByb3AsIGFjdGl2ZUNsYXNzTmFtZSlcbiAgICAgICAgICAgIDogY2xhc3NOYW1lUHJvcDtcbiAgICAgICAgICBjb25zdCBzdHlsZSA9IGlzQWN0aXZlID8geyAuLi5zdHlsZVByb3AsIC4uLmFjdGl2ZVN0eWxlIH0gOiBzdHlsZVByb3A7XG5cbiAgICAgICAgICBjb25zdCBwcm9wcyA9IHtcbiAgICAgICAgICAgIFwiYXJpYS1jdXJyZW50XCI6IChpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCkgfHwgbnVsbCxcbiAgICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICAgIHN0eWxlLFxuICAgICAgICAgICAgdG86IHRvTG9jYXRpb24sXG4gICAgICAgICAgICAuLi5yZXN0XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vIFJlYWN0IDE1IGNvbXBhdFxuICAgICAgICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgICAgICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiA8TGluayB7Li4ucHJvcHN9IC8+O1xuICAgICAgICB9fVxuICAgICAgPC9Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICk7XG4gIH1cbik7XG5cbmlmIChfX0RFVl9fKSB7XG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcblxuICBjb25zdCBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1xuICAgIFwicGFnZVwiLFxuICAgIFwic3RlcFwiLFxuICAgIFwibG9jYXRpb25cIixcbiAgICBcImRhdGVcIixcbiAgICBcInRpbWVcIixcbiAgICBcInRydWVcIlxuICBdKTtcblxuICBOYXZMaW5rLnByb3BUeXBlcyA9IHtcbiAgICAuLi5MaW5rLnByb3BUeXBlcyxcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTmF2TGluaztcbiIsImNvbnN0IHN0eWxlcyA9IHtcbiAgc2hvdzoge1xuICAgIGJvcmRlcjogJzFweCBzb2xpZCBncmF5JyxcbiAgICBwYWRkaW5nOiAxMlxuICB9LFxuICBlZGl0OiB7XG4gICAgcGFkZGluZzogMTIsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnc2lsdmVyJ1xuICB9LFxuICByaWdodDoge1xuICAgIHRleHRBbGlnbjogJ3JpZ2h0J1xuICB9LFxuICBlcnJvcjoge1xuICAgIGNvbG9yOiAncmVkJ1xuICB9LFxuICBsb2dpbjoge1xuICAgIHdpZHRoOiAzMDAsXG4gICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gICAgbWFyZ2luTGVmdDogMzAsXG4gICAgcGFkZGluZzogMTVcbiAgfSxcbiAgdGltZWxpbmU6IHtcbiAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgc2lsdmVyJyxcbiAgICBwYWRkaW5nOiAxMCxcbiAgICBtYXJnaW46IDEwXG4gIH0sXG4gIHRsX2ltZzoge1xuICAgIGZsb2F0OiAnbGVmdCcsXG4gICAgd2lkdGg6IDMyXG4gIH0sXG4gIHVzZXJpZDoge1xuICAgIGZsb2F0OiAnbGVmdCcsXG4gICAgY29sb3I6ICdncmF5JyxcbiAgICBwYWRkaW5nOiA1LFxuICAgIG1hcmdpbjogNSxcbiAgICB3aWR0aDogNzAsXG4gICAgdGV4dEFsaWduOiAncmlnaHQnXG4gIH0sXG4gIGNvbW1lbnQ6IHtcbiAgICBmbG9hdDogJ2xlZnQnLFxuICAgIHBhZGRpbmc6IDUsXG4gICAgbWFyZ2luOiA1LFxuICAgIHdpZHRoOiAzMDBcbiAgfSxcbiAgZnJpZW5kOiB7XG4gICAgcGFkZGluZzogMTAsXG4gICAgYm9yZGVyQm90dG9tOiAnMXB4IHNvbGlkIHNpbHZlcidcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBzdHlsZXNcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgcmVxdWVzdCBmcm9tICdzdXBlcmFnZW50J1xuaW1wb3J0IHtSZWRpcmVjdH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnXG5cbi8vIOODreOCsOOCpOODs+eUu+mdouOCkuWumue+qeOBl+OBn+OCs+ODs+ODneODvOODjeODs+ODiFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU05TTG9naW4gZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0geyB1c2VyczogW10sIGp1bXA6ICcnLCBmcmllbmRzOiBbXX1cbiAgfVxuICBjb21wb25lbnRXaWxsTW91bnQgKCkge1xuICAgIHRoaXMubG9hZFVzZXJzKClcbiAgfVxuICAvLyDjg6bjg7zjgrbjg7zkuIDopqfjgajoh6rouqvjga7lj4vpgZTmg4XloLHjgpLlvpfjgotcbiAgbG9hZFVzZXJzICgpIHtcbiAgICByZXF1ZXN0XG4gICAgICAuZ2V0KCcvYXBpL2dldF9hbGx1c2VycycpXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSByZXR1cm5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXNlcnM6IHJlcy5ib2R5LnVzZXJzfSlcbiAgICAgIH0pXG4gICAgcmVxdWVzdFxuICAgICAgLmdldCgnL2FwaS9nZXRfdXNlcicpXG4gICAgICAucXVlcnkoe3VzZXJpZDogd2luZG93LmxvY2FsU3RvcmFnZS5zbnNfaWR9KVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyLCByZXMpXG4gICAgICAgIGlmIChlcnIpIHJldHVyblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtmcmllbmRzOiByZXMuYm9keS5mcmllbmRzfSlcbiAgICAgIH0pXG4gIH1cbiAgLy8g5Y+L6YGU6L+95Yqg44Gu44Oc44K/44Oz44KS5oq844GX44Gf5pmCXG4gIGFkZEZyaWVuZCAoZnJpZW5kaWQpIHtcbiAgICBpZiAoIXdpbmRvdy5sb2NhbFN0b3JhZ2Uuc25zX2F1dGhfdG9rZW4pIHtcbiAgICAgIHdpbmRvdy5hbGVydCgn5YWI44Gr44Ot44Kw44Kk44Oz44GX44Gm44GP44Gg44GV44GEJylcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2p1bXA6ICcvbG9naW4nfSlcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICByZXF1ZXN0XG4gICAgICAuZ2V0KCcvYXBpL2FkZF9mcmllbmQnKVxuICAgICAgLnF1ZXJ5KHtcbiAgICAgICAgdXNlcmlkOiB3aW5kb3cubG9jYWxTdG9yYWdlLnNuc19pZCxcbiAgICAgICAgdG9rZW46IHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc25zX2F1dGhfdG9rZW4sXG4gICAgICAgIGZyaWVuZGlkOiBmcmllbmRpZFxuICAgICAgfSlcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHJldHVyblxuICAgICAgICBpZiAoIXJlcy5ib2R5LnN0YXR1cykge1xuICAgICAgICAgIHdpbmRvdy5hbGVydChyZXMuYm9keS5tc2cpXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sb2FkVXNlcnMoKVxuICAgICAgfSlcbiAgfVxuICByZW5kZXIgKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLmp1bXApIHtcbiAgICAgIHJldHVybiA8UmVkaXJlY3QgdG89e3RoaXMuc3RhdGUuanVtcH0gLz5cbiAgICB9XG4gICAgY29uc3QgZnJpZW5kcyA9IHRoaXMuc3RhdGUuZnJpZW5kcyA/IHRoaXMuc3RhdGUuZnJpZW5kcyA6e31cbiAgICBjb25zdCB1bGlzdCA9IHRoaXMuc3RhdGUudXNlcnMubWFwKGlkID0+IHtcbiAgICAgIC8vIOWPi+mBlOi/veWKoOOBp+OBjeOCi+OBi+OBqeOBhuOBi+OCkuWIpOaWreOBl+OBpuODnOOCv+ODs+OBruihqOekuuOCkuWIh+OCiuabv+OBiOOCi1xuICAgICAgY29uc3QgYnRuID0gKGZyaWVuZHNbaWRdKVxuICAgICAgICA/IGAke2lkfeOBr+WPi+mBlOOBp+OBmWBcbiAgICAgICAgOiAoPGJ1dHRvbiBvbkNsaWNrPXtldmUgPT4gdGhpcy5hZGRGcmllbmQoaWQpfT5cbiAgICAgICAgICB7aWR944KS5Y+L6YGU44Gr6L+95YqgPC9idXR0b24+KVxuICAgICAgcmV0dXJuICg8ZGl2IGtleT17J2ZpZF8nICsgaWR9IHN0eWxlPXtzdHlsZXMuZnJpZW5kfT5cbiAgICAgICAgPGltZyBzcmM9eyd1c2VyLnBuZyd9IHdpZHRoPXs4MH0gLz4ge2J0bn1cbiAgICAgIDwvZGl2PilcbiAgICB9KVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDE+44Om44O844K244O844Gu5LiA6KanPC9oMT5cbiAgICAgICAgPGRpdj57dWxpc3R9PC9kaXY+XG4gICAgICAgIDxkaXY+PGJyIC8+PGEgaHJlZj17Jy90aW1lbGluZSd9PuKGkuOCv+OCpOODoOODqeOCpOODs+OCkuimi+OCizwvYT48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgcmVxdWVzdCBmcm9tICdzdXBlcmFnZW50J1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcydcblxuLy8g44Ot44Kw44Kk44Oz55S76Z2i44KS5a6a576p44GX44Gf44Kz44Oz44Od44O844ON44Oz44OIXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTTlNMb2dpbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMuc3RhdGUgPSB7IHRpbWVsaW5lczogW10sIGNvbW1lbnQ6ICcnIH1cbiAgfVxuICBjb21wb25lbnRXaWxsTW91bnQgKCkge1xuICAgIHRoaXMubG9hZFRpbWVsaW5lcygpXG4gIH1cbiAgbG9hZFRpbWVsaW5lcyAoKSB7IC8vIOOCv+OCpOODoOODqeOCpOODs+OCkuWPluW+l1xuICAgIHJlcXVlc3RcbiAgICAgIC5nZXQoJy9hcGkvZ2V0X2ZyaWVuZHNfdGltZWxpbmUnKVxuICAgICAgLnF1ZXJ5KHtcbiAgICAgICAgdXNlcmlkOiB3aW5kb3cubG9jYWxTdG9yYWdlLnNuc19pZCxcbiAgICAgICAgdG9rZW46IHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc25zX2F1dGhfdG9rZW5cbiAgICAgIH0pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSByZXR1cm5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dGltZWxpbmVzOiByZXMuYm9keS50aW1lbGluZXN9KVxuICAgICAgfSlcbiAgfVxuICBwb3N0ICgpIHsgIC8vIOiHquWIhuOBruOCv+OCpOODoOODqeOCpOODs+OBq+aKleeov1xuICAgIHJlcXVlc3RcbiAgICAgIC5nZXQoJy9hcGkvYWRkX3RpbWVsaW5lJylcbiAgICAgIC5xdWVyeSh7XG4gICAgICAgIHVzZXJpZDogd2luZG93LmxvY2FsU3RvcmFnZS5zbnNfaWQsXG4gICAgICAgIHRva2VuOiB3aW5kb3cubG9jYWxTdG9yYWdlLnNuc19hdXRoX3Rva2VuLFxuICAgICAgICBjb21tZW50OiB0aGlzLnN0YXRlLmNvbW1lbnRcbiAgICAgIH0pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSByZXR1cm5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29tbWVudDogJyd9KVxuICAgICAgICB0aGlzLmxvYWRUaW1lbGluZXMoKVxuICAgICAgfSlcbiAgfVxuICByZW5kZXIgKCkge1xuICAgIC8vIOOCv+OCpOODoOODqeOCpOODs+OBru+8keihjOOCkuS9nOaIkFxuICAgIGNvbnN0IHRpbWVsaW5lcyA9IHRoaXMuc3RhdGUudGltZWxpbmVzLm1hcChlID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYga2V5PXtlLl9pZH0gc3R5bGU9e3N0eWxlcy50aW1lbGluZX0+XG4gICAgICAgICAgPGltZyBzcmM9eyd1c2VyLnBuZyd9IHN0eWxlPXtzdHlsZXMudGxfaW1nfSAvPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy51c2VyaWR9PntlLnVzZXJpZH06PC9kaXY+XG4gICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmNvbW1lbnR9PntlLmNvbW1lbnR9PC9kaXY+XG4gICAgICAgICAgPHAgc3R5bGU9e3tjbGVhcjogJ2JvdGgnfX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApXG4gICAgfSlcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgxPuOCv+OCpOODoOODqeOCpOODszwvaDE+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGlucHV0IHZhbHVlPXt0aGlzLnN0YXRlLmNvbW1lbnR9IHNpemU9ezQwfVxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gdGhpcy5zZXRTdGF0ZSh7Y29tbWVudDogZS50YXJnZXQudmFsdWV9KX0gLz5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2UgPT4gdGhpcy5wb3N0KCl9PuabuOOBjei+vOOCgDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj57dGltZWxpbmVzfTwvZGl2PlxuICAgICAgICA8aHIgLz5cbiAgICAgICAgPHA+PGEgaHJlZj0nL3VzZXJzJz7ihpLlj4vpgZTjgpLov73liqDjgZnjgos8L2E+PC9wPlxuICAgICAgICA8cD48YSBocmVmPScvbG9naW4nPuKGkuWIpeOBruODpuODvOOCtuODvOOBp+ODreOCsOOCpOODszwvYT48L3A+XG4gICAgICAgIDxwPjxhIGhyZWY9Jy8nPuKGkkZyb250UGFnZeOBuDwvYT48L3A+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgcmVxdWVzdCBmcm9tICdzdXBlcmFnZW50J1xuaW1wb3J0IHtSZWRpcmVjdH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnXG5cbi8vIOODreOCsOOCpOODs+eUu+mdouOCkuWumue+qeOBl+OBn+OCs+ODs+ODneODvOODjeODs+ODiFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU05TTG9naW4gZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0geyB1c2VyaWQ6ICcnLCBwYXNzd2Q6ICcnLCBqdW1wOiAnJywgbXNnOiAnJ31cbiAgfVxuICAvLyBBUEnjgpLlkbzjgbPlh7rjgZfjgIHjg4jjg7zjgq/jg7PjgpLlvpfjgaZsb2NhbFN0cmFnZeOBq+S/neWtmOOBmeOCi1xuICBhcGkgKGNvbW1hbmQpIHtcbiAgICByZXF1ZXN0XG4gICAgLmdldCgnL2FwaS8nICsgY29tbWFuZClcbiAgICAucXVlcnkoe1xuICAgICAgdXNlcmlkOiB0aGlzLnN0YXRlLnVzZXJpZCxcbiAgICAgIHBhc3N3ZDogdGhpcy5zdGF0ZS5wYXNzd2RcbiAgICB9KVxuICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICBpZiAoZXJyKSByZXR1cm5cbiAgICAgIGNvbnN0IHIgPSByZXMuYm9keVxuICAgICAgY29uc29sZS5sb2cocilcbiAgICAgIGlmIChyLnN0YXR1cyAmJiByLnRva2VuKSB7XG4gICAgICAgIC8vIOiqjeiovOODiOODvOOCr+ODs+OCkmxvY2FsU3RyYWdl44Gr5L+d5a2YXG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2VbJ3Nuc19pZCddID0gdGhpcy5zdGF0ZS51c2VyaWRcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZVsnc25zX2F1dGhfdG9rZW4nXSA9IHIudG9rZW5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7anVtcDogJy90aW1lbGluZSd9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0U3RhdGUoe21zZzogci5tc2d9KVxuICAgIH0pXG4gIH1cbiAgcmVuZGVyICgpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5qdW1wKSB7XG4gICAgICByZXR1cm4gPFJlZGlyZWN0IHRvPXt0aGlzLnN0YXRlLmp1bXB9IC8+XG4gICAgfVxuICAgIGNvbnN0IGNoYW5nZWQgPSAobmFtZSwgZSkgPT4gdGhpcy5zZXRTdGF0ZSh7W25hbWVdOiBlLnRhcmdldC52YWx1ZX0pXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxoMT7jg63jgrDjgqTjg7M8L2gxPlxuICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMubG9naW59PlxuICAgICAgICAgIOODpuODvOOCtuODvElEOjxiciAvPlxuICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dGhpcy5zdGF0ZS51c2VyaWR9XG4gICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBjaGFuZ2VkKCd1c2VyaWQnLCBlKX0gLz48YnIgLz5cbiAgICAgICAgICDjg5Hjgrnjg6/jg7zjg4k6PGJyIC8+XG4gICAgICAgICAgPGlucHV0IHZhbHVlPXt0aGlzLnN0YXRlLnBhc3N3ZH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IGNoYW5nZWQoJ3Bhc3N3ZCcsIGUpfSAvPjxiciAvPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17ZSA9PiB0aGlzLmFwaSgnbG9naW4nKX0+44Ot44Kw44Kk44OzPC9idXR0b24+XG4gICAgICAgICAgPHAgc3R5bGU9e3N0eWxlcy5lcnJvcn0+e3RoaXMuc3RhdGUubXNnfTwvcD5cbiAgICAgICAgICA8cD48YnV0dG9uIG9uQ2xpY2s9e2UgPT4gdGhpcy5hcGkoJ2FkZHVzZXInKX0+44Om44O844K244O855m76Yyy77yI5Yid5Zue77yJPC9idXR0b24+PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgcmVxdWVzdCBmcm9tICdzdXBlcmFnZW50J1xuaW1wb3J0IHtSZWRpcmVjdH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnXG5cbi8vIOe3qOmbhueUu+mdouOCs+ODs+ODneODvOODjeODs+ODiFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2lraUVkaXQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAvL+OCs+ODs+ODneODvOODjeODs+ODiOOBruWIneacn+WMllxuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICBjb25zdCB7cGFyYW1zfSA9IHRoaXMucHJvcHMubWF0Y2hcbiAgICBjb25zdCBuYW1lID0gcGFyYW1zLm5hbWVcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbmFtZSwgYm9keTogJycsIGxvYWRlZDogZmFsc2UsIGp1bXA6ICcnXG4gICAgfVxuICB9XG4gIC8vV2lraeOBruWGheWuueOCkuiqreOBv+i+vOOCgFxuICBjb21wb25lbnRXaWxsTW91bnQgKCkge1xuICAgIHJlcXVlc3RcbiAgICAgIC5nZXQoYC9hcGkvZ2V0LyR7dGhpcy5zdGF0ZS5uYW1lfWApXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSByZXR1cm5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgYm9keTogcmVzLmJvZHkuZGF0YS5ib2R5LFxuICAgICAgICAgIGxvYWRlZDogdHJ1ZVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuICAvLyDmnKzmlofjgpLjgrXjg7zjg5Djg7zjgavjg53jgrnjg4jjgZnjgotcbiAgc2F2ZSAoKSB7XG4gICAgY29uc3Qgd2lraW5hbWUgPSB0aGlzLnN0YXRlLm5hbWVcbiAgICByZXF1ZXN0XG4gICAgICAucG9zdCgnL2FwaS9wdXQvJyArIHdpa2luYW1lKVxuICAgICAgLnR5cGUoJ2Zvcm0nKVxuICAgICAgLnNlbmQoe1xuICAgICAgICBuYW1lOiB3aWtpbmFtZSxcbiAgICAgICAgYm9keTogdGhpcy5zdGF0ZS5ib2R5XG4gICAgICB9KVxuICAgICAgLmVuZCgoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7anVtcDogJy93aWtpLycgKyB3aWtpbmFtZX0pXG4gICAgICB9KVxuICB9XG4gIGJvZHlDaGFuZ2VkIChlKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7Ym9keTogZS50YXJnZXQudmFsdWV9KVxuICB9XG4gIC8v57eo6ZuG55S76Z2i44KS6KGo56S6XG4gIHJlbmRlciAoKSB7XG4gICAgaWYgKCF0aGlzLnN0YXRlLmxvYWRlZCkge1xuICAgICAgcmV0dXJuICg8cD7oqq3jgb/ovrzjgb/kuK08L3A+KVxuICAgIH1cbiAgICBpZiAodGhpcy5zdGF0ZS5qdW1wICE9PSAnJykge1xuICAgICAgLy/jg6HjgqTjg7PnlLvpnaLjgavjg6rjg4DjgqTjg6zjgq/jg4hcbiAgICAgIHJldHVybiA8UmVkaXJlY3QgdG89e3RoaXMuc3RhdGUuanVtcH0gLz5cbiAgICB9XG4gICAgY29uc3QgbmFtZSA9IHRoaXMuc3RhdGUubmFtZVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuZWRpdH0+XG4gICAgICAgIDxoMT48YSBocmVmPXtgL3dpa2kvJHtuYW1lfWB9PntuYW1lfTwvYT48L2gxPlxuICAgICAgICA8dGV4dGFyZWEgcm93cz17MTJ9IGNvbHM9ezYwfVxuICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHRoaXMuYm9keUNoYW5nZWQoZSl9XG4gICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuYm9keX0gLz48YnIgLz5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtlID0+IHRoaXMuc2F2ZSgpfT7kv53lrZg8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCByZXF1ZXN0IGZyb20gJ3N1cGVyYWdlbnQnXG5pbXBvcnQgV2lraVBhcnNlciBmcm9tICcuL3dpa2lfcGFyc2VyJ1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcydcblxuLy9XaWtp44Oh44Kk44Oz55S76Z2i6KGo56S644Kz44Oz44Od44O844ON44Oz44OIXG5jbGFzcyBXaWtpU2hvdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKSBcbiAgICBjb25zdCB7cGFyYW1zfSA9IHRoaXMucHJvcHMubWF0Y2hcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbmFtZTogcGFyYW1zLm5hbWUsIGJvZHk6ICcnLCBsb2FkZWQ6IGZhbHNlfVxuICB9XG4gIC8vV2lraeOBruWGheWuueOCkuiqreOBv+i+vOOCgFxuICBjb21wb25lbnRXaWxsTW91bnQgKCkge1xuICAgIHJlcXVlc3RcbiAgICAgIC5nZXQoYC9hcGkvZ2V0LyR7dGhpcy5zdGF0ZS5uYW1lfWApXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSByZXR1cm5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgYm9keTogcmVzLmJvZHkuZGF0YS5ib2R5LFxuICAgICAgICAgIGxvYWRlZDogdHJ1ZVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfVxuICAvLyDnlLvpnaLjga7ooajnpLrlh6bnkIZcbiAgcmVuZGVyICgpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUubG9hZGVkKSByZXR1cm4gKDxwPuiqreOBv+i+vOOBv+S4rTwvcD4pXG4gICAgY29uc3QgbmFtZSA9IHRoaXMuc3RhdGUubmFtZVxuICAgIGNvbnN0IGJvZHkgPSB0aGlzLnN0YXRlLmJvZHlcbiAgICBjb25zdCBodG1sID0gdGhpcy5jb252ZXJ0VGV4dChib2R5KVxuICAgIHJldHVybihcbiAgICAgIDxkaXY+XG4gICAgICAgIDxwPjxhIGhyZWY9Jy9sb2dpbic+44Ot44Kw44Kk44OzPC9hPjwvcD5cbiAgICAgICAgPGgxPnt0aGlzLnN0YXRlLm5hbWV9PC9oMT5cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLnNob3d9PntodG1sfTwvZGl2PlxuICAgICAgICA8cCBzdHlsZT17c3R5bGVzLnJpZ2h0fT5cbiAgICAgICAgICA8YSBocmVmPXtgL2VkaXQvJHtuYW1lfWB9PuKGkuOBk+OBruODmuODvOOCuOOCkue3qOmbhjwvYT5cbiAgICAgICAgPC9wPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG4gIC8vV2lraeiomOazleOCklJlYWN044Kq44OW44K444Kn44Kv44OI44Gr5aSJ5o+b44GZ44KLXG4gIGNvbnZlcnRUZXh0IChzcmMpIHtcbiAgICAvL1dpa2noqJjms5XjgpLjg5Hjg7zjgrnjgZfjgabphY3liJfjg4fjg7zjgr/jgavlpInmj5tcbiAgICBjb25zdCBub2RlcyA9IFdpa2lQYXJzZXIucGFyc2Uoc3JjKVxuICAgIC8v5ZCE5qeY44KS44KSUmVhY3Tjga7opoHntKDjgavlpInmj5tcbiAgICBjb25zdCBsaW5lcyA9IG5vZGVzLm1hcCgoZSxpKSA9PiB7XG4gICAgICBpZiAoZS50YWcgPT09ICd1bCcpIHsgLy/jg6rjgrnjg4hcbiAgICAgICAgY29uc3QgbGlzID0gZS5pdGVtcy5tYXAoXG4gICAgICAgICAgKHMsIGopID0+IDxsaSBrZXk9e2Bub2RlJHtpfV8ke2p9YH0+e3N9PC9saT5cbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gPHVsIGtleT17YG5vZGUke2l9YH0+e2xpc308L3VsPlxuICAgICAgfVxuICAgICAgaWYgKGUudGFnID09PSAnYScpIHtcbiAgICAgICAgcmV0dXJuICg8ZGl2IGtleT17YG5vZGUke2l9YH0+XG4gICAgICAgICAgPGEgaHJlZj17YC93aWtpLyR7ZS5sYWJlbH1gfT7ihpJ7ZS5sYWJlbH08L2E+XG4gICAgICAgIDwvZGl2PilcbiAgICAgIH1cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBlLnRhZywge2tleTogJ25vZGUnICsgaX0sIGUubGFiZWwpXG4gICAgfSlcbiAgICByZXR1cm4gbGluZXNcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgV2lraVNob3ciLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IHtcbiAgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsXG4gIFJvdXRlLCBTd2l0Y2hcbn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcbmltcG9ydCBTTlNVc2VycyBmcm9tICcuL3VzZXJzJ1xuaW1wb3J0IFNOU1RpbWVsaW5lIGZyb20gJy4vdGltZWxpbmUnXG5pbXBvcnQgU05TTG9naW4gZnJvbSAnLi9sb2dpbidcbmltcG9ydCBXaWtpRWRpdCBmcm9tICcuL3dpa2lfZWRpdCdcbmltcG9ydCBXaWtpU2hvdyBmcm9tICcuL3dpa2lfc2hvdydcblxuY29uc3QgV2lraUFwcCA9ICgpID0+IChcbiAgPFJvdXRlcj5cbiAgICA8ZGl2PlxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPFJvdXRlIHBhdGg9Jy91c2VycycgY29tcG9uZW50PXtTTlNVc2Vyc30gLz5cbiAgICAgICAgPFJvdXRlIHBhdGg9Jy90aW1lbGluZScgY29tcG9uZW50PXtTTlNUaW1lbGluZX0gLz5cbiAgICAgICAgPFJvdXRlIHBhdGg9Jy9sb2dpbicgY29tcG9uZW50PXtTTlNMb2dpbn0gLz5cbiAgICAgICAgPFJvdXRlIHBhdGg9Jy93aWtpLzpuYW1lJyBjb21wb25lbnQ9e1dpa2lTaG93fSAvPlxuICAgICAgICA8Um91dGUgcGF0aD0nL2VkaXQvOm5hbWUnIGNvbXBvbmVudD17V2lraUVkaXR9IC8+XG4gICAgICA8L1N3aXRjaD5cbiAgICA8L2Rpdj5cbiAgPC9Sb3V0ZXI+XG4pXG5cbi8vRE9N44Gr44Oh44Kk44Oz44Kz44Oz44Od44O844ON44Oz44OI44KS5pu444GN6L6844KAXG5SZWFjdERPTS5yZW5kZXIoXG4gIDxXaWtpQXBwIC8+LFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXG4pIl0sInNvdXJjZVJvb3QiOiIifQ==